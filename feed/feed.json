{
  "version": "https://jsonfeed.org/version/1",
  "title": "Evan Savage",
  "home_page_url": "https://blog.savageevan.com/",
  "feed_url": "https://blog.savageevan.com/feed/feed.json",
  "description": "Evan Savage&#39;s personal blog about software, life, travel, and other sundry things.",
  "author": {
    "name": "Evan Savage",
    "url": "https://savageevan.com"
  },
  "items": [{
      "id": "https://blog.savageevan.com/posts/2014-06-20-running-a-1-mb-slash-s-tor-relay-on-linode/",
      "url": "https://blog.savageevan.com/posts/2014-06-20-running-a-1-mb-slash-s-tor-relay-on-linode/",
      "title": "Running a 1 MB/s Tor relay on Linode",
      "content_html": "<p><a href=\"https://savageinter.net/\">Savage Internet</a> is proud to announce that we're now running a 1 MB/s <a href=\"https://www.torproject.org/\">Tor</a> exit relay.  How much is this costing us?  $10/month, thanks to <a href=\"https://www.linode.com/\">Linode's</a> excellent data transfer caps.  In this post, we'll explain how we set that up.</p>\n<p>If you're not sure what Tor is, <a href=\"https://www.eff.org/torchallenge/what-is-tor.html\">read this article</a>.</p>\n<!-- more -->\n<h2 id=\"our-node\">Our Node <a class=\"direct-link\" href=\"#our-node\">#</a></h2>\n<p>is listed <a href=\"https://globe.torproject.org/#/relay/D85D427500E47F6D1408C883FAB56AF4ED55F3EA\">on Globe</a>.  As of time of writing, we're still <a href=\"https://blog.torproject.org/blog/lifecycle-of-a-new-relay\">ramping up</a>, so our advertised bandwidth will be lower than 1 MB/s for a few days.</p>\n<h2 id=\"setting-up-a-tor-relay-on-linode\">Setting up a Tor Relay on Linode <a class=\"direct-link\" href=\"#setting-up-a-tor-relay-on-linode\">#</a></h2>\n<h3 id=\"step-1%3A-set-up-your-linode-instance\">Step 1: Set up your Linode instance <a class=\"direct-link\" href=\"#step-1%3A-set-up-your-linode-instance\">#</a></h3>\n<p>Go to <a href=\"https://www.linode.com/\">linode.com</a>, sign up, and add a Linode 1GB instance to your account.  You can follow Linode's <a href=\"https://library.linode.com/getting-started\">Getting Started instructions</a>.  We're using Ubuntu as the distro, mainly because we're familiar with it and we wanted to get this up and running as quickly as possible!</p>\n<h3 id=\"step-2%3A-install-tor\">Step 2: Install Tor <a class=\"direct-link\" href=\"#step-2%3A-install-tor\">#</a></h3>\n<p>There are some good instructions <a href=\"https://www.darkcoding.net/society/running-a-tor-relay-node-server-on-ubuntu/\">here</a>, but they boil down to:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ gpg --keyserver keys.gnupg.net --recv 886DDD89<br>$ gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> apt-key <span class=\"token function\">add</span> -<br>$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update<br>$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> tor tor-arm</code></pre>\n<p>Once Tor is installed, you need to configure it.</p>\n<h3 id=\"step-3%3A-basic-tor-configuration\">Step 3: Basic Tor Configuration <a class=\"direct-link\" href=\"#step-3%3A-basic-tor-configuration\">#</a></h3>\n<p>We'll get to exit policies in a bit, but:</p>\n<ul>\n<li>set <code>ORPort</code> (or just uncomment it);</li>\n<li>give yourself a <code>Nickname</code>, and set <code>ContactInfo</code>;</li>\n<li>set <code>RelayBandwidthRate</code>, <code>RelayBandwidthBurst</code> (in our case, 1 MB/s).</li>\n</ul>\n<h3 id=\"step-4%3A-exit-policy-configuration\">Step 4: Exit Policy Configuration <a class=\"direct-link\" href=\"#step-4%3A-exit-policy-configuration\">#</a></h3>\n<p>The Tor Project recommends <a href=\"https://trac.torproject.org/projects/tor/wiki/doc/ReducedExitPolicy\">this exit policy</a>, which allows roughly 65 ports.</p>\n<h3 id=\"step-5%3A-block-bittorrent-using-iptables\">Step 5: Block BitTorrent using iptables <a class=\"direct-link\" href=\"#step-5%3A-block-bittorrent-using-iptables\">#</a></h3>\n<p>We went one step further and blocked common markers of BitTorrent traffic, using <a href=\"https://docs.google.com/document/d/1gaoln96He6yVFcAHoZGPdnDioMrqbABqw2s6nx2wdiI/edit\">this set of iptables rules</a>.</p>\n<h3 id=\"step-6%3A-run!\">Step 6: Run! <a class=\"direct-link\" href=\"#step-6%3A-run!\">#</a></h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">service</span> tor start<br>$ arm                      <span class=\"token comment\"># to see awesome graphs</span></code></pre>\n<h2 id=\"appendix\">Appendix <a class=\"direct-link\" href=\"#appendix\">#</a></h2>\n<h3 id=\"what-is-tor%3F\">What is Tor? <a class=\"direct-link\" href=\"#what-is-tor%3F\">#</a></h3>\n<p><a href=\"https://www.eff.org/torchallenge/what-is-tor.html\">EFF's Tor Challenge site</a> explains that far better than we could:</p>\n<blockquote>\nTor is a service that helps you to protect your anonymity while using the Internet.\n</blockquote>\n<h3 id=\"why-linode%3F\">Why Linode? <a class=\"direct-link\" href=\"#why-linode%3F\">#</a></h3>\n<p>We compared several <a href=\"https://en.wikipedia.org/wiki/Virtual_private_server\">virtual private server</a> providers.  <a href=\"https://www.linode.com/pricing\">Linode</a> offers relatively high bandwidth caps: their $10/month plan, for instance, gives you 2TB/month outgoing with unlimited incoming, which is enough to sustain 700 KB/s <em>24/7</em>.  <a href=\"https://aws.amazon.com/ec2/\">Amazon EC2</a> doesn't even compare: bandwidth charges alone for that much traffic would be about $200/month.</p>\n<p><a href=\"https://www.noisebridge.net/\">Noisebridge</a> runs <a href=\"https://globe.torproject.org/#/search/query=noiseexit\">four Tor exit relays</a> using QuadraNet dedicated servers. Dedicated servers are more attractive once you ramp up capacity.  With QuadraNet, for instance, $700/month gets you 1Gbps unmetered, or 125 MB/s - Linode 64GB instances are comparable in cost, but those only get you 20TB/month, or 7MB/s. Since our goals are a relatively modest 1 MB/s, this would be overkill; for the same reason, we didn't look into colocation either.</p>\n<h3 id=\"why-block-bittorrent%3F-i-thought-this-was-about-freedom!\">Why block BitTorrent?  I thought this was about freedom! <a class=\"direct-link\" href=\"#why-block-bittorrent%3F-i-thought-this-was-about-freedom!\">#</a></h3>\n<p>From Linode's Terms of Service:</p>\n<blockquote cite=\"https://www.linode.com/tos\">\n  <p>\nLinode does not prohibit the use of distributed, peer to peer network services such as Tor, nor does Linode routinely monitor the network communications of customer Linodes as a normal business practice. However, customers are responsible for the contents of network traffic exiting their Linode. Any usage that prompts the receipt of abuse complaints pertaining to violation of United States and/or international copyright law must be promptly discontinued to avoid service cancellation for violation of these terms.\n</p>\n  <footer>&ndash; Linode, <cite><a href=\"https://www.linode.com/tos\">Linode Terms of Service</a></footer>\n</blockquote>\n<p>In practical terms: if you run an exit relay, Linode <em>will</em> receive DMCA takedown notices for your IP address.  They <em>will</em> pass those on to you, making them your responsibility.</p>\n<p>To mitigate this risk, we block BitTorrent.  Otherwise we'll eventually have to</p>\n<ul>\n<li>take down the node; or</li>\n<li><code>ExitPolicy reject *:*</code>; or</li>\n<li>move elsewhere.</li>\n</ul>\n<p>An offline node is of use to no one.  A middle relay is less useful, since overall Tor network performance relies upon having exit nodes.  Moving elsewhere is doable, but it would definitely be less cost-effective (at least at our current scale - see below).</p>\n<p>Another option is to donate to other relay operators.  Donations are more cost-effective in increasing Tor network bandwidth, but this comes <a href=\"https://blog.torproject.org/blog/turning-funding-more-exit-relays\">at the expense of network diversity</a>.  (If you don't see why this is a problem, consider what happens when a malicious actor - NSA/GCHQ/etc., for instance - operates some proportion of Tor relays.)</p>\n<p>Even if Linode handled DMCA complaints differently, a relay that's swamped with high-bandwidth, high-connection-count traffic from BitTorrent is of use to far fewer people than one that isn't.  We'd rather support people who <em>need</em> Tor than some dude who just can't find that awesome movie on Netflix.</p>\n<p>If that's not enough for you, the Tor Project itself notes that <a href=\"https://blog.torproject.org/blog/bittorrent-over-tor-isnt-good-idea\">BitTorrent over Tor isn't a good idea</a>, as it leaks identifying information and generally hurts network performance.</p>\n<p>So: we have nothing against BitTorrent, and we do wish the DMCA would burn and die, but we will make every effort possible to prevent BitTorrent traffic from running through our relay.</p>\n<h3 id=\"last-words\">Last Words <a class=\"direct-link\" href=\"#last-words\">#</a></h3>\n<p>This is easy to do and relatively inexpensive, and if you run a 1 MB/s relay you <a href=\"https://www.eff.org/torchallenge/#getstarted\">might get a T-shirt from the EFF</a>.</p>\n",
      "date_published": "2014-06-20T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2013-10-09-a-tale-of-two-trips/",
      "url": "https://blog.savageevan.com/posts/2013-10-09-a-tale-of-two-trips/",
      "title": "A Tale of Two Trips",
      "content_html": "<p>This summer, <a href=\"https://www.eecs.berkeley.edu/~valkyrie/\">Valkyrie</a> and I travelled through Eastern Asia.  We started with the Great Barrier Reef and rainforests near Cairns, then went onwards to Singapore, Vietnam, Cambodia, Malaysia, and Korea before spending three typhoon-stricken days holed up in Manila, Philippines.</p>\n<p>As with our <a href=\"https://savageinternet.github.io/biketotheearth/\">bike trip</a>, we kept a <a href=\"https://ramblelust.savageinter.net/\">daily journal</a> of our travels in blog form.  In this post, I visualize the two trips from our blog entries using some simple word count graphs.  These aren't the most sophisticated visualizations possible, but they provide a simple starting point to build upon in future blog posts.</p>\n<!-- more -->\n<p>First of all, it feels good to write another post!  The rapidly upcoming <a href=\"https://quantifiedself.com/blog/announcing-the-2013-quantified-self-global-conference/\">Quantified Self 2013 Global Conference</a> seemed like a good excuse to break seven months of blog neglect, so here I am.</p>\n<p>I'll refer to these trips as <em>Bike to the Earth</em> and <em>Ramblelust</em> respectively, following the names of each trip blog.  Let's start with a look at the broadest of broad textual measures, word count.</p>\n<h2 id=\"word-count\">Word Count <a class=\"direct-link\" href=\"#word-count\">#</a></h2>\n<p>How many words did we write for each trip?  How many per post, on average?</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ python global_word_count.py <span class=\"token operator\">&lt;</span> BikeToTheEarth/posts_normalized.json<br><span class=\"token number\">141329</span> words <span class=\"token keyword\">in</span> <span class=\"token number\">197</span> posts <span class=\"token punctuation\">(</span><span class=\"token number\">717</span> words/post<span class=\"token punctuation\">)</span><br><br>$ python global_word_count.py <span class=\"token operator\">&lt;</span> Ramblelust/posts_normalized.json<br><span class=\"token number\">61010</span> words <span class=\"token keyword\">in</span> <span class=\"token number\">86</span> posts <span class=\"token punctuation\">(</span><span class=\"token number\">709</span> words/post<span class=\"token punctuation\">)</span></code></pre>\n<p>Not much difference here.  What happens if we graph the word counts over time? Top is Bike to the Earth, bottom is Ramblelust.</p>\n<img src=\"https://lh4.googleusercontent.com/-5Sv5_JZEDdw/UlcoazZGSxI/AAAAAAAAAks/9TZH7nDzpnQ/w1000/biketotheearth_daily_words.jpg\" />\n<img src=\"https://lh6.googleusercontent.com/-BW5K-iWb56c/UlcoZ4fktZI/AAAAAAAAAkw/3g2w4bbbMtI/w1000/ramblelust_daily_words.jpg\" />\n<p>One point jumps out on the Bike to the Earth graph: <a href=\"https://savageinternet.github.io/biketotheearth/posts/2010/10/19/hellbania.html\">this post</a>, a massive 3600-word whopper that details our arduous exit from the rain-stricken Albanian coastline and into Greece.  For comparison, our longest post from Ramblelust was <a href=\"https://ramblelust.savageinter.net/blog/2013/06/29/cam-ranh-ing-around/\">this one</a> about our CouchSurfing experiences in Cam Ranh, a short distance south from Nha Trang along the Vietnamese coast.</p>\n<p>Still, it's hard to make much out of such noisy data.  Let's smooth that a bit by looking at weekly averages. Again, top is Bike to the Earth, bottom is Ramblelust.</p>\n<img src=\"https://lh6.googleusercontent.com/-9YT2XueNpAs/UlcodH_CpwI/AAAAAAAAAkk/0ZnCYmXSMJc/w1000/biketotheearth_daily_words_smoothed.jpg\" />\n<img src=\"https://lh4.googleusercontent.com/-C-Q604GWq84/UlcoesNibrI/AAAAAAAAAjk/8RHMmaBdOi0/w1000/ramblelust_daily_words_smoothed.jpg\" />\n<p>Now another pattern pops out of the Bike to the Earth data: sometime around the beginning of September, our writing output doubled.  At that time, we were just entering Italy, where we were sandwiched in between the southern Alps and the sea for about 900km before reaching Rome.</p>\n<p>As I go through this process, I'm constantly jumping back and forth between the blog posts and these graphs.  As with all visualization, this context is an essential part of understanding the data.</p>\n<h2 id=\"next-steps\">Next Steps <a class=\"direct-link\" href=\"#next-steps\">#</a></h2>\n<p>There are lots of places we could go from here:</p>\n<ul>\n<li>sentiment analysis;</li>\n<li>location-based visualization (by combining with country data);</li>\n<li>authorship analysis (my posts vs. Valkyrie's posts)...</li>\n</ul>\n<p>...the list goes on.  What would you like to see?  Comment via Facebook or Twitter to let me know, and I'll put it into the next blog post.</p>\n",
      "date_published": "2013-10-09T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2013-03-04-another-quadtree-map-rendering/",
      "url": "https://blog.savageevan.com/posts/2013-03-04-another-quadtree-map-rendering/",
      "title": "Another Quadtree Map Rendering",
      "content_html": "<p>This will be a quick post: I've got another population-based map rendering to<br>\nshare, based on the work described in <a href=\"/posts/2013-02-21-quadtree-cartography/\">this post</a>.</p>\n<!-- more -->\n<h2 id=\"the-rendering\">The Rendering <a class=\"direct-link\" href=\"#the-rendering\">#</a></h2>\n<p>This rendering uses tiles at Google Maps zoom level 14:</p>\n<img src=\"https://lh5.googleusercontent.com/-74zVhVDHIdc/UTVAtI4bhcI/AAAAAAAAAWY/sWT9JplWl7k/s800/tiles14.2048.jpg\" />\n<p>I decided to experiment with solid shading rather than wireframe for the tiles.  This cuts down on the <a href=\"http://en.wikipedia.org/wiki/Moir%C3%A9_pattern\">Moiré effect</a> in densely populated areas.</p>\n<p>The original is a <em>whopping 1 gigapixels</em>, so I had to resize it using <a href=\"http://www.imagemagick.org/script/index.php\">ImageMagick</a> before uploading it to Picasa:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ convert tiles14.jpg -sample 2048x2048 tiles14.2048.jpg</code></pre>\n<p>A few more random tidbits of information:</p>\n<ul>\n<li>Computing the tile subdivision <em>took one CPU-hour</em> on my laptop, a fairly new MacBook Air.</li>\n<li>At zoom level 14, tiles near the equator are <em>roughly 1.5 miles to a side.</em> (Tiles further north or south are shorter in the north-south direction due to distortion in the Mercator projection.)</li>\n<li><em>The Nile is clearly visible</em> between the Nile Delta and Aswan.</li>\n</ul>\n<h2 id=\"next-post\">Next Post <a class=\"direct-link\" href=\"#next-post\">#</a></h2>\n<p>In my next post, I'll dive into <a href=\"https://savageinternet.github.io/biketotheearth/\">six months of journal entries</a> from a <a href=\"http://goo.gl/maps/0Xs55\">six-month bike trip</a> that <a href=\"http://www.eecs.berkeley.edu/~valkyrie/\">Valkyrie Savage</a> and I took back in 2010.</p>\n",
      "date_published": "2013-03-04T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2013-02-21-quadtree-cartography/",
      "url": "https://blog.savageevan.com/posts/2013-02-21-quadtree-cartography/",
      "title": "Quadtree Cartography",
      "content_html": "<p>In this post, I show off some images from a project I'm working on (which will remain nameless for now!) These images visualize subdivisions of the Earth into Google Maps tile-sized regions with roughly equal population. I'll also provide a brief and non-technical rundown of the process by which I generated these images.</p>\n<!-- more -->\n<h2 id=\"the-images\">The Images <a class=\"direct-link\" href=\"#the-images\">#</a></h2>\n<p>First, a representative image from my renderings:</p>\n<img src=\"https://lh5.googleusercontent.com/-EmN0ma8uhtg/USZnFkGsrfI/AAAAAAAAAV8/hDpa5sx1-IE/s640/tiles11.ag.jpg\" />\n<p>I love working on problems with a visual aspect - you get direct sensory<br>\nfeedback on your progress!</p>\n<p>Here, we can clearly see the continents delineated by dense coastal population clusters. India and China are especially detailed, and Europe has fairly uniform density throughout. Contrast this with North America: northern Canada is sparsely populated, as are the deserts and mountains of the Central United States.</p>\n<p>Next, some renderings at different subdivision levels (Google Maps zoom levels 8-11):</p>\n<img src=\"https://lh4.googleusercontent.com/-SqLGYcz6yl0/USZnBXDoUNI/AAAAAAAAAUs/C7vdLkL522Y/s288/tiles8.ag60.jpg\" />\n<img src=\"https://lh5.googleusercontent.com/-m2wk-ov9Mw4/USZnBmDUucI/AAAAAAAAAU0/vrU48gzJei4/s288/tiles9.ag60.jpg\" />\n<img src=\"https://lh6.googleusercontent.com/-GuXnAIjWUf0/USZnCbAac_I/AAAAAAAAAU8/urh1UXBD3-U/s288/tiles10.ag60.jpg\" />\n<img src=\"https://lh6.googleusercontent.com/-Y53pPe7T0II/USZnCn5ZL3I/AAAAAAAAAVI/Owjf_pnQBic/s288/tiles11.ag60.jpg\" />\n<p>As the subdivision level increases, the continents progress from blocky pixel art to more recognizable shapes.</p>\n<p>Finally, some renderings with different resolutions of the underlying population data (degree, half-degree, quarter-degree, and 2.5 arc minutes):</p>\n<img src=\"https://lh6.googleusercontent.com/-GuXnAIjWUf0/USZnCbAac_I/AAAAAAAAAU8/urh1UXBD3-U/s288/tiles10.ag60.jpg\" />\n<img src=\"https://lh6.googleusercontent.com/-RRw5Gx4OiaA/USZnEQhqNhI/AAAAAAAAAVg/i6B3yx8BF_M/s288/tiles10.ag30.jpg\" />\n<img src=\"https://lh5.googleusercontent.com/-NkGpf7zzHsY/USZnFI4qQ7I/AAAAAAAAAV4/Kl1UB4U-4pU/s288/tiles10.ag15.jpg\" />\n<img src=\"https://lh6.googleusercontent.com/-n6Ufe_6mJzM/USZnF60IfvI/AAAAAAAAAWE/PEmAgvWvzNU/s288/tiles10.ag.jpg\" />\n<p>Here the effect is more subtle: detail is added in densely populated areas, but larger tiles (corresponding to more remote regions) are mostly unaffected.</p>\n<p>To see all the images as small multiples, <a href=\"https://picasaweb.google.com/100933554722754572774/20130221QuadtreeCartography#\">view the album on Picasa</a>.</p>\n<h2 id=\"the-process\">The Process <a class=\"direct-link\" href=\"#the-process\">#</a></h2>\n<p>There are four major steps: getting the data, combining it with Google Maps tile data, building the subdivision, and rendering it.</p>\n<h3 id=\"getting-the-data\">Getting the Data <a class=\"direct-link\" href=\"#getting-the-data\">#</a></h3>\n<p>The <a href=\"http://sedac.ciesin.columbia.edu/citations\">NASA Socio-Economic Data and Applications Center</a>, or SEDAC, compiles global population grids. These grids contain the estimated number of people living in each 2.5-arc-minute square of the Earth's surface. 2.5 arc-minutes is 1/24 of a degree, or about 4.5 km of equatorial circumference: definitely high-resolution enough for building some awesome maps!</p>\n<p>The population count grids are available <a href=\"http://sedac.ciesin.columbia.edu/data/set/gpw-v3-population-count/data-download\">here</a>. You have to register on the site and cite usage of their data, but otherwise it appears to be freely available.</p>\n<h3 id=\"combining-with-google-maps\">Combining with Google Maps <a class=\"direct-link\" href=\"#combining-with-google-maps\">#</a></h3>\n<p>Google Maps uses a <a href=\"https://en.wikipedia.org/wiki/Mercator_projection\">Mercator projection</a>. This projection is <a href=\"https://developers.google.com/maps/documentation/javascript/maptypes#WorldCoordinates\">truncated</a> at roughly 85 degrees latitude to create a square map, which is then projected onto a 256 x 256 world coordinate system. Finally, world coordinates are mapped to <a href=\"https://developers.google.com/maps/documentation/javascript/maptypes#PixelCoordinates\">pixel coordinates</a> at different zoom levels, which determine which <a href=\"https://developers.google.com/maps/documentation/javascript/maptypes#TileCoordinates\">tile</a> your location falls in.</p>\n<p>To match up the gridded population data with Google Maps tiles, then, we need to do the following:</p>\n<ul>\n<li>for each grid cell, <em>determine its latitude and longitude boundaries</em>;</li>\n<li>use those boundaries to <em>figure out which map tiles the cell overlaps</em>;</li>\n<li><em>divide the cell's population among those map tiles</em>.</li>\n</ul>\n<p>To divide the cell's population fairly, I determine how much of the cell overlaps each tile.</p>\n<p>I found <a href=\"https://google-developers.appspot.com/maps/documentation/javascript/examples/map-coordinates\">this helpful example</a> of working with locations, world coordinates, pixel coordinates, and tiles. The source code of that example contains an implementation of Google's Mercator projection, which I built into a larger <a href=\"https://nodejs.org/\">node.js</a> utility for computing the equal-population subdivision.</p>\n<p>(Yes, node.js is fine for CPU-intensive tasks, just not in the same process as your webserver.)</p>\n<h3 id=\"building-an-equal-population-subdivision\">Building an Equal-Population Subdivision <a class=\"direct-link\" href=\"#building-an-equal-population-subdivision\">#</a></h3>\n<p>To get map tiles of equal population, <em>I combine tiles into larger tiles until the population exceeds a threshold.</em> This creates large tiles in sparsely populated areas while leaving smaller tiles in densely populated areas.</p>\n<p>(I mentioned <a href=\"https://blog.notdot.net/2009/11/Damn-Cool-Algorithms-Spatial-indexing-with-Quadtrees-and-Hilbert-Curves\">quadtrees</a> in the title of this post - this data structure is ideally suited for the problem.)</p>\n<h3 id=\"rendering-the-subdivision\">Rendering the Subdivision <a class=\"direct-link\" href=\"#rendering-the-subdivision\">#</a></h3>\n<p>This is the easy part! I used <a href=\"https://pypi.python.org/pypi/Pillow/\">Pillow</a>, a nicely-packaged version of the excellent Python Imaging Library, to render the subdivisions out as JPEG images.</p>\n<p>(I suppose I could have rendered SVG images in node.js using some <a href=\"https://github.com/tmpvar/jsdom\">jsdom</a> and <a href=\"https://d3js.org/\">d3</a> hackery, but I was already familiar with using Python Imaging Library for image synthesis.)</p>\n",
      "date_published": "2013-02-21T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2013-02-07-applying-genetic-research-to-my-23andme-data/",
      "url": "https://blog.savageevan.com/posts/2013-02-07-applying-genetic-research-to-my-23andme-data/",
      "title": "Applying Genetic Research To My 23andMe Data",
      "content_html": "<p>To calculate your risk of various diseases, 23andMe scours the medical research literature for studies that correlate incidence rates for those diseases with mutations at specific locations in the human genome. The locations where these mutations commonly occur are referred to as single-nucleotide polymorphisms, or <a href=\"http://en.wikipedia.org/wiki/Single-nucleotide_polymorphism\">SNPs</a>.</p>\n<p>In this post, I show how I applied the findings of <a href=\"http://www.nature.com/npp/journal/v33/n12/full/npp200817a.html\">this study about caffeine-induced anxiety</a> to discover more about myself. I have no genetic research background whatsoever, and my knowledge of genetics is minimal, so it's amazing that this is slowly becoming accessible to a wider audience.</p>\n<!-- more -->\n<h2 id=\"the-genetic-culprit\">The Genetic Culprit <a class=\"direct-link\" href=\"#the-genetic-culprit\">#</a></h2>\n<p>From the study abstract:</p>\n<blockquote cite=\"https://www.nature.com/npp/journal/v33/n12/full/npp200817a.html\">\n  <p>\nAt the 150 mg dose of caffeine, we found a significant association between caffeine-induced anxiety (Visual Analog Scales, VAS) and ADORA2A rs5751876 (1976C/T), rs2298383 (intron 1a) and rs4822492 (3′-flank), and DRD2 rs1110976 (intron 6).\n</p>\n  <footer>&ndash; Childs et al., <cite><a href=\"https://www.nature.com/npp/journal/v33/n12/full/npp200817a.html\">Association between ADORA2A and DRD2 Polymorphisms and Caffeine-Induced Anxiety</a></footer>\n</blockquote>\n<p>The SNPs <code>rs5751876</code>, <code>rs2298383</code>, <code>rs4822492</code>, and a few others are claimed here to relate to caffeine-induced anxiety. Reading further, <a href=\"http://www.nature.com/npp/journal/v33/n12/fig_tab/npp200817f4.html#figure-title\">Figure 4</a> and <a href=\"http://www.nature.com/npp/journal/v33/n12/fig_tab/npp200817t4.html#figure-title\">Figure 5</a> show <em>which variations are correlated with higher anxiety.</em> Here's a quick summary of the high-anxiety variations listed in those figures:</p>\n<ul>\n<li><code>rs5751876</code>: T/T (vs. C/C, C/T)</li>\n<li><code>rs2298383</code>: C/C (vs. T/T, C/T)</li>\n<li><code>rs4822492</code>: C/C (vs. G/G, G/C)</li>\n<li><code>rs1110976</code>: G/G (vs. G/-)</li>\n</ul>\n<p>Armed with this information, I can check my own genome for variations at those SNPs.</p>\n<h2 id=\"checking-my-genome\">Checking My Genome <a class=\"direct-link\" href=\"#checking-my-genome\">#</a></h2>\n<p>In the appendix of <a href=\"/posts/2013-02-04-the-behavioral-economics-of-23andme-results/\">this blog post</a>, I discuss how to retrieve your genetic data from the 23andMe API. I followed those directions with two changes:</p>\n<ul>\n<li>I used the authorization scope <code>genomes</code>;</li>\n<li>I accessed the API endpoint <code>https://api.23andme.com/1/genomes/&lt;id&gt;</code>, where <code>&lt;id&gt;</code> is my internal ID. This ID is returned with every response from their API.</li>\n</ul>\n<p>I downloaded the genomic data as <code>genome.json</code>:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> https://api.23andme.com/1/genomes/<span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span>/ -H <span class=\"token string\">\"Authorization: Bearer &lt;access_token>\"</span> <span class=\"token operator\">></span> genome.json</code></pre>\n<p>To help extract the specific SNPs listed above, I wrote<br>\n<a href=\"https://github.com/candu/quantified-savagery-files/blob/master/Genetics/extractSNP.py\">a quick Python script</a>.<br>\nRunning it, I get my results:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ python extractSNP.py rs5751876 rs2298383 rs4822492 rs1110976 <span class=\"token operator\">&lt;</span> genome.json<br>rs5751876       TT<br>rs2298383       CC</code></pre>\n<p>23andMe doesn't provide data on the <code>rs4822492</code> or <code>rs1110976</code> SNPs, but I can see that <em>I have the high-anxiety variations</em> at <code>rs5751876</code> and <code>rs2298383</code>.</p>\n<p>The script uses 23andMe's <a href=\"https://api.23andme.com/res/txt/snps.data\">SNP list</a>, which identifies the locations of all SNPs that they look for. The first time you run <code>extractSNP.py</code>, it will generate an index of all 23andMe SNPs in <code>.snps-index</code> to make subsequent runs faster. Once you have your <code>genome.json</code> data and have built the <code>.snps-index</code> index, <em>you can look up any SNP or group of SNPs in about a second.</em></p>\n<h2 id=\"summary\">Summary <a class=\"direct-link\" href=\"#summary\">#</a></h2>\n<p>To apply genetic research findings to your genomic data:</p>\n<ul>\n<li>Use the process described in <a href=\"/posts/2013-02-04-the-behavioral-economics-of-23andme-results/\">this blog post</a> with scope <code>genomes</code> and API endpoint <code>https://api.23andme.com/1/genomes/&lt;id&gt;</code> to download your genetic data. Save it as <code>genome.json</code>.</li>\n<li>Download <a href=\"https://github.com/candu/quantified-savagery-files/blob/master/Genetics/extractSNP.py\">my script</a> into the same folder as <code>genome.json</code>.</li>\n<li>Find a paper, journal article, etc. that mentions specific SNPs (those funny <code>rsXXX</code> or <code>iXXX</code> numbers).</li>\n<li>Run <code>python extractSNP.py rsXXX &lt; genome.json</code> to search for those SNPs in your genome.</li>\n</ul>\n<h2 id=\"caveats\">Caveats <a class=\"direct-link\" href=\"#caveats\">#</a></h2>\n<p>This is still a highly manual process, and you'll need some familiarity with the command line to pull it off. We haven't quite reached the promised near-future where the deepest insights about our personal genetics are easily available.</p>\n<p>23andMe's data is incomplete: they only had two of the four listed SNPs. That said, it's far better than nothing!</p>\n<p>Also, there's room for skepticism regarding the underlying research. Only 102 participants took part, all of European-American descent. The subjects all had stated caffeine intake levels of less than 300mg per day, or about 3 cups' worth - that's a pretty wide range of potential tolerances. Subjects rated their anxiety on a subjective scale. The researchers also took measurements of heart rate and blood pressure, but did not incorporate that data into the anxiety rankings.</p>\n<p>No single study is perfect. For more reliable results, you'll want to dig up findings that are supported by multiple studies.</p>\n",
      "date_published": "2013-02-07T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2013-02-04-the-behavioral-economics-of-23andme-results/",
      "url": "https://blog.savageevan.com/posts/2013-02-04-the-behavioral-economics-of-23andme-results/",
      "title": "The Behavioral Economics of 23AndMe Results",
      "content_html": "<p>Over the holidays, I received a 23andMe genetic testing kit as a gift. In this post, I'll take a look at my results through the lens of prospect theory, which aims to quantify our perception of risk. 23andMe results estimate your lifetime likelihood of various medical conditions, making them a great dataset for testing out these concepts in behavioral economics.</p>\n<!-- more -->\n<h2 id=\"prospect-theory%3A-a-quick-example\">Prospect Theory: A Quick Example <a class=\"direct-link\" href=\"#prospect-theory%3A-a-quick-example\">#</a></h2>\n<p>Suppose I offer you a bet. I flip a fair coin once. Heads, you gain \\$1000; tails, you lose \\$900. Do you take the bet? Probability dictates that you should, since you would expect to come out $ (1000 - 900) / 2 = 50 $ dollars ahead.</p>\n<p>If you're like most people, though, you have a <em>powerful aversion</em> to losing \\$900. This aversion is powerful enough that you'll decline the bet. This only makes sense if losing \\$900 has a greater negative value than the positive value of gaining \\$1000. In other words, your perception of value is <em>non-linear</em>. This perception underpins many real-world bets that make little sense from an expected utility standpoint:</p>\n<ul>\n<li><em>Insurance:</em> the buyer takes a small certain loss to avoid the risk of an uncertain and potentially large loss;</li>\n<li><em>Security:</em> the property owner takes a small certain loss to reduce the risk of an uncertain and potentially large loss;</li>\n<li><em>Lotteries:</em> the ticket holder takes a small certain loss to try for an extremely unlikely but massive gain.</li>\n</ul>\n<p><a href=\"http://www.princeton.edu/~kahneman/docs/Publications/prospect_theory.pdf\">Prospect theory</a> creates a mathematical framework for understanding our perceptions of value and risk. It's an awesome paper with highly approachable mathematics. Definitely recommended reading for anyone interested in economics, game theory, and the like.</p>\n<h2 id=\"my-disease-risk\">My Disease Risk <a class=\"direct-link\" href=\"#my-disease-risk\">#</a></h2>\n<p>Among other things, 23andMe can estimate your lifetime risk of various diseases. This information is divided into three categories according to whether your risk is highly elevated, highly decreased, or roughly typical:</p>\n<img src=\"https://lh4.googleusercontent.com/-xccLcJ7-CqU/URBE7QF2tCI/AAAAAAAAATs/sFewavaz6P4/s640/23andme_elevated_risk.jpg\" />\n<img src=\"https://lh4.googleusercontent.com/-D7AY4foE6Qs/URBE8FA3lBI/AAAAAAAAAT0/x76tZ9J5HP0/s640/23andme_decreased_risk.jpg\" />\n<img src=\"https://lh4.googleusercontent.com/-HU05eMXwI4M/URBE89TEu0I/AAAAAAAAAT8/MihVGsTQkLQ/s640/23andme_typical_risk.jpg\" />\n<p>Within each category, the diseases are ordered by decreasing confidence rating, then by decreasing absolute risk. The different confidence levels are as follows:</p>\n<ol>\n<li><em>Preliminary Research:</em> fewer than 100 people studied</li>\n<li><em>Preliminary Research:</em> fewer than 750 people studied</li>\n<li><em>Preliminary Research:</em> a single study with 750+ participants</li>\n<li><em>Established Research:</em> multiple studies with 750+ participants</li>\n</ol>\n<p>The 23andMe dashboard doesn't show estimated risk for lower-confidence findings, but I can fetch that information through their <a href=\"https://api.23andme.com/\">API</a>.</p>\n<p>Armed with my raw risk data, I can now play around with a pair of alternative disease rankings. As an anchoring point, here's my disease ranking by absolute risk:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ python risksort.py risk <span class=\"token operator\">&lt;</span> risks.json<br> <span class=\"token number\">1</span>                                            Obesity <span class=\"token number\">0.5701</span><br> <span class=\"token number\">2</span>                             Coronary Heart Disease <span class=\"token number\">0.5464</span><br> <span class=\"token number\">3</span>                                Atrial Fibrillation <span class=\"token number\">0.3392</span><br> <span class=\"token number\">4</span>                                    Prostate Cancer <span class=\"token number\">0.2602</span><br> <span class=\"token number\">5</span>                   Age-related Macular Degeneration <span class=\"token number\">0.2459</span><br> <span class=\"token number\">6</span>                                    Type <span class=\"token number\">2</span> Diabetes <span class=\"token number\">0.1969</span><br> <span class=\"token number\">7</span>                             Venous Thromboembolism <span class=\"token number\">0.1279</span><br> <span class=\"token number\">8</span>                                        Lung Cancer <span class=\"token number\">0.0823</span><br> <span class=\"token number\">9</span>                                          Psoriasis <span class=\"token number\">0.0708</span><br><span class=\"token number\">10</span>                                         Gallstones <span class=\"token number\">0.0618</span><br><span class=\"token number\">11</span>                                Alzheimer<span class=\"token string\">'s Disease 0.0493<br>12                                  Colorectal Cancer 0.0417<br>13                             Chronic Kidney Disease 0.0356<br>14                               Rheumatoid Arthritis 0.0300<br>15                             Restless Legs Syndrome 0.0245<br>16                               Exfoliation Glaucoma 0.0217<br>17                                           Melanoma 0.0216<br>18                                    Type 1 Diabetes 0.0137<br>19                                Parkinson'</span>s Disease <span class=\"token number\">0.0109</span><br><span class=\"token number\">20</span>                                 Ulcerative Colitis <span class=\"token number\">0.0066</span><br><span class=\"token number\">21</span>                                 Multiple Sclerosis <span class=\"token number\">0.0047</span><br><span class=\"token number\">22</span>          Esophageal Squamous Cell Carcinoma <span class=\"token punctuation\">(</span>ESCC<span class=\"token punctuation\">)</span> <span class=\"token number\">0.0043</span><br><span class=\"token number\">23</span>     Stomach Cancer <span class=\"token punctuation\">(</span>Gastric Cardia Adenocarcinoma<span class=\"token punctuation\">)</span> <span class=\"token number\">0.0028</span><br><span class=\"token number\">24</span>                                    Crohn's Disease <span class=\"token number\">0.0016</span><br><span class=\"token number\">25</span>                                   Bipolar Disorder <span class=\"token number\">0.0015</span><br><span class=\"token number\">26</span>                                     Celiac Disease <span class=\"token number\">0.0005</span><br><span class=\"token number\">27</span>               Scleroderma <span class=\"token punctuation\">(</span>Limited Cutaneous Type<span class=\"token punctuation\">)</span> <span class=\"token number\">0.0005</span><br><span class=\"token number\">28</span>                          Primary Biliary Cirrhosis <span class=\"token number\">0.0004</span><br><span class=\"token number\">29</span>                                      Breast Cancer <span class=\"token number\">0.0000</span><br><span class=\"token number\">30</span>               Lupus <span class=\"token punctuation\">(</span>Systemic Lupus Erythematosus<span class=\"token punctuation\">)</span> <span class=\"token number\">0.0000</span></code></pre>\n<p>The alternative ranking metric code can be found <a href=\"https://github.com/candu/quantified-savagery-files/blob/master/Genetics/risksort.py\">here</a>.</p>\n<h3 id=\"relative-risk-sorting\">Relative-Risk Sorting <a class=\"direct-link\" href=\"#relative-risk-sorting\">#</a></h3>\n<p>An obvious ranking metric is relative risk, which is already provided in the disease listing.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ python risksort.py relative_risk <span class=\"token operator\">&lt;</span> risks.json<br> <span class=\"token number\">1</span>                   Age-related Macular Degeneration <span class=\"token number\">3.7542</span><br> <span class=\"token number\">2</span>                               Exfoliation Glaucoma <span class=\"token number\">2.8933</span><br> <span class=\"token number\">3</span>                                   Bipolar Disorder <span class=\"token number\">1.5000</span><br> <span class=\"token number\">4</span>                                    Prostate Cancer <span class=\"token number\">1.4593</span><br> <span class=\"token number\">5</span>                                 Multiple Sclerosis <span class=\"token number\">1.3824</span><br> <span class=\"token number\">6</span>                                    Type <span class=\"token number\">1</span> Diabetes <span class=\"token number\">1.3431</span><br> <span class=\"token number\">7</span>                               Rheumatoid Arthritis <span class=\"token number\">1.2605</span><br> <span class=\"token number\">8</span>                             Restless Legs Syndrome <span class=\"token number\">1.2500</span><br> <span class=\"token number\">9</span>                                Atrial Fibrillation <span class=\"token number\">1.2494</span><br><span class=\"token number\">10</span>     Stomach Cancer <span class=\"token punctuation\">(</span>Gastric Cardia Adenocarcinoma<span class=\"token punctuation\">)</span> <span class=\"token number\">1.2174</span><br><span class=\"token number\">11</span>          Esophageal Squamous Cell Carcinoma <span class=\"token punctuation\">(</span>ESCC<span class=\"token punctuation\">)</span> <span class=\"token number\">1.1944</span><br><span class=\"token number\">12</span>                             Coronary Heart Disease <span class=\"token number\">1.1665</span><br><span class=\"token number\">13</span>                             Venous Thromboembolism <span class=\"token number\">1.0365</span><br><span class=\"token number\">14</span>                             Chronic Kidney Disease <span class=\"token number\">1.0349</span><br><span class=\"token number\">15</span>                                        Lung Cancer <span class=\"token number\">0.9728</span><br><span class=\"token number\">16</span>                                            Obesity <span class=\"token number\">0.8926</span><br><span class=\"token number\">17</span>                                         Gallstones <span class=\"token number\">0.8766</span><br><span class=\"token number\">18</span>                                 Ulcerative Colitis <span class=\"token number\">0.8571</span><br><span class=\"token number\">19</span>                                    Type <span class=\"token number\">2</span> Diabetes <span class=\"token number\">0.7656</span><br><span class=\"token number\">20</span>                                           Melanoma <span class=\"token number\">0.7552</span><br><span class=\"token number\">21</span>                                  Colorectal Cancer <span class=\"token number\">0.7500</span><br><span class=\"token number\">22</span>               Scleroderma <span class=\"token punctuation\">(</span>Limited Cutaneous Type<span class=\"token punctuation\">)</span> <span class=\"token number\">0.7143</span><br><span class=\"token number\">23</span>                                Alzheimer<span class=\"token string\">'s Disease 0.6885<br>24                                Parkinson'</span>s Disease <span class=\"token number\">0.6770</span><br><span class=\"token number\">25</span>                                          Psoriasis <span class=\"token number\">0.6238</span><br><span class=\"token number\">26</span>                          Primary Biliary Cirrhosis <span class=\"token number\">0.5000</span><br><span class=\"token number\">27</span>                                     Celiac Disease <span class=\"token number\">0.4167</span><br><span class=\"token number\">28</span>                                    Crohn's Disease <span class=\"token number\">0.3019</span><br><span class=\"token number\">29</span>                                      Breast Cancer <span class=\"token number\">0.0000</span><br><span class=\"token number\">30</span>               Lupus <span class=\"token punctuation\">(</span>Systemic Lupus Erythematosus<span class=\"token punctuation\">)</span> <span class=\"token number\">0.0000</span></code></pre>\n<h3 id=\"perceived-relative-risk-sorting\">Perceived Relative-Risk Sorting <a class=\"direct-link\" href=\"#perceived-relative-risk-sorting\">#</a></h3>\n<p>In prospect theory, a probability $ p $ has perceived weight $ w(p) $. In <a href=\"http://psych.fullerton.edu/mBIRNBAUM/psych466/articles/Tversky_Kahneman_JRU_92.pdf\">Advances in Prospect Theory: Cumulative Representation of Uncertainty</a>, Tversky and Kahneman fit $ w $ to observed results for subjects evaluating bets similar to the one listed above:</p>\n<img src=\"https://lh6.googleusercontent.com/-5qE_0uX1hdI/URBE9pc7ViI/AAAAAAAAAUE/Y-zgLP8Yp-8/s400/prospect_positive_graph.jpg\" />\n<img src=\"https://lh3.googleusercontent.com/-UWfKR_J2RBs/URBE-Dj67nI/AAAAAAAAAUM/CpO_z7VnPbM/s400/prospect_negative_graph.jpg\" />\n<p>The corresponding equations are</p>\n<p>$$<br>\nw^+(p) = \\frac{p^{0.61}}{(p^{0.61} + (1-p)^{0.61})^{\\frac{1}{0.61}}}<br>\n$$</p>\n<p>for positive prospects and</p>\n<p>$$<br>\nw^-(p) = \\frac{p^{0.69}}{(p^{0.69} + (1-p)^{0.69})^{\\frac{1}{0.69}}}<br>\n$$</p>\n<p>for negative prospects. If my risk is $ p_0 $ and the general risk is $ p $, I can define my perceived relative risk as</p>\n<p>$$<br>\nr = \\frac{w^+(p_0)}{w^+(p)}<br>\n$$</p>\n<p>if $ p_0 &lt; p $ (I consider decreased risk as a positive prospect!) and</p>\n<p>$$<br>\nr = \\frac{w^-(p_0)}{w^-(p)}<br>\n$$</p>\n<p>otherwise. The resulting rankings are pretty close to ordinary relative risk, but not identical:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">diff</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>python risksort.py relative_risk <span class=\"token operator\">&lt;</span> risks.json <span class=\"token punctuation\">\\</span><br>  <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -c-53<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>python risksort.py perceived_relative_risk <span class=\"token operator\">&lt;</span> risks.json <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -c-53<span class=\"token punctuation\">)</span><br><span class=\"token number\">13</span>,14c13,14<br><span class=\"token operator\">&lt;</span> <span class=\"token number\">13</span>                             Venous Thromboembolism<br><span class=\"token operator\">&lt;</span> <span class=\"token number\">14</span>                             Chronic Kidney Disease<br>---<br><span class=\"token operator\">></span> <span class=\"token number\">13</span>                             Chronic Kidney Disease<br><span class=\"token operator\">></span> <span class=\"token number\">14</span>                             Venous Thromboembolism<br><span class=\"token number\">16</span>,17c16,17<br><span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span>                                            Obesity<br><span class=\"token operator\">&lt;</span> <span class=\"token number\">17</span>                                         Gallstones<br>---<br><span class=\"token operator\">></span> <span class=\"token number\">16</span>                                         Gallstones<br><span class=\"token operator\">></span> <span class=\"token number\">17</span>                                            Obesity<br><span class=\"token number\">20</span>,23c20,23<br><span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span>                                           Melanoma<br><span class=\"token operator\">&lt;</span> <span class=\"token number\">21</span>                                  Colorectal Cancer<br><span class=\"token operator\">&lt;</span> <span class=\"token number\">22</span>               Scleroderma <span class=\"token punctuation\">(</span>Limited Cutaneous Type<span class=\"token punctuation\">)</span><br><span class=\"token operator\">&lt;</span> <span class=\"token number\">23</span>                                Alzheimer<span class=\"token string\">'s Disease<br>---<br>> 20                                  Colorectal Cancer<br>> 21                                           Melanoma<br>> 22                                Alzheimer'</span>s Disease<br><span class=\"token operator\">></span> <span class=\"token number\">23</span>               Scleroderma <span class=\"token punctuation\">(</span>Limited Cutaneous Type<span class=\"token punctuation\">)</span></code></pre>\n<p>The difference is due to distortion of small probabilities.</p>\n<h2 id=\"further-ideas\">Further Ideas <a class=\"direct-link\" href=\"#further-ideas\">#</a></h2>\n<p>So far, I've only used the probability weighting functions from prospect theory. I could also assign values to each disease:</p>\n<ul>\n<li><em>Financial:</em> how much does this disease cost to treat on average?</li>\n<li><em>Reduced Life Expectancy:</em> how many years of potential life do these diseases claim on average?</li>\n<li><em>Lifestyle:</em> how much impact would this have on my highly active lifestyle? On others who might have to support me?</li>\n</ul>\n<p>This is definitely morbid, but it's also potentially worthwhile. After all, insurance companies make <em>very detailed estimates of our risk.</em> They will certainly incorporate genetic data into their models as soon as it's legal to do so. If we want to make more informed decisions in situations involving risk, from medical insurance to lottery tickets, it helps to understand how we value different outcomes.</p>\n<h2 id=\"appendix%3A-how-to-use-the-23andme-api\">Appendix: How To Use The 23andMe API <a class=\"direct-link\" href=\"#appendix%3A-how-to-use-the-23andme-api\">#</a></h2>\n<p>The 23andMe API is actually quite easy to use, and their <a href=\"https://api.23andme.com/docs/authentication/\">documentation</a> is excellent. Nevertheless, I'll list the flow I went through to get my genetic disease risk data. If you're unfamiliar with <a href=\"http://oauth.net/2/\">OAuth 2.0</a>, the Google API docs include <a href=\"https://developers.google.com/accounts/docs/OAuth2\">this primer</a> complete with cute stick figure diagrams.</p>\n<p>First, I log into the API console and create an app. This gives me the <code>client_id</code> and <code>client_secret</code> parameters I need to initiate the flow. Looking at the <a href=\"https://api.23andme.com/docs/reference/\">23andMe API reference</a>, I see that I need permissions under the <code>analyses</code> scope, so I request that by visiting</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">https://api.23andme.com/authorize/?redirect_uri<span class=\"token operator\">=</span>http://localhost:5000/receive_code/<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">response_type</span><span class=\"token operator\">=</span>code<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">client_id</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>client_id<span class=\"token operator\">>&amp;</span><span class=\"token assign-left variable\">scope</span><span class=\"token operator\">=</span>analyses</code></pre>\n<p>in the browser. I'm redirected to</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">http://localhost:5000/receive_code/?code<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>code<span class=\"token operator\">></span></code></pre>\n<p>which gives me the auth code I need to request a token:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> https://api.23andme.com/token/ <span class=\"token punctuation\">\\</span><br>  -d <span class=\"token assign-left variable\">client_id</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>client_id<span class=\"token operator\">></span> <span class=\"token punctuation\">\\</span><br>  -d <span class=\"token assign-left variable\">client_secret</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>client_secret<span class=\"token operator\">></span> <span class=\"token punctuation\">\\</span><br>  -d <span class=\"token assign-left variable\">code</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>code<span class=\"token operator\">></span> <span class=\"token punctuation\">\\</span><br>  -d <span class=\"token assign-left variable\">grant_type</span><span class=\"token operator\">=</span>authorization_code <span class=\"token punctuation\">\\</span><br>  -d <span class=\"token string\">\"redirect_uri=http://localhost:5000/receive_code/\"</span> <span class=\"token punctuation\">\\</span><br>  -d <span class=\"token assign-left variable\">scope</span><span class=\"token operator\">=</span>analyses <span class=\"token operator\">></span> token.json<br>$ jsonpp token.json<br><span class=\"token punctuation\">{</span><br>  <span class=\"token string\">\"access_token\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"&lt;access_token>\"</span><br>  <span class=\"token string\">\"token_type\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"bearer\"</span>,<br>  <span class=\"token string\">\"expires_in\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">86400</span>,<br>  <span class=\"token string\">\"refresh_token\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"&lt;refresh_token>\"</span><br>  <span class=\"token string\">\"scope\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"analyses\"</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Finally, I use my shiny new <code>access_token</code> to get my genetic risk data:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> https://api.23andme.com/1/risks/ <span class=\"token punctuation\">\\</span><br>  -H <span class=\"token string\">\"Authorization: Bearer &lt;access_token>\"</span> <span class=\"token operator\">></span> risks.json<br>$ jsonpp risks.json <span class=\"token operator\">|</span> <span class=\"token function\">head</span><br><span class=\"token punctuation\">[</span><br>  <span class=\"token punctuation\">{</span><br>    <span class=\"token string\">\"id\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"6d2de403675a0d07\"</span>,<br>    <span class=\"token string\">\"risks\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><br>      <span class=\"token punctuation\">{</span><br>        <span class=\"token string\">\"description\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"Atrial Fibrillation\"</span>,<br>        <span class=\"token string\">\"risk\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">0.3392</span>,<br>        <span class=\"token string\">\"population_risk\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">0.2715</span>,<br>        <span class=\"token string\">\"report_id\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"atrialfib\"</span><br>      <span class=\"token punctuation\">}</span>,</code></pre>\n",
      "date_published": "2013-02-04T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2013-01-31-what-ill-look-like-in-50-years/",
      "url": "https://blog.savageevan.com/posts/2013-01-31-what-ill-look-like-in-50-years/",
      "title": "What I&#39;ll Look Like In 50 Years",
      "content_html": "<p>I spent a few weeks in the not-so-frozen Canadian northlands over the winter holidays. While there, I had the chance to visit an old childhood favorite: the <a href=\"https://ontariosciencecentre.ca/\">Ontario Science Centre</a>, six floors of science-based awesomeness. One of their current exhibits, the <a href=\"http://ontariosciencecentre.ca/aging/\">Amazing Aging Machine</a>, uses a computer vision software package called <a href=\"http://aprilage.com/\">APRIL</a> to predict how your face will change over the next 50 years.</p>\n<p>In this post, I explore my results from that exhibit alongside a customized aging I performed using the <a href=\"http://www.aprilage.com/AprilAPI_V2.pdf\">APRIL API</a>.</p>\n<!-- more -->\n<h2 id=\"present-me\">Present Me <a class=\"direct-link\" href=\"#present-me\">#</a></h2>\n<p>It's not the most flattering photo, but here I am at 26:</p>\n<img src=\"https://lh4.googleusercontent.com/-8qaAivSLFrI/UQrbKiU3JZI/AAAAAAAAARY/9e7IvKZUB00/s288/aging1.jpg\" />\n<h2 id=\"future-me\">Future Me <a class=\"direct-link\" href=\"#future-me\">#</a></h2>\n<h3 id=\"take-one%3A-amazing-aging-machine\">Take One: Amazing Aging Machine <a class=\"direct-link\" href=\"#take-one%3A-amazing-aging-machine\">#</a></h3>\n<p>First, my face balloons out massively:</p>\n<img src=\"https://lh4.googleusercontent.com/-LCFkNNtDiJg/UQrbKwGOIQI/AAAAAAAAARg/SS9o98axBtU/s288/aging2.jpg\" />\n<p>Next, my cheek bones set downwards:</p>\n<img src=\"https://lh5.googleusercontent.com/-VZhuI1uOVQk/UQrbLTKdBXI/AAAAAAAAARo/LHKV6cGEBGA/s288/aging3.jpg\" />\n<img src=\"https://lh6.googleusercontent.com/-aNcc-FC_4yk/UQrbL53IPpI/AAAAAAAAARs/DRf3ySCxPs4/s288/aging4.jpg\" />\n<p>Finally, my face leans up and wrinkles a tiny bit:</p>\n<img src=\"https://lh6.googleusercontent.com/-F8xBzpDWsM4/UQrbMUOukwI/AAAAAAAAAR0/cRqPDd_wYPM/s288/aging5.jpg\" />\n<h3 id=\"take-two%3A-april-api\">Take Two: APRIL API <a class=\"direct-link\" href=\"#take-two%3A-april-api\">#</a></h3>\n<p>For this run, I had access to the raw aging metadata, so I could see exactly how old APRIL thought I was at each point in the aging sequence.</p>\n<p>From 26 to 28, there's not much change:</p>\n<img src=\"https://lh6.googleusercontent.com/-u36fDGLeI0Y/UQrbNrKtZyI/AAAAAAAAASE/NQSn0Y5uCng/s288/age28.jpg\" />\n<p>Then, by age 35, my face elongates slightly:</p>\n<img src=\"https://lh4.googleusercontent.com/-cRxKskiAyos/UQrbOiA_OjI/AAAAAAAAASM/GBFlRfZtXnc/s288/age35.jpg\" />\n<p>I while away the next couple of decades in relative facial stasis. The most pronounced change is in my skin, which pales gradually with age:</p>\n<img src=\"https://lh6.googleusercontent.com/-gYCoSmKbBDw/UQrbO46gohI/AAAAAAAAASY/X8RoWKpGT_8/s288/age47.jpg\" />\n<img src=\"https://lh6.googleusercontent.com/-dWkaa-neumY/UQrbPgkBVtI/AAAAAAAAASg/ebWh4i14qYk/s288/age55.jpg\" />\n<p>Finally, age catches up with me, and I wrinkle into a haunted septuagenarian:</p>\n<img src=\"https://lh5.googleusercontent.com/-JNBO6QMu-Xg/UQrbP9uzUUI/AAAAAAAAASo/Dj43_1l46Zo/s288/age61.jpg\" />\n<img src=\"https://lh4.googleusercontent.com/-w7zx8Ql3PnM/UQrbQO2pqVI/AAAAAAAAASw/9HJrW1EUz2c/s288/age67.jpg\" />\n<img src=\"https://lh5.googleusercontent.com/-RNgo0CglAjs/UQrbQtlY69I/AAAAAAAAAS0/OXD8Yqf63og/s288/age72.jpg\" />\n<p>A few changes, each very minor, contribute to my forlorn expression over these last three photos.</p>\n<ul>\n<li>The <em>eyes get slightly rounder</em>, as though they're welling up.</li>\n<li><em>Wrinkling above the eyes</em> gives the impression of a furrowed brow.</li>\n<li>The face <em>elongates yet again</em>, creating a drawn expression.</li>\n<li>As part of the elongation of the face, the <em>mouth corners sag downwards</em> into the merest hint of a frown.</li>\n</ul>\n<p>Note the lack of deep forehead and upper nose creases which normally accompany the furrowed brow expression. The mere suggestion of it on the eyes is enough to trigger our expression recognition! It's amazing how sensitive we are to minute variations in facial muscle position.</p>\n<h3 id=\"summary\">Summary <a class=\"direct-link\" href=\"#summary\">#</a></h3>\n<p>These images provide two divergent visions for my distant future:</p>\n<img src=\"https://lh6.googleusercontent.com/-F8xBzpDWsM4/UQrbMUOukwI/AAAAAAAAAR0/cRqPDd_wYPM/s288/aging5.jpg\" />\n<img src=\"https://lh5.googleusercontent.com/-RNgo0CglAjs/UQrbQtlY69I/AAAAAAAAAS0/OXD8Yqf63og/s288/age72.jpg\" />\n<h2 id=\"why-were-those-so-different%3F\">Why Were Those So Different? <a class=\"direct-link\" href=\"#why-were-those-so-different%3F\">#</a></h2>\n<blockquote cite=\"https://ontariosciencecentre.ca/aging/\">\n  <p>\n...the machine uses state-of-the-art aging software developed in partnership with Aprilage Development Inc. of Toronto to add decades to the faces of 8-12 year olds.\n</p>\n  <footer>&ndash; Ontario Science Centre, <cite><a href=\"https://ontariosciencecentre.ca/aging/\">The Amazing Aging Machine</a></footer>\n</blockquote>\n<p>The Amazing Aging Machine is calibrated for ages 8-12, likely to match the Ontario Science Centre's target demographic. (Sadly, I couldn't find detailed visitor demographic data!) In my case, this creates an awkward puffy look: it's applying changes in facial structure through adolescence, when much of our bone growth occurs.</p>\n<p>By contrast, the APRIL API asks for your current age, allowing it to more correctly calibrate its models. As a result, the second set of faces exhibits relatively little change in shape.</p>\n<h2 id=\"what-do-i-get-out-of-this%3F\">What Do I Get Out Of This? <a class=\"direct-link\" href=\"#what-do-i-get-out-of-this%3F\">#</a></h2>\n<p>Although my face is unlikely to match either of these faces at 72, this experiment provides some insight into how our faces change with age. After all, the APRIL face aging models are based on real face data. They represent a sort of statistical average of the aging process.</p>\n<p>Also, I get the vaguely warm feeling that comes with having contributed to our <a href=\"http://vimeo.com/29052688\">collective intelligence</a>. I provided APRIL with a real age-labelled face, which will likely be used to help train future models.</p>\n<h2 id=\"appendix%3A-how-to-use-the-april-api\">Appendix: How To Use The APRIL API <a class=\"direct-link\" href=\"#appendix%3A-how-to-use-the-april-api\">#</a></h2>\n<p>For the more technically-minded, I've provided a quick walkthrough of the API aging pipeline. For all the gritty details, consult the <a href=\"http://www.aprilage.com/AprilAPI_V2.pdf\">API docs</a>.</p>\n<p>Before starting, I highly recommend installing a tool like <a href=\"https://github.com/jmhodges/jsonpp\">jsonpp</a>; it makes it much easier to read API results.</p>\n<p>The first step is manual: you need to register at <a href=\"http://www.ageme.com/\">ageme.com</a>, then click the confirmation link in your email.</p>\n<img src=\"https://lh5.googleusercontent.com/-wuu_sRDb7qQ/UQrtRmoofNI/AAAAAAAAATE/l7CAexc1_ZY/s400/ageme_register.jpg\" />\n<p>The next step is uploading an image, but let's check first that the API works by retrieving our user info:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> http://www.ageme.com/AprilAPI/users/savage.evan@gmail.com/userInfo<br><span class=\"token punctuation\">{</span><span class=\"token string\">\"result_code\"</span>:0,<span class=\"token string\">\"message\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"Unauthorized\"</span><span class=\"token punctuation\">}</span></code></pre>\n<p>Oops! We haven't authenticated ourselves. The Authorization header uses a brain-dead and highly insecure <code>base64</code> encoding:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ python -c <span class=\"token string\">\"import base64; print base64.encodestring('username:password')\"</span><br><span class=\"token assign-left variable\">dXNlcm5hbWU6cGFzc3dvcmQ</span><span class=\"token operator\">=</span></code></pre>\n<p>(Obviously this isn't my real username/password. Substitute yours above and use the resulting <code>base64</code>-encoded string in the <code>Authorization</code> headers below. I'll use this bogus value to illustrate the flow.)</p>\n<p>With the correct header, we can try fetching the user info again:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> -H <span class=\"token string\">\"Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=\"</span> http://www.ageme.com/AprilAPI/users/savage.evan@gmail.com/userInfo <span class=\"token operator\">|</span> jsonpp<br><span class=\"token punctuation\">{</span><br>  <span class=\"token string\">\"uri\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"http://www.ageme.com/AprilAPI/users/savage.evan@gmail.com\"</span>,<br>  <span class=\"token string\">\"email\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"savage.evan@gmail.com\"</span>,<br>  <span class=\"token string\">\"tokens\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">0</span>,<br>  <span class=\"token string\">\"numOfAgings\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>,<br>  <span class=\"token string\">\"role\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"user\"</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Great! Now we can POST an image to the uploading endpoint with <code>curl</code>:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> -F <span class=\"token string\">'filename=aging1.jpg'</span> -F <span class=\"token string\">'image=@/Users/candu/Desktop/aging1.jpg'</span> -H <span class=\"token string\">\"Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=\"</span> http://www.ageme.com/AprilAPI/images</code></pre>\n<p>Another manual step: before proceeding, you'll need to purchase a token on the <a href=\"http://www.ageme.com/\">ageme.com</a> site. At time of writing, this cost $3.99; I looked for active promotion codes, but couldn't find any.</p>\n<img src=\"https://lh6.googleusercontent.com/-co9vyFu4uJQ/UQrtSM1T8mI/AAAAAAAAATM/8ozrK3aiGjk/s400/ageme_buytokens.jpg\" />\n<p>With your aging token purchased, you can now create an aging document. This lets APRIL know your age and ethnicity, which helps it to select the appropriate models for your particular aging sequence. It also identifies the starting image of that sequence via the <code>imageId</code> returned during image upload.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> -H <span class=\"token string\">'Content-Type: application/json'</span> -d <span class=\"token string\">'{\"document\": {\"gender\": \"male\", \"age\": 26, \"name\": \"Evan\", \"ethnicity\": \"Caucasian\"}, \"imageId\": 2371944}}'</span> -H <span class=\"token string\">\"Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=\"</span> http://www.ageme.com/AprilAPI/documents</code></pre>\n<p>We're ready to run the aging process. There's a single method <code>detectMatchAge</code> for performing all three steps, but I'll break it down into the component steps here:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> -X POST -H <span class=\"token string\">\"Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=\"</span> http://www.ageme.com/AprilAPI/users/savage.evan@gmail.com/documents/2371973/pointDetection<br>$ <span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token function\">curl</span> -H <span class=\"token string\">\"Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=\"</span> http://www.ageme.com/AprilAPI/users/savage.evan@gmail.com/documents/2371973/status<span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span><br>$ <span class=\"token function\">curl</span> -X POST -H <span class=\"token string\">\"Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=\"</span> http://www.ageme.com/AprilAPI/users/savage.evan@gmail.com/documents/2371973/match<br>$ <span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token function\">curl</span> -H <span class=\"token string\">\"Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=\"</span> http://www.ageme.com/AprilAPI/users/savage.evan@gmail.com/documents/2371973/status<span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span><br>$ <span class=\"token function\">curl</span> -H <span class=\"token string\">'Content-Type: application/json'</span> -d <span class=\"token string\">'{\"sequenceType\": \"Max72\", \"sequences\": [{\"smoking\": 0, \"sunExposure\": 0, \"multiplier\": 1}]}'</span> -H <span class=\"token string\">\"Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=\"</span> http://www.ageme.com/AprilAPI/users/savage.evan@gmail.com/documents/2371973/aging<br>$ <span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token function\">curl</span> -H <span class=\"token string\">\"Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=\"</span> http://www.ageme.com/AprilAPI/users/savage.evan@gmail.com/documents/2371973/status<span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span></code></pre>\n<p>Note the <code>while</code> loops, which wait for each step to complete. Once all steps are completed, we retrieve the aging results:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> -H <span class=\"token string\">\"Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=\"</span> http://www.ageme.com/AprilAPI/users/savage.evan@gmail.com/documents/2371973/results <span class=\"token operator\">></span> aging_results.json<br>$ <span class=\"token function\">cat</span> aging_results.json <span class=\"token operator\">|</span> jsonpp <span class=\"token operator\">|</span> <span class=\"token function\">head</span> -15<br><span class=\"token punctuation\">[</span><br>  <span class=\"token punctuation\">{</span><br>    <span class=\"token string\">\"uri\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"http://www.ageme.com/AprilAPI/users/savage.evan@gmail.com/documents/2371973/results/76647\"</span>,<br>    <span class=\"token string\">\"status\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"done\"</span>,<br>    <span class=\"token string\">\"sequenceType\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"Max72\"</span>,<br>    <span class=\"token string\">\"sequences\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><br>      <span class=\"token punctuation\">{</span><br>        <span class=\"token string\">\"smoking\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">0.0</span>,<br>        <span class=\"token string\">\"sunExposure\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">0.0</span>,<br>        <span class=\"token string\">\"multiplier\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1.0</span>,<br>        <span class=\"token string\">\"images\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><br>          <span class=\"token punctuation\">{</span><br>            <span class=\"token string\">\"age\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">26</span>,<br>            <span class=\"token string\">\"uri\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"http://www.ageme.com/AprilAPI/images/IhLAo8Sp\"</span><br>          <span class=\"token punctuation\">}</span>,</code></pre>\n<p>Finally, I wrote a bit of <a href=\"https://github.com/candu/quantified-savagery-files/blob/master/Aging/fetch_aging.py\">Python glue</a> to fetch the URLs and name them by age:</p>\n<pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> json<br><span class=\"token keyword\">import</span> sys<br><span class=\"token keyword\">import</span> urllib2<br><br>data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>images <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'sequences'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'images'</span><span class=\"token punctuation\">]</span><br><span class=\"token keyword\">for</span> image <span class=\"token keyword\">in</span> images<span class=\"token punctuation\">:</span><br>  url <span class=\"token operator\">=</span> urllib2<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">[</span><span class=\"token string\">'uri'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><br>  path <span class=\"token operator\">=</span> <span class=\"token string\">'age{0}.jpg'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><br>  <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span><br>    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n<p>With this, we can fetch the images:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ python fetch_aging.py <span class=\"token operator\">&lt;</span> aging_results.json</code></pre>\n<p>And that's it! Most of the process uses <code>curl</code>, with minimal leaning on Python for its <code>base64</code> module.</p>\n",
      "date_published": "2013-01-31T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2012-12-21-datafist-exploration-and-analysis/",
      "url": "https://blog.savageevan.com/posts/2012-12-21-datafist-exploration-and-analysis/",
      "title": "datafist: Exploration And Analysis",
      "content_html": "<p>In this post I introduce datafist, an in-browser tool for visually exploring<br>\nyour data.</p>\n<!-- more -->\n<h2 id=\"first%2C-a-quote\">First, A Quote <a class=\"direct-link\" href=\"#first%2C-a-quote\">#</a></h2>\n<blockquote cite=\"https://www.researchgate.net/profile/James_Hollan/publication/250890525_Direct_Manipulation_Interfaces/links/540eda4b0cf2df04e757eb89/Direct-Manipulation-Interfaces.pdf\">\n  <p>\nAre we analyzing data? Then we should be manipulating the data themselves; or if we are designing an analysis of data, we should be manipulating the analytic structures themselves.\n</p>\n  <footer>&ndash; Hutchins et al., <cite><a href=\"https://www.researchgate.net/profile/James_Hollan/publication/250890525_Direct_Manipulation_Interfaces/links/540eda4b0cf2df04e757eb89/Direct-Manipulation-Interfaces.pdf\">Direct Manipulation Interfaces</a></footer>\n</blockquote>\n<h2 id=\"the-sixfold-path-of-self-tracking\">The Sixfold Path Of Self-Tracking <a class=\"direct-link\" href=\"#the-sixfold-path-of-self-tracking\">#</a></h2>\n<p>Self-tracking is a complex process. It can be broken down into stages:</p>\n<ul>\n<li><em>Intent:</em> our initial goals or motivations in deciding to self-track.</li>\n<li><em>Tools:</em> the devices or methods we use for tracking.</li>\n<li><em>Measurement:</em> collecting our data using those tools.</li>\n<li><em>Analysis:</em> extracting insights from our data.</li>\n<li><em>Interpretation:</em> creating personal meaning from those insights.</li>\n<li><em>Action:</em> responding to that personal meaning.</li>\n</ul>\n<p>Thanks to smartphones and cheap sensors, many of us already have the tools necessary for measurement. The psychology of intent and action is rapidly being explored through <a href=\"http://www.meetup.com/habitdesign/\">Habit Design</a> and <a href=\"http://captology.stanford.edu/\">Captology</a>, with startups like <a href=\"http://lift.do/\">Lift</a> and <a href=\"https://www.beeminder.com/\">Beeminder</a> harnessing the findings to great effect.</p>\n<p><em>What are the technologies of analysis and interpretation?</em></p>\n<h3 id=\"visualization\">Visualization <a class=\"direct-link\" href=\"#visualization\">#</a></h3>\n<p>Visualizations, even interactive ones, are usually designed to <em>answer specific questions</em> such as <a href=\"http://www.nytimes.com/interactive/2012/11/07/us/politics/obamas-diverse-base-of-support.html\">how did Obama win re-election?</a> Within the context of those questions, they help us understand our data intuitively. Outside that context, however, they are often useless.</p>\n<h3 id=\"statistical%2Fmathematical-software\">Statistical/Mathematical Software <a class=\"direct-link\" href=\"#statistical%2Fmathematical-software\">#</a></h3>\n<p>Environments like <a href=\"http://www.r-project.org/\">R</a> and <a href=\"http://www.wolfram.com/mathematica/\">Mathematica</a> allow you to <em>explore your data in meticulous detail.</em> In the hands of people like <a href=\"http://blog.stephenwolfram.com/2012/03/the-personal-analytics-of-my-life/\">Stephen Wolfram</a>, they are the holy grail of data analysis. For the less technically inclined, they remain hopelessly unintuitive.</p>\n<h2 id=\"a-middle-road\">A Middle Road <a class=\"direct-link\" href=\"#a-middle-road\">#</a></h2>\n<p>What we need is <em>something between the two</em>, a hybrid that exposes the exploratory power of the latter through the intuitive interface of the former. Such a tool would give us the opportunity to <em>explore our data as we see fit.</em> We could ask our data questions, iterating quickly on those questions until we reach useful insights.</p>\n<p>Until we can all converse with our data with the fluency of <a href=\"http://www.ted.com/talks/hans_rosling_the_good_news_of_the_decade.html\">Hans Rosling</a>, there's still room for improvement!</p>\n<h2 id=\"datafist\">datafist <a class=\"direct-link\" href=\"#datafist\">#</a></h2>\n<p>datafist tries to bridge this gap by providing <em>visual and gestural actions</em> for data manipulation. This is probably easier to demonstrate than describe, so here's a screencast that shows an early development version of datafist in action:</p>\n<div markdown=\"0\">\n  <iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/ypitHPXKa8M\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n<p>As you use datafist, <em>you're constantly modifying the analysis itself.</em> This modification takes place through <em>visual and gestural actions:</em> you move channels to the viewer, drag out ranges of time to zoom in on, and draw regions around interesting clusters. As you do this, the view is <em>updated in real-time</em>, allowing you to see the effects of your actions.</p>\n<h3 id=\"try-datafist-out!\">Try datafist Out! <a class=\"direct-link\" href=\"#try-datafist-out!\">#</a></h3>\n<p>I'm hosting a version of datafist <a href=\"http://datafist.savageevan.com\">here at savageevan.com</a>. Note that this is still a very early development version!</p>\n<h3 id=\"contribute-to-datafist!\">Contribute to datafist! <a class=\"direct-link\" href=\"#contribute-to-datafist!\">#</a></h3>\n<p>If you're interested in making datafist better, <a href=\"https://github.com/candu/datafist\">fork me on github!</a> Bug reports should be submitted <a href=\"https://github.com/candu/datafist/issues\">via the issue tracker</a>. In particular, if you have a CSV file that won't import properly, please attach it for testing purposes!</p>\n<h2 id=\"inspiration\">Inspiration <a class=\"direct-link\" href=\"#inspiration\">#</a></h2>\n<ul>\n<li><a href=\"http://www.audiomulch.com/\">AudioMulch</a> is an awesome graphical audio synthesis tool.</li>\n<li><a href=\"http://puredata.info/\">PureData</a> and <a href=\"http://cycling74.com/products/max/\">Max/MSP</a> are visual signal processing languages.</li>\n<li><a href=\"http://cleo.ics.uci.edu/teaching/Winter10/231/readings/1-HutchinsHollanNorman-DirectManipulation-HCI.pdf\">Direct Manipulation Interfaces</a> is a classic paper on the design of natural-seeming interfaces. You'll recognize some of the interface concepts from the analysis package design mocks at the beginning.</li>\n<li><a href=\"http://www.startuplessonslearned.com/2011/11/startup-is-vision.html\">FAKEGRIMLOCK</a> is a fountain of poorly-Englished wisdom on entrepreneurship.</li>\n</ul>\n",
      "date_published": "2012-12-21T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2012-11-14-sober-thoughts-on-willpower-and-decision-making/",
      "url": "https://blog.savageevan.com/posts/2012-11-14-sober-thoughts-on-willpower-and-decision-making/",
      "title": "Sober Thoughts On Willpower And Decision Making",
      "content_html": "<p>In this post, I discuss my ongoing experiment with temporarily eliminating alcohol from my diet. I use this experience to address a question: why do we find some forms of habit change easier than others?</p>\n<!-- more -->\n<h2 id=\"background\">Background <a class=\"direct-link\" href=\"#background\">#</a></h2>\n<p>As of today, <em>I've been completely sober for over a month.</em> I took my last drink at <a href=\"http://goo.gl/maps/nSxLn\">Seven's Ale House</a> on October 13 with these fine folks:</p>\n<img src=\"https://lh6.googleusercontent.com/-chtv-noAeXM/UKQNQdVUz1I/AAAAAAAAANQ/8zTq_kKfbCU/s640/sevens-pub.jpg\" />\n<p>Why did I decide to do this? One of the takeaways from my <a href=\"/posts/2012-10-14-self-tracking-for-panic-another-dataset/\">self-tracking for panic</a> was that <em>I drink heavily and frequently:</em> about three drinks per day, six days per week. The USDA recommendations are somewhat stricter:</p>\n<blockquote cite=\"https://www.cnpp.usda.gov/Publications/DietaryGuidelines/2010/DGAC/Report/D-7-Alcohol.pdf\">\n  <p>\n...\"low-risk\" drinking [is defined] as no more than 14 drinks a week for men and 7 drinks a week for women with no more than 4 drinks on any given day for men and 3 drinks a day for women.\n</p>\n  <footer>&ndash; Center for Nutrition Policy and Promotion, <cite><a href=\"https://www.cnpp.usda.gov/Publications/DietaryGuidelines/2010/DGAC/Report/D-7-Alcohol.pdf\">Dietary Guidelines for Americans</a></footer>\n</blockquote>\n<p><a href=\"https://alcoholscreening.org/page-q1-a/\">This online questionnaire</a> put my drinking level in context:</p>\n<blockquote cite=\"https://alcoholscreening.org/page-q1-a/\">\n  <p>\nMany of us think our drinking is like everyone else's.  In fact, less than 10% of the general adult American population and 16% of males drink more drinks each week than you told us you drink.\n</p>\n  <footer>&ndash; Center on Addiction, <cite><a href=\"https://alcoholscreening.org/page-q1-a/\">Online Quiz</a></footer>\n</blockquote>\n<p><em>How much does the average American drink?</em> Using the data from <a href=\"http://en.wikipedia.org/wiki/List_of_countries_by_alcohol_consumption\">this Wikipedia article</a> and some simple calculations:</p>\n<pre class=\"language-py\"><code class=\"language-py\"><span class=\"token comment\"># 1 drink = 1 beer bottle (355mL, 5% abv)</span><br>ALC_PER_BEER <span class=\"token operator\">=</span> <span class=\"token number\">0.355</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span><br><span class=\"token comment\"># American consumption = 9.44 L/year</span><br>DRINKS_PER_YEAR <span class=\"token operator\">=</span> <span class=\"token number\">9.44</span> <span class=\"token operator\">/</span> ALC_PER_BEER<br><span class=\"token comment\"># 1 year = 365 days</span><br>DRINKS_PER_DAY <span class=\"token operator\">=</span> DRINKS_PER_YEAR <span class=\"token operator\">/</span> <span class=\"token number\">365</span><br><span class=\"token keyword\">print</span> DRINKS_PER_DAY<br><span class=\"token comment\"># prints: \"1.3027204321821337\"</span></code></pre>\n<p>About $ 1.3 $ drinks per day, or roughly half of what I was drinking during my two panic tracking periods. If you ask <a href=\"http://www.gallup.com/poll/156770/majority-drink-alcohol-averaging-four-drinks-week.aspx\">Gallup</a>, though, they have a different number: $ 4.2 / 7 = 0.6 $ drinks per day. <a href=\"http://pubs.niaaa.nih.gov/publications/RethinkingDrinking/Rethinking_Drinking.pdf\">Rethinking Drinking</a>, a pamphlet from the <a href=\"http://www.nih.gov/\">National Institutes of Health</a>, provides yet another look at drinking habits nationwide:</p>\n<img src=\"https://lh3.googleusercontent.com/-vEbziueqO8I/UKQN1vuM15I/AAAAAAAAANg/ermiP-4-0oA/s800/nih-alcohol-use.jpg\" />\n<p>(This points out a general problem with data in the social sciences. Polling and measurement methodologies vary widely, as do the means by which data is presented.)</p>\n<p>Regardless of which source I choose to believe, <em>my data still places me above average.</em></p>\n<p>There was also a more personal reason: in <a href=\"/posts/2012-10-09-self-tracking-for-panic-an-even-deeper-look/\">analyzing the panic data</a>, <em>I found that caffeine wasn't the only panic-inducing culprit.</em> By training a <a href=\"https://github.com/candu/quantified-savagery-files/blob/master/Panic/recovery-journal/panic_maxent.py\">maximum entropy classifier</a>, I found that high alcohol consumption was predictive of panic attacks. <a href=\"/posts/2012-10-08-self-tracking-for-panic-a-deeper-look/\">Dissecting my data with bash</a> supported this hypothesis: on days where I had a panic attack, I was usually drinking more than average both that day and the previous day.</p>\n<h2 id=\"elimination-or-moderation%3F\">Elimination Or Moderation? <a class=\"direct-link\" href=\"#elimination-or-moderation%3F\">#</a></h2>\n<p>So why elimination instead of moderation? Simple: <em>moderation wasn't working.</em> I'd been using the USDA guidelines as my goal during the two panic tracking periods, with little success.</p>\n<p>(As it happens, I was also reading <a href=\"http://www.emptymirrorbooks.com/beat/kerouac-big-sur.html\">Big Sur</a> at the time, which contains <a href=\"http://www.jackkerouac.com/\">Jack Kerouac's</a> harrowing account of <a href=\"http://www.ncbi.nlm.nih.gov/pubmedhealth/PMH0001771/\">delirium tremens</a>. This may have provided some additional impetus in the decision!)</p>\n<p>The <a href=\"http://strategicsimplicity.com/3-reasons-to-form-new-habits-slowly-and-how-i-failed\">received wisdom</a> is that this sort of &quot;cold turkey&quot; habit change usually leads to failure: willpower is finite, we burn out easily, there are powerful social triggers, etc. Except:</p>\n<blockquote>\nI didn't find elimination harder. On the contrary, it was much easier than moderation.\n</blockquote>\n<p>I didn't stop going out to bars or visiting friends. I didn't smash all the bottles in the liquor cabinet or pour out the homebrew stash. I didn't enroll in any support groups or 12-step programs. What gives?</p>\n<h2 id=\"willpower%3A-endurance-versus-strength\">Willpower: Endurance Versus Strength <a class=\"direct-link\" href=\"#willpower%3A-endurance-versus-strength\">#</a></h2>\n<p>Elimination and moderation have different <em>decision-making profiles:</em></p>\n<ul>\n<li><strong>Elimination:</strong> the decision is always No. This default decision is applied to every decision instance.</li>\n<li><strong>Moderation:</strong> the decision may be Yes or No. Each decision instance requires a consideration of the circumstances.</li>\n</ul>\n<p>When I attempted to apply moderation, I found myself <em>breaking down this consideration into a complex set of rules:</em></p>\n<ul>\n<li><strong>Amount:</strong> <em>Have I said Yes too much?</em></li>\n<li><strong>Cost:</strong> <em>Who pays for Yes?</em> Am I paying? Is a friend buying the next round? Did I receive free beer in exchange for volunteer services?</li>\n<li><strong>Novelty:</strong> <em>Is this Yes different somehow?</em> Am I at a brewery I'll likely never visit again? Did a batch of homebrew just finish carbonation?</li>\n<li><strong>Social Pressure:</strong> <em>What are the social costs of Yes and No?</em></li>\n<li><strong>Special Occasions:</strong> <em>Does the occasion warrant changing the Yes threshold?</em> Am I on vacation? At a fancy restaurant? Out at a concert?</li>\n</ul>\n<p>Taking the <a href=\"http://scopeblog.stanford.edu/2011/12/29/a-conversation-about-the-science-of-willpower/\">willpower as muscle</a> metaphor one step further, this was a feat of endurance. Even though amount should be the only relevant factor here, <em>each decision instance spawned a host of smaller sub-decisions.</em></p>\n<p>By contrast, the elimination strategy required only one decision for each instance, <em>and that decision was predetermined:</em> No. It was a larger single decision, more akin to a feat of willpower strength.</p>\n<h2 id=\"replacing-the-routine\">Replacing The Routine <a class=\"direct-link\" href=\"#replacing-the-routine\">#</a></h2>\n<p>In <a href=\"http://charlesduhigg.com/\">Charles Duhigg's</a> conception of the <a href=\"http://charlesduhigg.com/how-habits-work/\">habit loop</a>, we can't truly break habits; we can only <em>swap in alternate routines</em> that connect the old cues and rewards.</p>\n<p>This reminded me of a term my friend <a href=\"http://www.linkedin.com/pub/travis-brooks/4/668/b44\">Travis Brooks</a> used: EANAB, short for <em>Equally-attractive Non-Alcoholic Beverage.</em> There are delicious <a href=\"http://shop.torani.com/Bacon-Flavored-Syrup/p/TOR-431248&amp;c=Torani@Syrups?utm_source=google&amp;utm_medium=cpc&amp;adtype=pla&amp;kw=&amp;gclid=CNL6sv21z7MCFQuCQgod-RcAgA\">flavor syrups</a> and <a href=\"http://www.bundaberg.com/info/product_range/ginger_beer/\">ginger beers</a>. <a href=\"http://www.myrecipes.com/recipe/herb-infused-spa-water-10000000682668/\">Spa water</a> and <a href=\"http://store.primowater.com/Carbonators.aspx\">carbonation systems</a> lend new life to boring <a href=\"http://www.dhmo.org/facts.html\">dihydrogen monoxide</a>. By making non-alcoholic beverages <em>as exciting as microbrews and Sonoma wines</em>, I tapped into my desire for exploration: here was a whole new range of beverages to discover!</p>\n<h2 id=\"openness-and-social-myths\">Openness And Social Myths <a class=\"direct-link\" href=\"#openness-and-social-myths\">#</a></h2>\n<p>As the Alcohol Screening questionnaire said:</p>\n<blockquote>\nMany of us think our drinking is like everyone else's.\n</blockquote>\n<p>While it is true that <a href=\"http://www.psychologytoday.com/blog/the-scientific-fundamentalist/201010/why-intelligent-people-drink-more-alcohol\">more educated people drink more</a>, I encountered much less of a &quot;drinking culture&quot; among my friends than I had expected. In fact, by being open about my behavior change and the motivations behind it, I received a good deal of social support for this decision.</p>\n<p><em>Mistaken expectations are persistent in habit change:</em></p>\n<ul>\n<li><strong>Fear Of Isolation:</strong> We may believe that our current habits are <em>normal or average</em>, and resist changing for fear of being regarded as unusual.</li>\n<li><strong>Fear Of Inadequacy:</strong> We may believe that we are <em>unable or less able</em> to change than others, and resist changing for fear we will not be successful.</li>\n</ul>\n<p>In both cases, data to refute the fear-expectation may be hard to find.</p>\n<h2 id=\"final-thoughts\">Final Thoughts <a class=\"direct-link\" href=\"#final-thoughts\">#</a></h2>\n<p>There are many ways in which my approach <em>could fail to work for others:</em></p>\n<ul>\n<li><strong>Physical Dependence:</strong> Although I drank more than average, my drinking had not progressed to the point of chronic dependence. Alcohol withdrawal <a href=\"http://www.ncbi.nlm.nih.gov/pubmedhealth/PMH0001769/\">can be extremely serious</a>, so this unsupervised &quot;cold turkey&quot; approach might be dangerous for problem drinkers or alcoholics.</li>\n<li><strong>Social Pressure:</strong> I found my friends to be understanding of my habit change. This is not universally true, however, and in some instances it may be necessary to rethink your personal relationships before behavior change can occur.</li>\n<li><strong>Specific Desires:</strong> Exploration is a strong part of my identity. Others will have different mental cues to tackle or subvert in designing behavior change strategies.</li>\n<li><strong>Willpower:</strong> If strength and endurance are separable components of the &quot;willpower muscle&quot;, it's possible that others may find the endurance of many small decisions easier than the strength of one big decision.</li>\n</ul>\n<p>These same factors made elimination an easier form of habit change for me. Although there are general principles of <a href=\"http://www.meetup.com/habitdesign/\">habit design</a>, I believe that further exploration will reveal it to be a <em>highly personal process.</em></p>\n<blockquote>\nIt is one thing to say \"replace the routine\", and an entirely different thing to do so.\n</blockquote>\n<p>This is not to say that such exploration is hopeless; far from it. If <a href=\"http://quantifiedself.com/2010/12/a-futurists-take-on-self-tracking-and-mindfulness/\">self-tracking leads to mindfulness</a>, perhaps this mindfulness will equip us to <em>more effectively identify and modify the habit loops that rule our lives.</em></p>\n<h2 id=\"what-next%3F\">What Next? <a class=\"direct-link\" href=\"#what-next%3F\">#</a></h2>\n<p>My goal is not lifelong abstinence from alcohol. Rather, I'm hoping that this will reset my baseline consumption, making it easier to practice moderation later.</p>\n<p>This experience has also demonstrated that elimination is a viable choice for me; if I find that my moderation efforts are slipping, I can return to a period of elimination. Having <em>proven strategies</em> under your belt can be enormously helpful in <em>making behavior change stick.</em></p>\n",
      "date_published": "2012-11-14T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2012-11-12-financial-tracking-mint-bubbles/",
      "url": "https://blog.savageevan.com/posts/2012-11-12-financial-tracking-mint-bubbles/",
      "title": "Financial Tracking: Mint Bubbles",
      "content_html": "<p>In this post I present Mint Bubbles, a <a href=\"http://www.nytimes.com/interactive/2012/02/13/us/politics/2013-budget-proposal-graphic.html\">force-directed bubble chart</a> visualization of exported Mint data. I explain how to use <a href=\"http://en.wikipedia.org/wiki/Force-based_algorithms_(graph_drawing)\">force-directed layouts</a> to produce awesome interactive visualizations<br>\nwith <a href=\"http://d3js.org/\">d3</a>, and also provide details on some of the specific tricks used<br>\nto create Mint Bubbles.</p>\n<!-- more -->\n<h2 id=\"getting-your-data\">Getting Your Data <a class=\"direct-link\" href=\"#getting-your-data\">#</a></h2>\n<p>Exporting your data from Mint is easy. Log into Mint and go to the Transactions tab:</p>\n<img src=\"https://lh6.googleusercontent.com/-oHWRFHUK35A/UKLVzn8tlDI/AAAAAAAAAM4/_2mADDMZ__M/s640/transactions-tab-select.jpg\" />\n<p>Scroll to the bottom pagination section. In barely-legible super-tiny type at bottom right, there's a link to export all your transactions:</p>\n<img src=\"https://lh3.googleusercontent.com/-VSYonXZ14ns/UKLVz3M9eHI/AAAAAAAAAMs/Svbd25tzd3A/s800/transactions-export-link.jpg\" />\n<p>Clicking that link will download a file called <code>transactions.csv</code>:</p>\n<img src=\"https://lh6.googleusercontent.com/-iwz7B_kEtF8/UKLV0RLGvZI/AAAAAAAAAM0/w3tqQ53CVao/s800/transactions-csv-download.jpg\" />\n<h2 id=\"mint-bubbles\">Mint Bubbles <a class=\"direct-link\" href=\"#mint-bubbles\">#</a></h2>\n<p>If you're viewing this on an RSS reader, check out the example <a href=\"/posts/2012-11-12-financial-tracking-mint-bubbles/#quick-demo\">on my blog</a>. You will need a browser that supports the <a href=\"https://developer.mozilla.org/en-US/docs/Using_files_from_web_applications\">HTML5 File API</a>.</p>\n<p>You can see the code for this demo <a href=\"https://github.com/candu/quantified-savagery-files/tree/master/Financial/mint-bubbles\">here</a>.</p>\n<p>To see a visualization of your data, drag the <code>transactions.csv</code> file from Mint onto the <code>drag your data here</code> area below.</p>\n<div id=\"quick-demo\" markdown=\"0\">\n  <style type=\"text/css\">\n    #quick-demo {\n      line-height: 1;\n    }\n<pre><code>#chart {\n  height: 480px;\n  width: 720px;\n  margin: auto;\n  margin-top: 32px;\n  margin-bottom: 16px;\n}\n\n.chart-active {\n  border: 1px solid #DFE2E1;\n  background-color: #F7F7F7;\n}\n\n#drop_zone {\n  display: table;\n  border: 2px dashed #bbb;\n  height: 100%;\n  width: 100%;\n  padding: 4px;\n  cursor: pointer;\n}\n\n#drop_zone p {\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n  font-size: 150%;\n  color: #7F7F7F;\n}\n\n.hidden {\n  display: none !important;\n}\n\ncircle.node {\n  cursor: pointer;\n}\n\ncircle.circle-active {\n  fill: #36f !important;\n  stroke: #03f !important;\n}\n\n#caption {\n  width: 720px;\n  margin: auto;\n  text-align: center;\n  min-height: 100%;\n}\n\n#total {\n  font-size: 125%;\n  color: #36f;\n  padding: 4px;\n  margin-bottom: 8px;\n}\n\n#prompt {\n  font-size: 150%;\n  color: #888;\n  padding: 4px;\n}\n\n#transactions_table {\n  width: 100%;\n  margin-bottom: 8px;\n}\n\n#quick-demo th {\n  font-weight: 500;\n  padding-bottom: 4px;\n}\n\n#quick-demo th, #quick-demo td {\n  text-align: center;\n}\n</code></pre>\n  </style>\n  <script src=\"https://candu.github.io/quantified-savagery-files/lib/js/third-party/mootools.js\"></script>\n  <script src=\"https://candu.github.io/quantified-savagery-files/lib/js/third-party/d3.js\"></script>\n  <script src=\"https://candu.github.io/quantified-savagery-files/Financial/mint-bubbles/demo.js\"></script>\n  <div id=\"chart\">\n    <div id=\"drop_zone\">\n      <p>\n        drop your data here\n        <div id=\"progress\" class=\"hidden\">\n          <progress id=\"progress_bar\"></progress>\n        </div>\n      </p>\n    </div>\n  </div>\n  <div id=\"caption\" class=\"hidden\">\n    <div id=\"prompt\">\n      click bubbles to see transaction details\n    </div>\n    <div id=\"total\" class=\"hidden\"></div>\n    <div id=\"transactions\" class=\"hidden\">\n      <table id=\"transactions_table\">\n        <thead>\n          <tr>\n            <th width=\"120px\">Date</th>\n            <th width=\"120px\">Amount</th>\n            <th width=\"480px\">Description</th>\n          </tr>\n        </thead>\n        <tbody id=\"transactions_tbody\"></tbody>\n      </table>\n    </div>\n  </div>\n</div>\n<h2 id=\"behind-the-bubbles\">Behind The Bubbles <a class=\"direct-link\" href=\"#behind-the-bubbles\">#</a></h2>\n<h3 id=\"inspiration\">Inspiration <a class=\"direct-link\" href=\"#inspiration\">#</a></h3>\n<p>This visualization was inspired by the <a href=\"http://www.nytimes.com/interactive/2012/02/13/us/politics/2013-budget-proposal-graphic.html\">NYT 2013 Budget Proposal Graphic</a>, which uses <a href=\"http://d3js.org/\">d3.js</a> to bring <a href=\"http://www.whitehouse.gov/omb/budget\">Obama's 2013 budget proposal</a> to life as an interactive bubble chart.</p>\n<p>I'd just started using <a href=\"https://www.mint.com/\">Mint</a> for financial tracking, and this seemed like an awesome way to visualize my personal spending patterns. To help figure out the mechanics of the NYT visualization, I consulted <a href=\"http://vallandingham.me/bubble_charts_in_d3.html\">this article</a> by <a href=\"http://vallandingham.me/\">Jim Vallandingham</a>. He explains in detail how to create similar visualizations using d3's <a href=\"https://github.com/mbostock/d3/wiki/Force-Layout\">force-directed layouts</a>, which model your data as a set of particles moving about in space.</p>\n<h3 id=\"importing-data\">Importing Data <a class=\"direct-link\" href=\"#importing-data\">#</a></h3>\n<p>Unlike my <a href=\"/posts/2012-10-22-dont-hate-cross-correlate/#quick-demo\">previous</a> <a href=\"/posts/2012-10-17-fitbit-apis-crossfilter-and-d3/#quick-demo\">visualizations</a>, I wanted this visualization to allow you to play with your data. Enter the <a href=\"http://www.html5rocks.com/en/tutorials/file/dndfiles/\">HTML5 File API</a>, which allows access to files via JavaScript. First, I set up the drag-and-drop listeners on <code>div#drop_zone</code>:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/*<br> * Octopress bundles ender.js, which provides $() for DOM access; mootools<br> * tries to play nice, so it won't install its $() over that. I'm using<br> * document.id() instead.<br> */</span><br><span class=\"token keyword\">var</span> dropZone <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token string\">'drop_zone'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">function</span> <span class=\"token function\">trapEvent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  evt<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  evt<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br>dropZone<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dragenter'</span><span class=\"token punctuation\">,</span> trapEvent<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>dropZone<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dragexit'</span><span class=\"token punctuation\">,</span> trapEvent<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>dropZone<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dragover'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">trapEvent</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">// This makes a copy icon appear during the drag operation.</span><br>  evt<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span>dropEffect <span class=\"token operator\">=</span> <span class=\"token string\">'copy'</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>dropZone<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'drop'</span><span class=\"token punctuation\">,</span> handleFileSelect<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><code>dragenter</code>, <code>dragexit</code>, and <code>dragover</code> are analogous to <code>mouseenter</code>, <code>mouseexit</code>, and <code>mouseover</code>. For those events, it suffices to call <code>trapEvent()</code>, which prevents the browser's default action from happening. For instance, Chrome on Mac OS will just download the <code>transactions.csv</code> file if you drag it into a browser tab, which is not what I want here.</p>\n<p><code>drop</code> is the interesting event:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">handleFileSelect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">trapEvent</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">// NOTE: you might want to filter out large or invalid files here.</span><br>  <span class=\"token keyword\">var</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  reader<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onloadstart</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>lengthComputable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      document<span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token string\">'progress'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hidden'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      document<span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token string\">'progress_bar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      document<span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token string\">'progress_bar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'max'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  reader<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onprogress</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>lengthComputable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      document<span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token string\">'progress_bar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>loaded<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  reader<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    document<span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token string\">'caption'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hidden'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'chart-active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    document<span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token string\">'progress'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hidden'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    document<span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token string\">'drop_zone'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hidden'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    document<span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token string\">'chart'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'chart-active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">buildChart</span><span class=\"token punctuation\">(</span>d3<span class=\"token punctuation\">.</span>csv<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  reader<span class=\"token punctuation\">.</span><span class=\"token function\">readAsText</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>This uses <code>FileReader.readAsText()</code> to read in the <code>transactions.csv</code> file, with <code>d3.csv.parse()</code> for turning that CSV file into a sequence of JavaScript objects representing the transactions. This parsing is triggered <code>onload</code>, which fires once file I/O has completed.</p>\n<p><code>onloadstart</code> and <code>onprogress</code> are used to monitor file I/O progress via the <a href=\"http://www.useragentman.com/blog/2012/01/03/cross-browser-html5-progress-bars-in-depth/\">HTML5 progress element</a> <code>document.id('progress_bar')</code>. Since <code>transactions.csv</code> files are typically small, and since the &quot;uploading&quot; is actually a client-local copy into browser memory, you'll probably never see that progress bar.</p>\n<h3 id=\"grouping-transactions\">Grouping Transactions <a class=\"direct-link\" href=\"#grouping-transactions\">#</a></h3>\n<p>I group the transactions by category:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> cs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>data<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> tx<span class=\"token punctuation\">[</span><span class=\"token string\">'Category'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>c <span class=\"token keyword\">in</span> cs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    cs<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>      amount<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><br>      txs<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br>  cs<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>amount <span class=\"token operator\">+=</span> <span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">[</span><span class=\"token string\">'Amount'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  cs<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>txs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><code>amount</code> stores the total amount; note the use of <code>+(tx['Amount'])</code> to convert<br>\nCSV string values into numbers. <code>txs</code> is used for the transaction list.</p>\n<p>I then convert these into nodes to be used by<br>\n<code>d3.layout.force()</code>:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> nodes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> c <span class=\"token keyword\">in</span> cs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  nodes<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>    <span class=\"token constant\">R</span><span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>cs<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    category<span class=\"token operator\">:</span> c<span class=\"token punctuation\">,</span><br>    amount<span class=\"token operator\">:</span> cs<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">,</span><br>    txs<span class=\"token operator\">:</span> cs<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>txs<br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"defining-the-layout\">Defining The Layout <a class=\"direct-link\" href=\"#defining-the-layout\">#</a></h3>\n<p>Before building the visualization itself, I define a color gradient based on bubble radius, picking the colors using the excellent <a href=\"http://colorschemedesigner.com/\">Color Scheme Designer</a>:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> Rs <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d<span class=\"token punctuation\">.</span><span class=\"token constant\">R</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">var</span> minR <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>Rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    maxR <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>Rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">var</span> fill <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">.</span><span class=\"token function\">linear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">domain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>minR<span class=\"token punctuation\">,</span> maxR<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'#7EFF77'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#067500'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Now on to the visualization. First, I need to create the <a href=\"https://developer.mozilla.org/en-US/docs/SVG\">SVG element</a>:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> w <span class=\"token operator\">=</span> <span class=\"token number\">960</span><span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> <span class=\"token number\">480</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">var</span> vis <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#chart'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'svg:svg'</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'width'</span><span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'height'</span><span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Next, I define the behavior and styling of the bubbles:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> vis<span class=\"token punctuation\">.</span><span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'circle.node'</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'svg:circle'</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'node'</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cx'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cy'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d<span class=\"token punctuation\">.</span><span class=\"token constant\">R</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fill'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token constant\">R</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">'stroke'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token constant\">R</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">darker</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">'stroke-width'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><code>fill(d.R)</code> uses the color gradient <code>fill</code> to make smaller bubbles lighter and larger bubbles darker.</p>\n<p>As for the force-directed layout, I start with some basic properties:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> force <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">.</span><span class=\"token function\">force</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">nodes</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">links</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>          <span class=\"token comment\">// no edges between bubbles!</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">gravity</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.05</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">// controls speed at which bubbles seek the center</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">friction</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.95</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// slows down motion</span></code></pre>\n<h3 id=\"tick-handler\">Tick Handler <a class=\"direct-link\" href=\"#tick-handler\">#</a></h3>\n<blockquote cite=\"https://github.com/mbostock/d3/wiki/Force-Layout#wiki-tick\">\n  <p>\n`force.tick()`: Runs the force layout simulation one step.\n</p>\n  <footer>&ndash; Mike Bostock, <cite><a href=\"https://github.com/mbostock/d3/wiki/Force-Layout#wiki-tick\">Force Layout</a></footer>\n</blockquote>\n<p>Force-directed layouts model your data as a set of particles in space. Those particles are subject to various forces:</p>\n<ul>\n<li><strong>Gravity:</strong> in d3, this is actually an attractive force pulling particles towards the center of the visualization.</li>\n<li><strong>Friction:</strong> this slows down movement.</li>\n<li><strong>Tension:</strong> if nodes are connected via links (edges), they will resist being moved apart.</li>\n<li><strong>Charge:</strong> similar to electric charge, same-signed charges repel and opposite-signed charges attract.</li>\n</ul>\n<p>A layout can describe some or all of these forces. Resolving the forces is a simple iterative process:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">P</span> <span class=\"token keyword\">in</span> particles<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token constant\">F</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>f <span class=\"token keyword\">in</span> <span class=\"token function\">forcesActingOn</span><span class=\"token punctuation\">(</span><span class=\"token constant\">P</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> f<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> f<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token function\">applyForceTo</span><span class=\"token punctuation\">(</span><span class=\"token constant\">P</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>In addition to the above forces, visualizations using <code>d3.layout.force()</code> can define their own forces via the <code>ontick</code> handler. I use this to apply two effects:</p>\n<ul>\n<li><strong>Size Sorting:</strong> similar to <a href=\"http://en.wikipedia.org/wiki/Granular_convection\">granular convection</a>, larger bubbles will rise while smaller bubbles sink.</li>\n<li><strong>Collision Detection:</strong> I prevent bubbles from intersecting, since that makes it easier to select them.</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> floatPoint <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">.</span><span class=\"token function\">linear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">domain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>minR<span class=\"token punctuation\">,</span> maxR<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>h <span class=\"token operator\">*</span> <span class=\"token number\">0.65</span><span class=\"token punctuation\">,</span> h <span class=\"token operator\">*</span> <span class=\"token number\">0.35</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>force<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tick'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// vertical size sorting</span><br>  nodes<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">var</span> dy <span class=\"token operator\">=</span> <span class=\"token function\">floatPoint</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token constant\">R</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> d<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span><br>    d<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> <span class=\"token number\">0.25</span> <span class=\"token operator\">*</span> dy <span class=\"token operator\">*</span> e<span class=\"token punctuation\">.</span>alpha<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// collision detection</span><br>  <span class=\"token keyword\">var</span> q <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span>geom<span class=\"token punctuation\">.</span><span class=\"token function\">quadtree</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  nodes<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    q<span class=\"token punctuation\">.</span><span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">quad<span class=\"token punctuation\">,</span> x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">var</span> d2 <span class=\"token operator\">=</span> quad<span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d2 <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>d2 <span class=\"token operator\">!==</span> d1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> d1<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> d2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span><br>            y <span class=\"token operator\">=</span> d1<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> d2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span><br>            <span class=\"token constant\">L</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> x <span class=\"token operator\">+</span> y <span class=\"token operator\">*</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token constant\">R</span> <span class=\"token operator\">=</span> d1<span class=\"token punctuation\">.</span><span class=\"token constant\">R</span> <span class=\"token operator\">+</span> d2<span class=\"token punctuation\">.</span><span class=\"token constant\">R</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">L</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token constant\">L</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">L</span> <span class=\"token operator\">-</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token constant\">L</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span><br>          <span class=\"token keyword\">var</span> Lx <span class=\"token operator\">=</span> <span class=\"token constant\">L</span> <span class=\"token operator\">*</span> x<span class=\"token punctuation\">,</span><br>              Ly <span class=\"token operator\">=</span> <span class=\"token constant\">L</span> <span class=\"token operator\">*</span> y<span class=\"token punctuation\">;</span><br>          d1<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-=</span> Lx<span class=\"token punctuation\">;</span> d1<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-=</span> Ly<span class=\"token punctuation\">;</span><br>          d2<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> Lx<span class=\"token punctuation\">;</span> d2<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> Ly<span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>      <span class=\"token punctuation\">}</span><br>      <span class=\"token comment\">// This short-circuits visit() for quadtree nodes that can't collide with</span><br>      <span class=\"token comment\">// d1, resulting in O(n log n) collision detection.</span><br>      <span class=\"token keyword\">return</span><br>        x1 <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>d1<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> d1<span class=\"token punctuation\">.</span><span class=\"token constant\">R</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span><br>        x2 <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>d1<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> d1<span class=\"token punctuation\">.</span><span class=\"token constant\">R</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span><br>        y1 <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>d1<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> d1<span class=\"token punctuation\">.</span><span class=\"token constant\">R</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span><br>        y2 <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>d1<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> d1<span class=\"token punctuation\">.</span><span class=\"token constant\">R</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  node<br>    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cx'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cy'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"alpha-and-size-sorting\">Alpha and Size Sorting <a class=\"direct-link\" href=\"#alpha-and-size-sorting\">#</a></h3>\n<p>What's <code>e.alpha</code>? This is described cryptically in the <a href=\"https://github.com/mbostock/d3/wiki/Force-Layout#wiki-start\">d3.js documentation</a>:</p>\n<blockquote cite=\"https://github.com/mbostock/d3/wiki/Force-Layout#wiki-start\">\n  <p>\nInternally, the layout uses a cooling parameter alpha which controls the layout temperature: as the physical simulation converges on a stable layout, the temperature drops, causing nodes to move more slowly.\n</p>\n  <footer>&ndash; Mike Bostock, <cite><a href=\"https://github.com/mbostock/d3/wiki/Force-Layout#wiki-start\">Force Layout</a></footer>\n</blockquote>\n<p>A look at the <a href=\"https://github.com/mbostock/d3/blob/master/src/layout/force.js#L46\">code for d3.layout.force()</a> provides some insight into what's happening here:</p>\n<pre class=\"language-js\"><code class=\"language-js\">force<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">tick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// simulated annealing, basically</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>alpha <span class=\"token operator\">*=</span> <span class=\"token number\">.99</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">.005</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    event<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">\"end\"</span><span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">:</span> alpha <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br>  <span class=\"token comment\">// ...</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Let's look at the size sorting code again:</p>\n<pre class=\"language-js\"><code class=\"language-js\">nodes<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">var</span> dy <span class=\"token operator\">=</span> <span class=\"token function\">floatPoint</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token constant\">R</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> d<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span><br>  d<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> <span class=\"token number\">0.25</span> <span class=\"token operator\">*</span> dy <span class=\"token operator\">*</span> e<span class=\"token punctuation\">.</span>alpha<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><code>floatPoint(d.R)</code> computes a &quot;desired height&quot; for the node <code>d</code>. The <code>d.y</code> adjustment moves <code>d</code> towards that height, using <code>e.alpha</code> to slow down the sorting adjustment as the layout &quot;cools&quot; into its final state.</p>\n<h3 id=\"collision-detection\">Collision Detection <a class=\"direct-link\" href=\"#collision-detection\">#</a></h3>\n<p>The collision detection code is cribbed from <a href=\"http://mbostock.github.com/d3/talk/20111018/collision.html\">this page</a>, which is part of a <a href=\"http://mbostock.github.com/d3/talk/20111018/#0\">talk</a> given by <a href=\"http://bost.ocks.org/mike/\">Mike Bostock</a> on d3.</p>\n<h2 id=\"up-next\">Up Next <a class=\"direct-link\" href=\"#up-next\">#</a></h2>\n<p>I'm currently working on a post for the <a href=\"http://quantifiedself.com/\">main Quantified Self blog</a>, in which I'm planning to feature another cool visualization for personal data. Aside from that, I'm hoping to use an upcoming post to dissect my Mint data in more detail. Keep posted!</p>\n",
      "date_published": "2012-11-12T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2012-11-07-healthy-isnt-a-place-you-go-to/",
      "url": "https://blog.savageevan.com/posts/2012-11-07-healthy-isnt-a-place-you-go-to/",
      "title": "Healthy Isn&#39;t A Place You Go To",
      "content_html": "<p>In this post, I expand on some <a href=\"/posts/2012-10-02-welcome-to-quantified-savagery/\">earlier thoughts</a> about the nature and purpose of the <a href=\"http://quantifiedself.com/\">Quantified Self movement</a>. In looking at personal identity from a Quantified Self perspective, I argue that self-tracking gives us a means for reclaiming control of that identity.</p>\n<!-- more -->\n<h2 id=\"the-revelation\">The Revelation <a class=\"direct-link\" href=\"#the-revelation\">#</a></h2>\n<p>When I started down the philosophical path that ultimately led into the Quantified Self vortex, it was with a simple question:</p>\n<blockquote>\nHow do we build game-like systems to improve our lives?\n</blockquote>\n<p>This isn't a new question. The <a href=\"http://realityisbroken.org/\">Reality Is Broken</a> thesis has long since reached tech geek mantra-hood. <a href=\"https://www.superbetter.com/\">SuperBetter</a> and similar games have broken ground on the concrete implications of that mantra.</p>\n<p>Much more recently, during a walk home with <a href=\"http://www.eecs.berkeley.edu/~valkyrie/\">Valkyrie Savage</a>, I had another thought:</p>\n<blockquote>\nSelf-tracking makes self-expertise possible.\n</blockquote>\n<p>We may self-track for a variety of reasons, including:</p>\n<ul>\n<li><strong>addressing symptoms:</strong> perhaps I feel overweight, underslept, or stressed out.</li>\n<li><strong>improving habits:</strong> perhaps I want to exercise more, drink less, or read a book each month.</li>\n<li><strong>satisfying curiosity:</strong> perhaps I'm fascinated by data visualization, psychology, or lifehacking.</li>\n</ul>\n<p>Whether data collection is your focus or merely an unintended side effect, <em>this data makes it possible to know ourselves in new ways.</em> This self-knowledge is different from expert other-knowledge.</p>\n<h2 id=\"self-knowledge-and-other-knowledge\">Self-Knowledge and Other-Knowledge <a class=\"direct-link\" href=\"#self-knowledge-and-other-knowledge\">#</a></h2>\n<p>Doctors are trained to recognize general patterns of the human body. From a diagnosis perspective, your medical history is only interesting insofar as it allows you to be grouped together with similar patients. That grouping is a <em>pattern profile</em> in your doctor's mind, and it informs their <em>expert other-knowledge</em> of you.</p>\n<p>By contrast, you have intimate <em>self-knowledge</em> of your body and its symptoms. When do they occur? After eating which foods? In which locations? How often? How severe? The doctor will often ask these more <em>technical questions</em> to fill in the data missing from their patterns. There are, however, important questions that are often either missed or left barely explored:</p>\n<ul>\n<li><em>What do those symptoms cost you?</em> What do they prevent you from enjoying in life? If you could solve one of them, which would it be?</li>\n<li>If they are preventable, <em>why do you continue the behavior that causes or aggravates them?</em> What is the best way to get you to stop?</li>\n<li><em>How do these symptoms impact those around you?</em></li>\n<li>Do you really need medicine to deal with these symptoms? Could they be solved with more sleep? More exercise? Healthier diet? <em>What is the least invasive and costly means of addressing your issue?</em></li>\n<li>If you do need medicine, <em>how can you be convinced to take it?</em></li>\n</ul>\n<p>Many of these questions hinge on <em>motivations, emotions, and relationships.</em> As questions of identity, they may be more likely to lead to lasting treatment. Too often, though, we cede complete control of personal questions to doctors, teachers, and other experts. In doing so, we give up the power to decide which questions are important and which are not.</p>\n<p>This is not to say that experts are without value. In their current incarnation, they fulfill much of the promise of the <a href=\"/posts/2012-10-02-welcome-to-quantified-savagery/\">Quantified Mass</a>. Their (hopefully) extensive training equips them with powerful insights rooted in centuries of scientific inquiry. Powerful as those insights are, however, <em>they are ill-suited to address more personal questions</em> in a way that is meaningful to you.</p>\n<h2 id=\"personal-identity-and-place-ism\">Personal Identity And Place-Ism <a class=\"direct-link\" href=\"#personal-identity-and-place-ism\">#</a></h2>\n<p>I titled this post:</p>\n<blockquote>\nHealthy Isn't A Place You Go To\n</blockquote>\n<p>What do I mean by that? Consider these popular sentiments:</p>\n<ul>\n<li>To become fit, I go to the gym.</li>\n<li>To get well, I go to the doctor.</li>\n<li>To learn, I go to school.</li>\n</ul>\n<p>I'd argue that a lifetime of handing over control of these personal questions <em>conditions us to associate states of being</em> (fitness, wellness, learnedness) <em>with places</em> (gym, doctor, school). Those states become mechanical attributes devoid of identity, knobs we go elsewhere to have others tweak for us. For lack of a better term, I'll call this place-ism.</p>\n<p>This isn't just philosophical posturing. There is <a href=\"https://www.google.com/search?q=behavior+change+and+identity\">growing inquiry</a> into the hypothesis that <a href=\"http://wayoftheduck.com/belief-change\">behavior and belief change are linked</a>. A number of theories, such as <a href=\"http://www.selfdeterminationtheory.org/theory\">self-determination theory</a> and the <a href=\"http://www.uri.edu/research/cprc/TTM/detailedoverview.htm\">Transtheoretical Model</a>, have sprung up in an attempt to rigorously define these processes of change.</p>\n<p>If that's the case, training ourselves to externalize behavior change can't be good, as it necessarily <em>reduces our capacity for belief change.</em></p>\n<h2 id=\"beyond-place-ism...\">Beyond Place-Ism... <a class=\"direct-link\" href=\"#beyond-place-ism...\">#</a></h2>\n<p>Self-tracking allows us to <em>tie mechanical questions</em> - where? when? what? how much? - <em>to personal questions</em> and vice-versa. Data help us answer personal questions. Personal questions help us decide what data are needed to answer them. This cycle <em>makes us active participants in our own lives.</em></p>\n<p>What role do experts have in this cycle? The point is not to exclude them entirely, but rather to <em>change their role from identity gatekeepers to identity consultants.</em> By treating them as consultants, you seek advice of your own free will and with the understanding that some of it may not be applicable to you. You decide what role the consultant plays in your health, your education, your overall identity.</p>\n<blockquote>\nWhat if learning were not a place, but a state of being?\n</blockquote>\n<p>This reminds me of <a href=\"http://www.thinkjarcollective.com/2012/07/richard-feynman-spinning-plates-and-serious-play/\">Feynman's spinning plates</a>, yet another demonstration of the power of <em>pervasive learning.</em> That word pervasive is crucial. In this state, there are no boundaries on when, where, or from what learning arises. There is <em>no schedule for learning.</em> There is no switching between learning on and off modes, only a <em>variation in intensity.</em></p>\n<h2 id=\"...and-back-to-gameplay\">...And Back To Gameplay <a class=\"direct-link\" href=\"#...and-back-to-gameplay\">#</a></h2>\n<p>How are</p>\n<blockquote>\nHow do we build game-like systems to improve our lives?\n</blockquote>\n<p>and</p>\n<blockquote>\nSelf-tracking makes self-expertise possible.\n</blockquote>\n<p>related? <em>Self-expertise is the improvement.</em> It breaks place-ism, casts self-knowledge and other-knowledge as complementary equals, and moves us towards active participation. <em>Self-tracking is pervasive gameplay</em>, and that's awesome.</p>\n",
      "date_published": "2012-11-07T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2012-11-02-persistent-location-tracking-looking-for-a-few-good-data-points/",
      "url": "https://blog.savageevan.com/posts/2012-11-02-persistent-location-tracking-looking-for-a-few-good-data-points/",
      "title": "Persistent Location Tracking: Looking For A Few Good Data Points",
      "content_html": "<p>In this post, I revisit the question of whether Google Latitude meets my persistent location tracking needs. In <a href=\"/posts/2012-10-29-persistent-location-tracking-picking-the-right-tool/\">my previous post</a>, I compared Google Latitude to InstaMapper and concluded that the latter is too battery-intensive. By looking at maps and base-level insights from the data, I suggest that Google Latitude optimizes for battery life at the expense of data quality.</p>\n<!-- more -->\n<h2 id=\"exhibit-a%3A-some-maps\">Exhibit A: Some Maps <a class=\"direct-link\" href=\"#exhibit-a%3A-some-maps\">#</a></h2>\n<p>I started gathering data on Oct. 3, 2012:</p>\n<img src=\"https://lh5.googleusercontent.com/-kyl-kUDWe_M/UJgVi3pls3I/AAAAAAAAALg/zGsaBfNzY7s/s640/map-monthly.jpg\" />\n<p>Since then, <a href=\"http://www.eecs.berkeley.edu/~valkyrie/\">Valkyrie Savage</a> and I have travelled to Boston and Chicago. Our stopover in Phoenix is clearly visible at this scale. You can barely make out our day trip to <a href=\"http://goo.gl/maps/rLfNu\">Mount Monadnock, NH</a> over near Boston. Here's a closer look at that trip:</p>\n<img src=\"https://lh4.googleusercontent.com/-YJQip0zWnxQ/UJgVlFc_7pI/AAAAAAAAAMA/DjlCRjxouzo/s640/map-monadnock-trip.jpg\" />\n<p>Ouch. The data is <em>noisy in some areas, sparse in others.</em> It's fairly clear that we took Hwy 2 over, but <em>some of the GPS readings are miles off.</em> Let's zoom in on that hike:</p>\n<img src=\"https://lh5.googleusercontent.com/-bg3DxaZTe6k/UJgVlqpW7ZI/AAAAAAAAAMI/t2Kn3hrhWJM/s640/map-monadnock-hike.jpg\" />\n<p>Only five data points actually lie within the park/mountain boundaries. That's <em>five data points for a four-hour hike.</em> Our Boston data is somewhat more accurate:</p>\n<img src=\"https://lh3.googleusercontent.com/-6RFwbwjBEtI/UJgVmQk1KCI/AAAAAAAAAMQ/-Nhyp0LtoLw/s640/map-monadnock-boston.jpg\" />\n<p>Still, the red line cuts through city blocks with reckless abandon. Either we're flying, or we're packing some incredibly efficient demolition equipment.</p>\n<p>Here's the map for one of my more itinerant Bay Area days:</p>\n<img src=\"https://lh5.googleusercontent.com/-xNNR5dnNV44/UJgVj3SZAEI/AAAAAAAAALw/6KvtDZYWel0/s640/map-busy-day.jpg\" />\n<p>I cycled to a doctor's appointment, visited <a href=\"http://bid.berkeley.edu/\">BiD</a> to hear <a href=\"http://research.microsoft.com/en-us/people/marycz/\">Mary Czerwinski</a> speak about emotion tracking, worked from <a href=\"http://goo.gl/maps/z7EuA\">home</a> for a bit, went into San Francisco to meet up with <a href=\"http://www.linkedin.com/in/levpopov\">Lev Popov</a>, and finally dragged myself home again.</p>\n<p>The BART ride into San Francisco is understandably sparse: most of it is separated from cell towers and GPS satellites by rock and/or water.</p>\n<p>Most of my travel is on foot, by bike, or via public transit. Not content with the Mount Monadnock hike data, I tried another quick drive up into <a href=\"http://goo.gl/maps/zk3AD\">Tilden</a>:</p>\n<img src=\"https://lh5.googleusercontent.com/-MCZ55KYjgcE/UJgVjNWQ0FI/AAAAAAAAALo/pibM6xiJmUE/s640/map-drive-test.jpg\" />\n<p>Google Latitude captured <em>just four points during the 20-minute drive.</em></p>\n<h2 id=\"exhibit-b%3A-some-analysis\">Exhibit B: Some Analysis <a class=\"direct-link\" href=\"#exhibit-b%3A-some-analysis\">#</a></h2>\n<p>You can see the code for this analysis <a href=\"https://github.com/candu/quantified-savagery-files/tree/master/Location/kml\">here</a> and <a href=\"https://github.com/candu/quantified-savagery-files/tree/master/Location/api\">here</a>.</p>\n<p>After trudging through several lackluster map views, I'm left with a nagging impression:</p>\n<blockquote>\nThis data isn't that useful.\n</blockquote>\n<p>This impression deserves further analysis, so I grab the KML to answer some of my questions. First off: <em>how often is Google Latitude checking my location?</em></p>\n<img src=\"https://lh5.googleusercontent.com/-A7we5G7pYIw/UJb-xhCk_oI/AAAAAAAAAKk/O7ZwpxF_uQs/s640/timings-frequency.jpg\" />\n<p><em>About every two minutes.</em> GPS is a <a href=\"/posts/2012-10-29-persistent-location-tracking-picking-the-right-tool/\">huge battery drain</a>; increasing the time between updates can help by allowing the GPS radio to enter an idle state. <em>How are those location readings scheduled?</em></p>\n<img src=\"https://lh6.googleusercontent.com/-PMYu61X440I/UJb-yCEbuBI/AAAAAAAAAKs/umbJNuuVfo0/s640/timings-second-histogram.jpg\" />\n<p>Google Latitude really likes spacing its readings out by a <em>whole number of minutes.</em></p>\n<p><em>How accurate is the data?</em> The KML doesn't provide <a href=\"http://en.wikipedia.org/wiki/Dilution_of_precision_(GPS)\">accuracy estimates</a> for its locations. Fortunately, the <a href=\"https://developers.google.com/latitude/\">Google Latitude API</a> does, so I retrieve my data using <a href=\"https://github.com/candu/quantified-savagery-files/blob/master/Location/api/scrape.py\">this script</a> and look at the accuracy readings:</p>\n<img src=\"https://lh3.googleusercontent.com/-p5senVUtgqM/UJb-ybk3zEI/AAAAAAAAAK0/qUvLSvog15E/s640/accuracy-histogram.jpg\" />\n<p>Actually, <em>the readings have fairly high accuracy.</em> Only 7% of readings have a reported error radius greater than 100m.</p>\n<p>The maps above suggest that location readings are less accurate while travelling at high speed. Is that true? The API provides speed estimates for some readings, but this data is kind of sparse:</p>\n<pre><code>$ python speed.py &lt; history.api\nfound 7429 speed values among 20898 readings\n</code></pre>\n<p>I try a different method: the <a href=\"http://mathforum.org/library/drmath/view/51879.html\">Haversine distance formula</a>, which gives me the distance between two points on the Earth's surface:</p>\n<pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">haversineDistance</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><br>  <span class=\"token triple-quoted-string string\">\"\"\"<br>  Distance (in meters) between two Locations. Uses the Haversine formula.<br><br>  See http://www.movable-type.co.uk/scripts/latlong.html for corresponding<br>  JavaScript implementation.<br>  \"\"\"</span><br>  <span class=\"token comment\"># Earth's radius in meters</span><br>  R <span class=\"token operator\">=</span> <span class=\"token number\">6371009</span><br>  dLat <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>radians<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">.</span>lat <span class=\"token operator\">-</span> A<span class=\"token punctuation\">.</span>lat<span class=\"token punctuation\">)</span><br>  dLon <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>radians<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">.</span>lng <span class=\"token operator\">-</span> A<span class=\"token punctuation\">.</span>lng<span class=\"token punctuation\">)</span><br>  lat1 <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>radians<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">.</span>lat<span class=\"token punctuation\">)</span><br>  lat2 <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>radians<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">.</span>lat<span class=\"token punctuation\">)</span><br>  sLat <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">(</span>dLat <span class=\"token operator\">/</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><br>  sLon <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">(</span>dLon <span class=\"token operator\">/</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><br>  a <span class=\"token operator\">=</span> sLat <span class=\"token operator\">*</span> sLat <span class=\"token operator\">+</span> sLon <span class=\"token operator\">*</span> sLon <span class=\"token operator\">*</span> math<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">(</span>lat1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> math<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">(</span>lat2<span class=\"token punctuation\">)</span><br>  c <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span> <span class=\"token operator\">*</span> math<span class=\"token punctuation\">.</span>atan2<span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>  <span class=\"token keyword\">return</span> R <span class=\"token operator\">*</span> c</code></pre>\n<p>I use this distance formula to get a plot of accuracy versus travelling speed:</p>\n<img src=\"https://lh5.googleusercontent.com/-ba4lES16aCU/UJb-ytwI4OI/AAAAAAAAAK8/-OZvTHzgZjk/s640/accuracy-vs-speed.jpg\" />\n<p><em>No clear correlation here</em>; there are low-quality readings at both low and high speeds. There are several possible explanations:</p>\n<ul>\n<li><strong>Confirmation bias:</strong> I mistakenly extrapolated a small handful of low-quality readings taken at high speeds to a general pattern.</li>\n<li><strong>Misinterpretation:</strong> Some of the Mount Monadnock readings look way off; perhaps the error radius doesn't mean what I think it does.</li>\n<li><strong>Different location sources:</strong> Location accuracy is <a href=\"http://en.wikipedia.org/wiki/Dilution_of_precision_(GPS)\">relatively well-defined</a> for GPS, but I'm not sure what happens when cell towers or WiFi access points are incorporated into location fixes.</li>\n<li><strong>Longer sampling interval:</strong> Maybe Google Latitude assumes that precise location tracking is less important when driving.</li>\n</ul>\n<p>To test this last hypothesis, I also <em>plot sampling interval versus speed:</em></p>\n<img src=\"https://lh5.googleusercontent.com/-__3m3z_oQfQ/UJcC4GeNhyI/AAAAAAAAALQ/HI6XQdHjtns/s640/timings-vs-speed.jpg\" />\n<p>Nothing conclusive there.</p>\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p><em>The problem appears to be sampling frequency.</em> To reduce battery usage, <em>Google Latitude polls about once every two minutes.</em> While it has some mechanism for polling more often in periods of high activity, it's unclear how that works.</p>\n<p>Reliance on fixes from cell towers and WiFi may be reducing location quality in more remote areas. Testing this hypothesis is difficult: how do you quantify remote? One possibility is to compute nearest-neighbor distance against <a href=\"http://www.maxmind.com/en/worldcities\">a database of cities</a>. Another confounding factor is the reliability of those <code>accuracy</code> values. Improving upon that would likely involve manual labelling.</p>\n<h2 id=\"why-do-this%3F\">Why Do This? <a class=\"direct-link\" href=\"#why-do-this%3F\">#</a></h2>\n<blockquote>\nAccuracy is not binary.\n</blockquote>\n<p>In Quantified Self applications, we <em>use personal data to drive changes in our lives.</em> We put a lot of trust in the accuracy and relevance of that data, and <em>we extend that trust to the tools and services that collect it.</em> We trust <a href=\"http://www.fitbit.com/\">Fitbit</a> to track our fitness. We trust <a href=\"http://www.myzeo.com/sleep/\">Zeo</a> to improve our sleep. We trust <a href=\"http://www.lumosity.com/\">Lumosity</a> to train our perception and attentiveness.</p>\n<p>In giving so much trust to these tools, we sometimes forget that <em>data are not infallible.</em> <a href=\"http://www.pbs.org/wgbh/aso/databank/entries/dp27un.html\">Physics guarantees</a> that there is no such thing as perfect data. <em>All data contain error.</em> As a system consisting of geosynchronous satellites that travel at relativistically significant speeds and beam data through our multilayered atmosphere to tiny chip radios sandwiched between layers of dense circuitry, GPS is understandably <a href=\"http://www.kowoma.de/en/gps/errors.htm\">error-prone.</a> When your chosen tools and services add noise on top of that, it's reasonable to ask:</p>\n<blockquote>\nHow much trust should I place in the output?\n</blockquote>\n",
      "date_published": "2012-11-02T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2012-10-29-persistent-location-tracking-picking-the-right-tool/",
      "url": "https://blog.savageevan.com/posts/2012-10-29-persistent-location-tracking-picking-the-right-tool/",
      "title": "Persistent Location Tracking: Picking The Right Tool",
      "content_html": "<p>In this post, I compare Google Latitude and InstaMapper, two popular services for persistent location tracking. I walk through installation and data extraction via API for each service, then provide some subjective first impressions as to which one better suits my location-tracking needs.</p>\n<!-- more -->\n<h2 id=\"evaluating-tools\">Evaluating Tools <a class=\"direct-link\" href=\"#evaluating-tools\">#</a></h2>\n<p>As the ecosystem of self-tracking tools <a href=\"http://quantifiedself.com/2011/03/the-state-of-quantified-self-a-year-of-growth/\">grows exponentially</a>, choosing the right tool is becoming an increasingly daunting task. To add to the complexity of this decision, self-tracking tools are <em>highly personal.</em></p>\n<blockquote>\nHow do I pick the best tool for me?\n</blockquote>\n<p>This question is far from monolithic:</p>\n<ul>\n<li>Do I want <strong>manual</strong> or <strong>automatic</strong> tracking?\n<ul>\n<li>How much <em>time and effort</em> am I willing to spend on self-tracking?</li>\n<li>Is a hybrid <em>automatic plus manual annotation</em> approach workable?</li>\n</ul>\n</li>\n<li>Do I want <strong>persistent</strong> tracking?\n<ul>\n<li><em>All day?</em> Or only at predetermined times?</li>\n<li><em>Every day?</em> What if I'm on vacation?</li>\n</ul>\n</li>\n<li>Do I want <strong>raw data access?</strong>\n<ul>\n<li>How do I want to access that data? Through <em>Excel CSV files?</em> Via a <em>developer-friendly API?</em></li>\n<li>What <em>granularity</em> do I want? Sub-second? Daily?</li>\n<li>What <em>parameters</em> do I want? For location, is <code>(lat, long)</code> enough? Do I want <em>altitude</em> as well? GPS fix <em>accuracy?</em></li>\n</ul>\n</li>\n</ul>\n<p>Without a <em>searchable database of self-tracking tools</em>, these questions can be difficult to answer. The main <a href=\"http://quantifiedself.com/\">Quantified Self website</a> includes a <a href=\"http://quantifiedself.com/guide/\">Guide to Self-Tracking Tools</a>, but their implementation is subject to criticism:</p>\n<blockquote cite=\"https://www.rwjf.org/content/dam/farm/reports/program_results_reports/2012/rwjf400733\">\n  <p>\nIn a report to RWJF, Project Director Alexandra C. Carmichael noted that the guide was more a catalog of tools than a useful manual for people wanting to choose and use these tools.\n</p>\n  <footer>&ndash; Robert Wood Johnson Foundation, <cite><a href=\"https://www.rwjf.org/content/dam/farm/reports/program_results_reports/2012/rwjf400733\">A Digital Guide for Self-Tracking Goes Online</a></footer>\n</blockquote>\n<p>This is a point worth repeating. Simply listing tools is <em>not enough</em>; a database of tools <em>must answer these basic questions</em> to be useful. A quick search on the Guide for <a href=\"http://quantifiedself.com/guide/tag/location\">location-related tools</a> comes up short:</p>\n<img src=\"https://lh6.googleusercontent.com/-1r1swg9oBxo/UJA_is6HMSI/AAAAAAAAAIQ/zoiBG4fRAPU/s640/qs-guide-location-apps.jpg\" />\n<p>Why is <a href=\"http://moodpanda.com/\">MoodPanda</a> listed? I suppose it must location-tag mood entries, but <em>that isn't made explicit in the description.</em> <a href=\"http://www.momentoapp.com/\">Momento</a> makes a bit more sense, but it's primarily a journalling app. <a href=\"https://foursquare.com/\">Foursquare</a> is definitely location-based, but anyone unfamiliar with it <em>must read its description closely</em> to realize that it relies on manual check-ins.</p>\n<p>In lieu of a useful tool database, the only effective option is direct evaluation. By investigating two popular location tracking tools, I'll demonstrate how such an evaluation might be carried out.</p>\n<h2 id=\"the-tools\">The Tools <a class=\"direct-link\" href=\"#the-tools\">#</a></h2>\n<h3 id=\"google-latitude\">Google Latitude <a class=\"direct-link\" href=\"#google-latitude\">#</a></h3>\n<p>Google Latitude bills itself primarily as a social location sharing service:</p>\n<img src=\"https://lh5.googleusercontent.com/-ZGGebfguFEk/UJA_hShHXRI/AAAAAAAAAH4/kziP-01pI_g/s800/banner-glatitude.jpg\" />\n<p>Social capacities aside, the <a href=\"https://maps.google.com/locationhistory/b/0\">Location History</a> functionality can be used as a persistent location-tracking tool.</p>\n<h3 id=\"instamapper\">InstaMapper <a class=\"direct-link\" href=\"#instamapper\">#</a></h3>\n<p>I first heard of InstaMapper from <a href=\"http://vimeo.com/8545134\">Ted Power's talk on geo-tracking</a>. Unlike Google Latitude, InstaMapper focuses more on personal tracking:</p>\n<img src=\"https://lh4.googleusercontent.com/-dOIGJWcJ7uc/UJA_h8QM2FI/AAAAAAAAAIA/0owDXIrD6Ro/s800/banner-instamapper.jpg\" />\n<h3 id=\"the-criteria\">The Criteria <a class=\"direct-link\" href=\"#the-criteria\">#</a></h3>\n<p>My ideal location tracking tool is:</p>\n<ul>\n<li><strong>Android-compatible:</strong> It should work with my <a href=\"www.razr.com/RAZR-M\">RAZR M</a> running <a href=\"http://www.android.com/about/ice-cream-sandwich/\">Android 4.0.4 (Ice Cream Sandwich)</a>.</li>\n<li><strong>Battery-friendly:</strong> It should allow me to go at least a day <em>without recharging.</em></li>\n<li><strong>Automatic:</strong> It should track my location <em>without requiring check-ins</em> or other manual input.</li>\n<li><strong>Persistent:</strong> It should track my location <em>constantly.</em></li>\n<li><strong>Fine-grained:</strong> It should be capable of <em>per-minute resolution or better.</em></li>\n<li><strong>Developer-friendly:</strong> It should <em>provide an API</em> for fetching location history, and the data offered through that API should be <em>as complete as possible.</em></li>\n</ul>\n<p>Both tools are <em>Android-compatible</em>, <em>automatic</em>, and <em>persistent</em> already, which narrows down the list of criteria to evaluate.</p>\n<h2 id=\"installation\">Installation <a class=\"direct-link\" href=\"#installation\">#</a></h2>\n<h3 id=\"google-latitude-2\">Google Latitude <a class=\"direct-link\" href=\"#google-latitude-2\">#</a></h3>\n<p>Enabling automatic location tracking on Android requires <em>only a single setting change:</em></p>\n<img src=\"https://lh4.googleusercontent.com/-lGwyff6IKAQ/UJA_jzsY3CI/AAAAAAAAAIw/qgFZr8kT1xE/s288/install-glatitude-step1.jpg\" />\n<img src=\"https://lh5.googleusercontent.com/-v-7rvy4kAk4/UJA_kbfLddI/AAAAAAAAAI4/MLzFAjPXgR8/s288/install-glatitude-step2.jpg\" />\n<img src=\"https://lh3.googleusercontent.com/-rooAhkMibWg/UJA_kjz8o1I/AAAAAAAAAJA/sCnrK_yNHbE/s288/install-glatitude-step3.jpg\" />\n<img src=\"https://lh5.googleusercontent.com/-8jz3N_5HkUA/UJA_k6mNTAI/AAAAAAAAAJI/qerZyoCzXbo/s288/install-glatitude-step4.jpg\" />\n<h3 id=\"instamapper-2\">InstaMapper <a class=\"direct-link\" href=\"#instamapper-2\">#</a></h3>\n<p>I followed the Android installation directions <a href=\"http://www.instamapper.com/android_howto.html\">here</a>. After you <a href=\"https://www.instamapper.com/fe?page=register\">register for an InstaMapper account</a>, you install InstaMapper's <a href=\"https://play.google.com/store/apps/details?id=com.instamapper.gpstracker&amp;hl=en\">GPS Tracker app</a>:</p>\n<img src=\"https://lh5.googleusercontent.com/-FJZ7CxlpWSE/UJA_lDw4OVI/AAAAAAAAAJQ/pCreIS9emn0/s288/install-instamapper-step1.jpg\" />\n<h3 id=\"comparison\">Comparison <a class=\"direct-link\" href=\"#comparison\">#</a></h3>\n<p>Both tools are easily installed, but <em>Google Latitude</em> wins on simplicity. This is unsurprising, as Google Latitude comes pre-installed.</p>\n<h2 id=\"data-export\">Data Export <a class=\"direct-link\" href=\"#data-export\">#</a></h2>\n<h3 id=\"google-latitude-3\">Google Latitude <a class=\"direct-link\" href=\"#google-latitude-3\">#</a></h3>\n<p>To export data from the Location History dashboard, click on <em>Export KML</em> under the calendar widget:</p>\n<img src=\"https://lh3.googleusercontent.com/-N_E7GC01k3I/UJA_lY310cI/AAAAAAAAAJY/B6qCcqCAPm0/s800/export-glatitude.jpg\" />\n<h3 id=\"instamapper-3\">InstaMapper <a class=\"direct-link\" href=\"#instamapper-3\">#</a></h3>\n<p>Head to the <em>data page</em> for your device:</p>\n<img src=\"https://lh4.googleusercontent.com/-WiPRLpRcC9Q/UJA_l7UA-cI/AAAAAAAAAJg/ienRb1xYY2o/s400/export-instamapper-step1.jpg\" />\n<img src=\"https://lh4.googleusercontent.com/-kvWTFuAZoJ8/UJA_mK_zsbI/AAAAAAAAAJk/aG-iJs2Sfp8/s400/export-instamapper-step2.jpg\" />\n<p>Here's where this process gets weird. To export your data, you first have to <em>define a track:</em></p>\n<img src=\"https://lh3.googleusercontent.com/-0j8AdUIinoU/UJA_msnEnLI/AAAAAAAAAKM/LfOZOnEyOJA/s400/export-instamapper-step3.jpg\" />\n<img src=\"https://lh5.googleusercontent.com/-aiXmPGeKOxo/UJA_nRZr93I/AAAAAAAAAJ0/wWNddc34ZXo/s400/export-instamapper-step4.jpg\" />\n<img src=\"https://lh6.googleusercontent.com/-tgipa_V9TfU/UJA_ncU8LeI/AAAAAAAAAJ8/2HIvGJ_ycfY/s400/export-instamapper-step5.jpg\" />\n<p>Once the track is created, you can <em>visit the Track Manager</em> to export your track data in a variety of formats:</p>\n<img src=\"https://lh6.googleusercontent.com/-OyteTDJcqYk/UJA_n7L2QvI/AAAAAAAAAKE/tvEkdMbB-Ik/s400/export-instamapper-step6.jpg\" />\n<img src=\"https://lh5.googleusercontent.com/-e52trEcnN0I/UJA_ob4XGgI/AAAAAAAAAKI/REcryQodFq0/s400/export-instamapper-step7.jpg\" />\n<h3 id=\"comparison-2\">Comparison <a class=\"direct-link\" href=\"#comparison-2\">#</a></h3>\n<p>This one goes to <em>Google Latitude</em>. Aside from the terrible UI flow, InstaMapper has some other problems:</p>\n<ul>\n<li>The <code>accuracy</code> field is missing, making it harder to <em>filter out noisy readings.</em></li>\n<li>As stated in the <a href=\"http://www.instamapper.com/faq.html\">InstaMapper FAQ</a>, data access is <em>limited to the previous 30 days or 100 000 locations.</em></li>\n</ul>\n<h2 id=\"api-fetching\">API Fetching <a class=\"direct-link\" href=\"#api-fetching\">#</a></h2>\n<h3 id=\"tailers-and-streams\">Tailers and Streams <a class=\"direct-link\" href=\"#tailers-and-streams\">#</a></h3>\n<p>Many real-time APIs provide <a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer\">REST</a> endpoints for fetching time-bounded chunks of data, such as<br>\n<code>https://www.googleapis.com/latitude/v1/location?key=INSERT-YOUR-KEY&amp;min-time=1111&amp;max-time=2222&amp;max-results=10</code>.</p>\n<p>By keeping track of a <code>since</code> time to fetch after, we can easily turn this into a stream:</p>\n<pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span>since<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><br>  <span class=\"token comment\"># TODO: actually fetch data</span><br>  <span class=\"token keyword\">pass</span><br><br><span class=\"token keyword\">def</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span>since<span class=\"token punctuation\">,</span> freq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><br>  elapsed <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> since<br>  wait <span class=\"token operator\">=</span> freq <span class=\"token operator\">-</span> elapsed<br>  <span class=\"token keyword\">if</span> wait <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span><br>    <span class=\"token keyword\">return</span><br>  time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>wait<span class=\"token punctuation\">)</span><br><br><span class=\"token keyword\">def</span> <span class=\"token function\">poll</span><span class=\"token punctuation\">(</span>freq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><br>  since <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>  <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span><br>    sleep<span class=\"token punctuation\">(</span>since<span class=\"token punctuation\">,</span> freq<span class=\"token punctuation\">)</span><br>    locations <span class=\"token operator\">=</span> request<span class=\"token punctuation\">(</span>since<span class=\"token punctuation\">)</span><br>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> locations<span class=\"token punctuation\">:</span><br>      <span class=\"token keyword\">continue</span><br>    doSomething<span class=\"token punctuation\">(</span>locations<span class=\"token punctuation\">)</span><br>    since <span class=\"token operator\">=</span> locations<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>timestamp</code></pre>\n<p>This pattern is often referred to as a <em>tailer.</em> Why? Suppose we have a simple implementation of <code>doSomething()</code>:</p>\n<pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span>locations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><br>  <span class=\"token keyword\">for</span> location <span class=\"token keyword\">in</span> locations<span class=\"token punctuation\">:</span><br>    <span class=\"token keyword\">print</span> location</code></pre>\n<p>This prints out locations as they are received, similar to UNIX <code>tail -F</code>. By adjusting <code>freq</code> I can make different real-time guarantees, although at some point the upstream API will start throttling my requests.</p>\n<h3 id=\"google-latitude-4\">Google Latitude <a class=\"direct-link\" href=\"#google-latitude-4\">#</a></h3>\n<p>You can see a working tailer implementation <a href=\"https://github.com/candu/quantified-savagery-files/blob/master/Location/tail_glatitude.py\">here</a>.</p>\n<p>To access the <a href=\"https://developers.google.com/latitude/\">Google Latitude API</a>, you first need to <a href=\"https://code.google.com/apis/console/b/0/\">register an application</a>. This gives you the necessary parameters <code>YOUR_KEY</code>, <code>YOUR_SECRET</code> for stepping through the OAuth flow.</p>\n<p>With the Python library <a href=\"http://code.google.com/p/google-api-python-client/wiki/OAuth2Client\">oauthclient2</a>, retrieving OAuth credentials is relatively painless:</p>\n<pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> oauth2client<span class=\"token punctuation\">.</span>client <span class=\"token keyword\">import</span> OAuth2WebServerFlow<br><span class=\"token keyword\">from</span> oauth2client<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span> <span class=\"token keyword\">import</span> Storage<br><span class=\"token keyword\">from</span> oauth2client<span class=\"token punctuation\">.</span>tools <span class=\"token keyword\">import</span> run<br><br><span class=\"token keyword\">def</span> <span class=\"token function\">getCredentials</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> secret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><br>  flow <span class=\"token operator\">=</span> OAuth2WebServerFlow<span class=\"token punctuation\">(</span><br>    client_id<span class=\"token operator\">=</span>key<span class=\"token punctuation\">,</span><br>    client_secret<span class=\"token operator\">=</span>secret<span class=\"token punctuation\">,</span><br>    scope<span class=\"token operator\">=</span><span class=\"token string\">'https://www.googleapis.com/auth/latitude.all.best'</span><span class=\"token punctuation\">,</span><br>    redirect_uri<span class=\"token operator\">=</span><span class=\"token string\">'http://localhost:8080/oauth2callback'</span><br>  <span class=\"token punctuation\">)</span><br>  storage <span class=\"token operator\">=</span> Storage<span class=\"token punctuation\">(</span><span class=\"token string\">'.creds'</span><span class=\"token punctuation\">)</span><br>  <span class=\"token keyword\">return</span> run<span class=\"token punctuation\">(</span>flow<span class=\"token punctuation\">,</span> storage<span class=\"token punctuation\">)</span></code></pre>\n<p><code>oauth2client.tools.run()</code> invokes a browser window and starts an HTTP server to receive the OAuth callback. With the credentials, we can <em>make a signed API request:</em></p>\n<pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> httplib2<br><span class=\"token keyword\">import</span> urllib<br><span class=\"token keyword\">import</span> json<br><br><span class=\"token keyword\">def</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> since<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><br>  http <span class=\"token operator\">=</span> httplib2<span class=\"token punctuation\">.</span>Http<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>  credentials <span class=\"token operator\">=</span> getCredentials<span class=\"token punctuation\">(</span>YOUR_KEY<span class=\"token punctuation\">,</span> YOUR_SECRET<span class=\"token punctuation\">)</span><br>  credentials<span class=\"token punctuation\">.</span>authorize<span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">)</span><br>  url <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.googleapis.com/latitude/v1/location?%s'</span> <span class=\"token operator\">%</span> urllib<span class=\"token punctuation\">.</span>urlencode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>    <span class=\"token string\">'max-results'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'min-time'</span><span class=\"token punctuation\">:</span> since<span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'max-time'</span><span class=\"token punctuation\">:</span> since <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">15</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'granularity'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'best'</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  resp<span class=\"token punctuation\">,</span> content <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><br>  data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><br>  <span class=\"token keyword\">if</span> data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span><br>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span><br>  <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'items'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n<p>There are some minor details:</p>\n<ul>\n<li>The API <em>uses milliseconds for its timestamps</em>, so my <code>since</code> values take this into account.</li>\n<li>Without <code>max-time</code>, the API <em>returns the most recent</em> <code>max-results</code> locations. I supply a 150-second window.</li>\n<li>If there are no locations within the given time range, the API <strong>does not</strong> populate <code>data['data']['items']</code>. I use <code>get()</code> to work around the resulting <code>KeyError</code>.</li>\n<li>In the event of an error, the API populates <code>data['error']</code>. I use <code>None</code> as a <em>sentinel value</em> to indicate that an error has occurred.</li>\n</ul>\n<h3 id=\"instamapper-4\">InstaMapper <a class=\"direct-link\" href=\"#instamapper-4\">#</a></h3>\n<p>You can see a working tailer implementation <a href=\"https://github.com/candu/quantified-savagery-files/blob/master/Location/tail_instamapper.py\">here</a>.</p>\n<p>InstaMapper doesn't use OAuth; instead, it uses a unique key <code>YOUR_KEY</code> that is passed as a GET parameter to the REST API:</p>\n<pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> httplib<br><span class=\"token keyword\">import</span> json<br><span class=\"token keyword\">import</span> urllib<br><br><span class=\"token keyword\">def</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> since<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><br>  params <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token string\">'action'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'getPositions'</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'key'</span><span class=\"token punctuation\">:</span> YOUR_KEY<span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'num'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'from_ts'</span><span class=\"token punctuation\">:</span> since<span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'format'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><br>  url <span class=\"token operator\">=</span> <span class=\"token string\">'http://www.instamapper.com/api?{1}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>APIHOST<span class=\"token punctuation\">,</span> urllib<span class=\"token punctuation\">.</span>urlencode<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>  conn <span class=\"token operator\">=</span> httplib<span class=\"token punctuation\">.</span>HTTPConnection<span class=\"token punctuation\">(</span><span class=\"token string\">'www.instamapper.com'</span><span class=\"token punctuation\">)</span><br>  conn<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><br>  resp <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>getresponse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>  <span class=\"token keyword\">if</span> resp<span class=\"token punctuation\">.</span>status <span class=\"token operator\">!=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">:</span><br>    <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'HTTP {0} {1}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">,</span> resp<span class=\"token punctuation\">.</span>reason<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>  data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>  conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>  <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'positions'</span><span class=\"token punctuation\">]</span></code></pre>\n<h3 id=\"comparison-3\">Comparison <a class=\"direct-link\" href=\"#comparison-3\">#</a></h3>\n<p>Although InstaMapper's API is arguably simpler to use, I'll award this one to <em>Google Latitude:</em></p>\n<ul>\n<li><strong>Security:</strong> InstaMapper uses unencrypted HTTP GET requests, so anyone running a <a href=\"http://www.wireshark.org/\">packet sniffer</a> on my network has <em>complete access to my location data.</em> Google Latitude uses HTTPS and OAuth. No contest.</li>\n<li><strong>Support:</strong> I can <em>leverage the community of Google API users</em> to help resolve any issues I encounter.</li>\n<li><strong>Data:</strong> again, InstaMapper is <em>missing location accuracy.</em></li>\n<li><strong>Request Volume:</strong> InstaMapper permits one request every 10 seconds. Google Latitude allows 1 000 000 requests per day, or <em>one request every 0.0864 seconds.</em></li>\n</ul>\n<h2 id=\"battery-usage\">Battery Usage <a class=\"direct-link\" href=\"#battery-usage\">#</a></h2>\n<p>To find out how battery-friendly the two Android apps are, I <em>check the<br>\nBattery Manager:</em></p>\n<img src=\"https://lh6.googleusercontent.com/-B246p7a_vbg/UJA_i7iGdyI/AAAAAAAAAIU/Q6U6hLdc2hg/s288/battery-overview.jpg\" />\n<img src=\"https://lh5.googleusercontent.com/-X6ClOm7t-8s/UJA_jVwjgrI/AAAAAAAAAIk/V1lOfjmpO2o/s288/battery-maps.jpg\" />\n<img src=\"https://lh5.googleusercontent.com/-r7N176E75z0/UJA_jdJfs_I/AAAAAAAAAIg/XQnPc0Q2lgY/s288/battery-gps-tracker.jpg\" />\n<h3 id=\"comparison-4\">Comparison <a class=\"direct-link\" href=\"#comparison-4\">#</a></h3>\n<p><em>Google Latitude</em> wins this one as well. InstaMapper keeps the GPS radio running almost constantly, whereas Google Latitude manages to sip radio access. I'm guessing that it uses WiFi, cell towers, and other non-GPS sources where possible.</p>\n<p>Without these power consumption improvements, InstaMapper's GPS Tracker <em>uses an order of magnitude more energy</em> than Google Latitude. Ouch.</p>\n<h2 id=\"first-impressions\">First Impressions <a class=\"direct-link\" href=\"#first-impressions\">#</a></h2>\n<p>After a day of persistent location tracking with both Google Latitude and InstaMapper, <em>Google Latitude wins hands-down.</em> It's <em>easy to install</em>, it provides <em>simple and secure data access</em> via <code>oauth2client</code>, and it <em>preserves battery life nicely.</em></p>\n",
      "date_published": "2012-10-29T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2012-10-22-dont-hate-cross-correlate/",
      "url": "https://blog.savageevan.com/posts/2012-10-22-dont-hate-cross-correlate/",
      "title": "Don&#39;t Hate, Cross-Correlate",
      "content_html": "<p>In this post, I discuss cross-correlation. Although commonly used in signal processing, cross-correlation can be useful in a Quantified Self context. I'll present a bit of the mathematics behind cross-correlation, demonstrate a quick example, and briefly explain where you might use this in analyzing your personal data.</p>\n<!-- more -->\n<h2 id=\"the-inspiration\">The Inspiration <a class=\"direct-link\" href=\"#the-inspiration\">#</a></h2>\n<p>I was going through my <a href=\"http://reader.google.com\">Google Reader</a> queue this morning and came across <a href=\"http://vimeo.com/50329491\">this talk</a> by <a href=\"http://www.linkedin.com/in/jeffzira\">Jeff Zira</a>, a product manager at <a href=\"http://www.lark.com/\">Lark Technologies</a>. The talk asks a simple question:</p>\n<blockquote>\nDo Jeff and his fiancée influence each other's sleep patterns?\n</blockquote>\n<p>He presents raw time-series sleep data collected using <a href=\"http://www.lark.com/products/lark-life/experience\">larklife</a>, then attempts to answer this question in a couple of different ways. He first displays a <em>timeline visualization</em> of peak overnight activity:</p>\n<img src=\"https://lh6.googleusercontent.com/-nU3qiQKycow/UIbogGdHsGI/AAAAAAAAAHY/Ax23iCZB98M/s640/jeffzira-peak-vis.jpg\" />\n<p>Since his peaks often occur slightly after her peaks, he uses this as evidence that she's waking him up. He also shows the <em>difference signal</em> between their sleep patterns, but finds this less than conclusive:</p>\n<img src=\"https://lh4.googleusercontent.com/-GAskT1r-gP4/UIbogcHUqCI/AAAAAAAAAHc/XbCl5IvAves/s640/jeffzira-diff-vis.jpg\" />\n<p>After watching this talk, I immediately thought:</p>\n<blockquote>\nIs there a more precise way to answer this question?\n</blockquote>\n<h2 id=\"the-mathematics\">The Mathematics <a class=\"direct-link\" href=\"#the-mathematics\">#</a></h2>\n<p>Note that term <em>difference signal</em> above. Any time-series dataset is a signal, which means the powerful tools of signal processing can be applied!</p>\n<p>Let the sleep patterns of Jeff and his fiancée be the signals $ S(\\tau) $ and $ T(\\tau) $ respectively. Let $ f(S(\\tau), T(\\tau)) $ be the <em>similarity</em> between those signals. Ignoring (for now) the fact that $ f $ remains undefined, I'm looking for the <em>time shift</em> $ t $ that maximizes</p>\n<p>$$<br>\nf(S(\\tau + t), T(\\tau))<br>\n$$</p>\n<p>As a side note, the <em>difference signal</em> is a new signal $ R(\\tau) = S(\\tau) - T(\\tau) $.</p>\n<p>First, however, I need a reasonable <em>similarity function</em> $ f $. The answer lies in <em>cross-correlation:</em></p>\n<blockquote cite=\"https://en.wikipedia.org/wiki/Cross-correlation\">\n  <p>\nIn signal processing, cross-correlation is a measure of similarity of two waveforms as a function of a time-lag applied to one of them.\n</p>\n  <footer>&ndash; Wikipedia, <cite><a href=\"https://en.wikipedia.org/wiki/Cross-correlation\">Cross-correlation</a></footer>\n</blockquote>\n<p>Perfect! The core of cross-correlation is an integral that looks suspiciously like <a href=\"http://en.wikipedia.org/wiki/Convolution\">convolution</a>, except that we have a term $ T(\\tau + t) $ instead of $ T(\\tau - t) $:</p>\n<p>$$<br>\n(S \\star T)(t) = \\int_{-\\infty}^{\\infty} S^{\\ast}(\\tau) T(\\tau + t) \\mathrm{d}\\tau<br>\n$$</p>\n<p>The desired $ t $ is the <em>global maximum</em> of this cross-correlation function.</p>\n<p>Given two discrete periodic signals <code>S1</code>, <code>S2</code> of equal length, this cross-correlation integral can easily be computed:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">crossCorrelation</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token constant\">S1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">S2</span><span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">var</span> <span class=\"token constant\">N</span> <span class=\"token operator\">=</span> <span class=\"token constant\">S1</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><br>  t <span class=\"token operator\">=</span> t <span class=\"token operator\">%</span> <span class=\"token constant\">N</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    t <span class=\"token operator\">+=</span> <span class=\"token constant\">N</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> tau <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> tau <span class=\"token operator\">&lt;</span> <span class=\"token constant\">N</span><span class=\"token punctuation\">;</span> tau<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token constant\">C</span> <span class=\"token operator\">+=</span> <span class=\"token constant\">S1</span><span class=\"token punctuation\">[</span>tau<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token constant\">S2</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>tau <span class=\"token operator\">+</span> t<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token constant\">N</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br>  <span class=\"token keyword\">return</span> <span class=\"token constant\">C</span> <span class=\"token operator\">/</span> <span class=\"token constant\">N</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>It can be hard to visualize what this is doing, though, so I've provided a <a href=\"#quick-demo\">quick demo</a> below.</p>\n<h3 id=\"an-interactive-example\">An Interactive Example <a class=\"direct-link\" href=\"#an-interactive-example\">#</a></h3>\n<p>If you're viewing this on an RSS reader, check out the example <a href=\"/posts/2012-10-22-dont-hate-cross-correlate/#quick-demo\">on my blog</a>.</p>\n<p>You can see the code for this demo <a href=\"https://github.com/candu/quantified-savagery-files/tree/master/Algorithms/cross-correlation\">here</a>.</p>\n<iframe\n  height=\"480\"\n  id=\"quick-demo\"\n  src=\"https://blog.savageevan.com/quantified-savagery-files/Algorithms/cross-correlation/index.html\"\n  width=\"100%\">\n</iframe>\n<p>Use the select boxes to change the red and blue functions. Click and drag on the chart at top to see how sliding the blue function affects the cross-correlation. Try different combinations of functions and <em>see where the cross-correlation is maximized!</em></p>\n<h3 id=\"back-to-the-original-motivation\">Back To The Original Motivation <a class=\"direct-link\" href=\"#back-to-the-original-motivation\">#</a></h3>\n<p>Given the two sleep signals $ S, T $ above, cross-correlation makes it possible to answer these questions:</p>\n<ul>\n<li>Who wakes up first? By how long?</li>\n<li>Accounting for the time shift in awakening, how closely do the sleep patterns match?</li>\n</ul>\n<p>This gives a <em>more rigorous</em> sense of whether the peaks in nighttime activity actually do coincide. It also identifies the person who wakes up first and how much earlier they wake up.</p>\n<p>While simply <em>looking at the data</em> can be very effective, rigorous analysis has definite value if you plan to <em>carry out further experiments.</em> Armed with cross-correlation data, you can answer questions like</p>\n<blockquote>\nOkay, I switched to a separately-coiled mattress. How well does that prevent\nus from waking each other up?\n</blockquote>\n<p>In general, <em>signal processing</em> techniques can be highly useful in examining time-series data.</p>\n<h2 id=\"up-next\">Up Next <a class=\"direct-link\" href=\"#up-next\">#</a></h2>\n<p>This was a slight diversion from my plan to talk about upcoming experiments, which I'll return to in my next few posts. If you just can't wait, here's a <em>quick summary:</em></p>\n<ul>\n<li><strong>Persistent location tracking:</strong> by <em>constantly tracking my location</em>, I'll have an additional dataset to correlate against.</li>\n<li><strong>Diet:</strong> by <em>taking meal photos</em>, <em>tagging foods</em>, and <em>measuring stress levels after meals</em>, I'll get a better idea of how different foods affect me.</li>\n<li><strong>Finances:</strong> by <em>tracking where Valkyrie and I spend our money</em>, we'll hopefully be able to better control our discretionary spending.</li>\n<li><strong>Loss Aversion:</strong> by <em>experimenting with tracking methods</em>, I'll see if this is something that can be meaningfully tracked over time.</li>\n</ul>\n",
      "date_published": "2012-10-22T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2012-10-18-track-your-happiness-an-adventure-in-data-extraction/",
      "url": "https://blog.savageevan.com/posts/2012-10-18-track-your-happiness-an-adventure-in-data-extraction/",
      "title": "Track Your Happiness: An Adventure In Data Extraction",
      "content_html": "<p>In this post, I go over my first report from <a href=\"https://www.trackyourhappiness.org/\">Track Your Happiness</a>, a tool that uses the <a href=\"https://www.trackyourhappiness.org/\">Experience Sampling Method</a> for mood tracking.</p>\n<!-- more -->\n<h2 id=\"my-report\">My Report <a class=\"direct-link\" href=\"#my-report\">#</a></h2>\n<h3 id=\"charts\">Charts <a class=\"direct-link\" href=\"#charts\">#</a></h3>\n<p>My happiness is <em>relatively constant across days of the week.</em></p>\n<img src=\"https://chart.googleapis.com/chart?chs=310x200&cht=bvg&chco=0088cc&chxt=x%2Cy&chxl=0%3A%7CSun%7CMon%7CTue%7CWed%7CThu%7CFri%7CSat&chxr=1%2C0%2C100&chxs=0%2C666666%2C10%7C1%2C666666%2C10&chd=s%3Aolpkmkp&chbh=30\" alt=\"Weekday\" />\n<p>I'm <em>happiest at the gym or in parks</em>, with vacations and restaurants close behind. &quot;At Home&quot; is mid-pack, with <em>&quot;At Work&quot; near the bottom.</em></p>\n<img src=\"https://chart.googleapis.com/chart?chs=310x338&cht=bhg&chco=0088cc&chxt=y%2Cx&chxl=0%3A%7CBus+Stoo%7CPlane%7CAt+Work%7CIn+A+Car%7CDentist%7CAt+Home%7CAirport%7CRestaurant%7CVacation%7CPark%7CGym&chxr=1%2C0%2C100&chxs=0%2C666666%2C10%7C1%2C666666%2C10&chd=s%3Auusroonliee&chbh=20\" alt=\"Location\" />\n<p><em>Fun, exercise, and food</em> generate the most happiness. <em>Passive actions</em> such as watching TV, commuting, and waiting rank much lower. <em>Work is least happiness-inducing.</em></p>\n<img src=\"https://chart.googleapis.com/chart?chs=310x422&cht=bhg&chco=0088cc&chxt=y%2Cx&chxl=0%3A%7CWorking%7CCommuting%2C+Traveling%7CWaiting%7CWatching+Television%7CReading%7CHome+Computer%7CGrooming%2C+Self+Care%7CShopping%2C+Errands%7CRelaxing%2C+Nothing+Special%7CTalking%2C+Conversation%7CEating%7CPlaying%7CPreparing+Food%7CExercising&chxr=1%2C0%2C100&chxs=0%2C666666%2C10%7C1%2C666666%2C10&chd=s%3Autrrrqpnnnmlkj&chbh=20\" alt=\"What are you doing?\" />\n<p><em>Whether I want to perform a task</em> is a much stronger determinant of happiness than whether I have to:</p>\n<img src=\"https://chart.googleapis.com/chart?chs=310x200&cht=bvg&chco=0088cc&chxt=x%2Cx%2Cy&chxl=0%3A%7CDon%27t+want+to%7CWant+to%7CWant+to%7CDon%27t+want+to%7C1%3A%7CHave+to%7CHave+to%7CDon%27t+have+to%7CDon%27t+have+to&chxr=2%2C0%2C100&chxs=0%2C666666%2C10%7C1%2C666666%2C10%7C2%2C666666%2C10&chd=s%3Agope&chbh=51\" alt=\"Want to / Have to\" />\n<p>I'm <em>happier when outside.</em></p>\n<img src=\"https://chart.googleapis.com/chart?chs=310x126&cht=bhg&chco=0088cc&chxt=y%2Cx&chxl=0%3A%7CNo%7CYes&chxr=1%2C0%2C100&chxs=0%2C666666%2C10%7C1%2C666666%2C10&chd=s%3Apj&chbh=40\" alt=\"Outside?\" />\n<p>I'm <em>happier when alone.</em></p>\n<img src=\"https://chart.googleapis.com/chart?chs=310x126&cht=bhg&chco=0088cc&chxt=y%2Cx&chxl=0%3A%7CNo%7CYes&chxr=1%2C0%2C100&chxs=0%2C666666%2C10%7C1%2C666666%2C10&chd=s%3Apl&chbh=40\" alt=\"Alone\" />\n<p>Given that, it seems counterintuitive that <em>I'm happier when interacting with multiple people.</em></p>\n<img src=\"https://chart.googleapis.com/chart?chs=310x132&cht=bhg&chco=0088cc&chxt=y%2Cx&chxl=0%3A%7CThree+Or+More%7CTwo%7COne&chxr=1%2C0%2C100&chxs=0%2C666666%2C10%7C1%2C666666%2C10&chd=s%3Aorq&chbh=26\" alt=\"Number of people interacting with\" />\n<p>I was also surprised by this one: I'm happiest when <em>talking with acquaintances or friends</em> and least happy when <em>talking with family.</em></p>\n<img src=\"https://chart.googleapis.com/chart?chs=310x198&cht=bhg&chco=0088cc&chxt=y%2Cx&chxl=0%3A%7COther+Relatives%7CSpouse%2FPartner%2FSignificant+Other%7CStrangers%7CCo+Workers%7CFriends%7CAcquaintances&chxr=1%2C0%2C100&chxs=0%2C666666%2C10%7C1%2C666666%2C10&chd=s%3Autsrpo&chbh=20\" alt=\"Who talking with\" />\n<h3 id=\"what-does-it-mean%3F\">What Does It Mean? <a class=\"direct-link\" href=\"#what-does-it-mean%3F\">#</a></h3>\n<p>Even without considering the specific results, I have a few <em>unanswered questions:</em></p>\n<ul>\n<li>What is <em>happiness</em>? How do I judge it at a particular moment? Is my judgment <em>accurate and consistent?</em></li>\n<li>Is it necessarily better to be happier, or is there a threshold past which additional happiness doesn't improve the quality of life?</li>\n<li>Are these results <em>significant?</em> They're computed from just 50 samples, which seems low for drawing such broad conclusions.</li>\n<li>Do these activities make me more or less happy, or <em>do these readings reflect my pre-existing mental state?</em></li>\n</ul>\n<p>There's also the issue of those surprising findings. Am I really less happy when talking with <a href=\"http://www.eecs.berkeley.edu/~valkyrie/\">Valkyrie Savage</a>? To me, the most likely explanation is <em>trust</em>: around her, <em>I feel free to discuss negative aspects of my life.</em> Doing so would necessarily involve fixating on those aspects, which could account for some happiness reduction.</p>\n<p>During this period, I was confronting <em>doubt and frustration in my job.</em> According to my personal data, I was also <a href=\"/posts/2012-10-08-self-tracking-for-panic-a-deeper-look/\">drinking heavily</a>, possibly as a means for coping with that negative emotion. (It doesn't help.) Guilt is a potential factor; perhaps I felt that I was always offloading that doubt and frustration onto her.</p>\n<p>The problem, though, is that <em>none of these explanations are testable</em>. They seem reasonable to me, but from a scientific standpoint they <em>fail a simple criterion:</em></p>\n<blockquote>\nUpon viewing only my data, would an impartial stranger reach similar conclusions?\n</blockquote>\n<p>I can't see how they would, since <em>my explanations involve intricate self-knowledge</em> that is not represented in the data.</p>\n<h3 id=\"a-further-note-on-significance\">A Further Note On Significance <a class=\"direct-link\" href=\"#a-further-note-on-significance\">#</a></h3>\n<p>Let's take a more critical look at this chart:</p>\n<img src=\"https://chart.googleapis.com/chart?chs=310x198&cht=bhg&chco=0088cc&chxt=y%2Cx&chxl=0%3A%7COther+Relatives%7CSpouse%2FPartner%2FSignificant+Other%7CStrangers%7CCo+Workers%7CFriends%7CAcquaintances&chxr=1%2C0%2C100&chxs=0%2C666666%2C10%7C1%2C666666%2C10&chd=s%3Autsrpo&chbh=20\" alt=\"Who talking with\" />\n<p>I mentioned that this data was drawn from a total of 50 samples. I'm assuming that these bars represent <em>average reported happiness</em> in each category. But:</p>\n<ul>\n<li><strong>Which average?</strong> Probably the mean, but that's not made explicit anywhere.</li>\n<li><strong>Where are the error bars?</strong> I have no idea whether the ranking is significant.</li>\n<li><strong>How many samples go into each bar?</strong> Maybe &quot;Acquaintances&quot; and &quot;Other Relatives&quot; are outliers because I rarely talk to people in those categories.</li>\n</ul>\n<p>This leads to an important point:</p>\n<blockquote>\nNever present uncertain information as certain.\n</blockquote>\n<h2 id=\"digging-deeper\">Digging Deeper <a class=\"direct-link\" href=\"#digging-deeper\">#</a></h2>\n<p>Consider this chart:</p>\n<img src=\"https://chart.googleapis.com/chart?chs=310x200&cht=s&chco=0088cc&chxt=x%2Cy&chxr=0%2C0%2C100%7C1%2C0%2C100&chxs=0%2C666666%2C10%7C1%2C666666%2C10&chd=s%3AaUXKPnmomsWw0tSQnXaVrk%2CslrjjuZtXvZotualhrmepm\" alt=\"Focused\" />\n<p><em>Am I happier when I'm more focused?</em> It's hard to tell from looking at this chart. This is a prime use case for <em>linear regression</em>, but I don't have the data! They <a href=\"http://support.trackyourhappiness.org/customer/portal/questions/302357-combine-categories-\">claim to have plans for data export</a>, but I haven't seen those come to fruition. What now?</p>\n<h3 id=\"data-extraction\">Data Extraction <a class=\"direct-link\" href=\"#data-extraction\">#</a></h3>\n<p>Fortunately, the chart was generated using the (now deprecated) <a href=\"https://developers.google.com/chart/image/\">Image Charts</a> functionality of the <a href=\"https://developers.google.com/chart/\">Google Charts API</a>. With Image Charts, you <em>make requests to specially encoded URLs:</em></p>\n<pre class=\"language-bash\"><code class=\"language-bash\">https://chart.googleapis.com/chart<br>  ?chs<span class=\"token operator\">=</span>310x200<br>  <span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">cht</span><span class=\"token operator\">=</span>s<br>  <span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">chco</span><span class=\"token operator\">=</span>0088cc<br>  <span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">chxt</span><span class=\"token operator\">=</span>x%2Cy<br>  <span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">chxr</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>%2C0%2C100%7C1%2C0%2C100<br>  <span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">chxs</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>%2C666666%2C10%7C1%2C666666%2C10<br>  <span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">chd</span><span class=\"token operator\">=</span>s%3AaUXKPnmomsWw0tSQnXaVrk%2CslrjjuZtXvZotualhrmepm</code></pre>\n<p>You can see what all those parameters do <a href=\"https://developers.google.com/chart/image/docs/chart_params\">here</a>, but the one I really care about is <code>chd</code>. This <em>encodes the chart data</em> in the <a href=\"https://developers.google.com/chart/image/docs/data_formats#simple\">Simple Encoding Format</a>. I'll walk through <em>how to decode this data.</em></p>\n<p>As it stands, the value of <code>chd</code> is <a href=\"http://tools.ietf.org/html/rfc3986#section-2.1\">URL-encoded</a>. We need to decode those <code>%3A</code> and <code>%2C</code> escape sequences.</p>\n<pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> urlparse<br>params <span class=\"token operator\">=</span> urlparse<span class=\"token punctuation\">.</span>parse_qs<span class=\"token punctuation\">(</span><span class=\"token string\">'chd=s%3AaUXKPnmomsWw0tSQnXaVrk%2CslrjjuZtXvZotualhrmepm'</span><span class=\"token punctuation\">)</span><br>chd <span class=\"token operator\">=</span> params<span class=\"token punctuation\">[</span><span class=\"token string\">'chd'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 's:aUXKPnmomsWw0tSQnXaVrk,slrjjuZtXvZotualhrmepm'</span></code></pre>\n<p>The <code>s:</code> at the front means <em>use the simple encoding</em>. In that encoding, the characters <code>A-Za-z0-9</code> are mapped to values 0-61 in a, well, simple manner:</p>\n<pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">_get_simple_value</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><br>  <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token string\">'_'</span><span class=\"token punctuation\">:</span><br>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span><br>  <span class=\"token keyword\">if</span> <span class=\"token string\">'A'</span> <span class=\"token operator\">&lt;=</span> c <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'Z'</span><span class=\"token punctuation\">:</span><br>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span><br>  <span class=\"token keyword\">if</span> <span class=\"token string\">'a'</span> <span class=\"token operator\">&lt;=</span> c <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'z'</span><span class=\"token punctuation\">:</span><br>    <span class=\"token keyword\">return</span> <span class=\"token number\">26</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><br>  <span class=\"token keyword\">if</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">&lt;=</span> c <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">:</span><br>    <span class=\"token keyword\">return</span> <span class=\"token number\">52</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><br>  <span class=\"token keyword\">raise</span> ValueError<span class=\"token punctuation\">(</span><span class=\"token string\">'invalid character for simple encoding: {0}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n<p>Here the underscores <code>_</code> indicate missing or <code>null</code> values. With this function, recovering the original data from the <code>chd</code> param is a quick one-liner:</p>\n<pre class=\"language-py\"><code class=\"language-py\">data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>_get_simple_value<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> s <span class=\"token keyword\">in</span> chd<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></code></pre>\n<p>By default, the simple encoding maps onto an effective range of 1-100, so the last step is to normalize this and <code>zip()</code> the lists into pairs:</p>\n<pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">fitSimpleToRange</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> xmin<span class=\"token punctuation\">,</span> xmax<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><br>  <span class=\"token keyword\">if</span> x <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span><br>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span><br>  nx <span class=\"token operator\">=</span> x <span class=\"token operator\">/</span> <span class=\"token number\">61.0</span><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> nx<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> xmin <span class=\"token operator\">+</span> nx <span class=\"token operator\">*</span> xmax<br><br>points <span class=\"token operator\">=</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span><br>  <span class=\"token punctuation\">[</span>fitSimpleToRange<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">[</span>fitSimpleToRange<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><br><span class=\"token punctuation\">)</span></code></pre>\n<p>Done! I've packaged this up as <a href=\"https://github.com/candu/quantified-savagery-files/blob/master/lib/py/chdecode.py\">chdecode</a>, which also deals with the <a href=\"https://developers.google.com/chart/image/docs/data_formats#text\">Basic Text</a> and <a href=\"https://developers.google.com/chart/image/docs/data_formats#extended\">Extended Encoding</a> formats.</p>\n<h3 id=\"let's-see-those-charts-again\">Let's See Those Charts Again <a class=\"direct-link\" href=\"#let's-see-those-charts-again\">#</a></h3>\n<p>You can see the code for this analysis <a href=\"https://github.com/candu/quantified-savagery-files/blob/master/Panic/track-your-happiness/linregress.py\">here</a>.</p>\n<p>Focus, productivity, and sleep quality all have <em>minor positive correlations</em> with happiness:</p>\n<img src=\"https://lh4.googleusercontent.com/-DG51p79XNtk/UIGcRjGMLQI/AAAAAAAAAG4/mk1xaar0yJM/s640/happiness-focus.jpg\" alt=\"Focus\" />\n<img src=\"https://lh6.googleusercontent.com/-85nu0a-MBJw/UIGcRyutW9I/AAAAAAAAAG8/psRbjq12PLw/s640/happiness-productivity.jpg\" alt=\"Productivity\" />\n<img src=\"https://lh3.googleusercontent.com/-bjcS4-21xIw/UIGcSLK9mCI/AAAAAAAAAHA/EVJ1qonZvks/s640/happiness-sleep-quality.jpg\" alt=\"Sleep Quality\" />\n<p>The <em>most significant one is focus,</em> but with $ p = 0.0927 $ it doesn't quite make the 5% significance threshold.</p>\n<h2 id=\"up-next\">Up Next <a class=\"direct-link\" href=\"#up-next\">#</a></h2>\n<p>This ends my series of posts on data collection and analysis for dealing with panic disorder. In my next few posts, I'll talk about my plans for future experiments.</p>\n",
      "date_published": "2012-10-18T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2012-10-17-fitbit-apis-crossfilter-and-d3/",
      "url": "https://blog.savageevan.com/posts/2012-10-17-fitbit-apis-crossfilter-and-d3/",
      "title": "Fitbit: APIs, crossfilter, and d3.js",
      "content_html": "<p>In this post, I present <a href=\"https://github.com/candu/fitbit-crossfilter\">fitbit-crossfilter</a>, which uses the <a href=\"http://dev.fitbit.com/\">Fitbit API</a>, <a href=\"http://square.github.com/crossfilter/\">crossfilter</a> and <a href=\"http://d3js.org/\">d3.js</a> to provide an interactive visualization for exploratory analysis.</p>\n<!-- more -->\n<h2 id=\"the-inspiration\">The Inspiration <a class=\"direct-link\" href=\"#the-inspiration\">#</a></h2>\n<p>It was early April 2012. By this point, I'd been through a stint of pen-and-paper self-tracking for <a href=\"/posts/2012-10-03-panic/\">panic recovery</a>. I'd <a href=\"/posts/2012-10-16-fitbit-my-brief-experience/\">just received my Fitbit in the mail</a>.</p>\n<p>Earlier that year, I applied to the <a href=\"http://www.eecs.berkeley.edu/Gradadm/\">EECS PhD program at UC Berkeley</a> with <a href=\"https://docs.google.com/document/d/10PupOF0RLa54o6y9_xBGnj7VbjtQNPab0-HdoVfT6gA/edit\">this statement of purpose</a>. I was fascinated by this idea that <em>pervasive gameplay really could make us all better</em>, that somewhere beyond the rat wheel of gamification was hidden a Shangri-La of game-driven awesome.</p>\n<p>That unfortunately didn't pan out, and I was left with the age-old question:</p>\n<blockquote>\nWhat do I do with this idea?\n</blockquote>\n<p>It was around this time that, in a moment of exquisite digital serendipity, <a href=\"http://www.meetup.com/\">Meetup</a> suggested I check out the <a href=\"http://www.meetup.com/quantifiedself/\">Bay Area Quantified Self Meetup Group</a>.</p>\n<p>Quantified Self? <a href=\"/posts/2012-10-02-welcome-to-quantified-savagery/\">What's that?</a>. As I explored the group page, I felt a rush of clarity: <em>this was exactly what I'd been doing!</em> There's a whole community of people turning their lives into games in the name of self-betterment!</p>\n<p>I bit the bullet and forked over hard cash to sign up for <a href=\"http://www.meetup.com/quantifiedself/events/58370532/\">QS Show&amp;Tell #25</a> at the <a href=\"http://goo.gl/maps/fn8H4\">California College of the Arts</a>. It was everything I'd hoped for. One presenter dissected 30 years of medical data and correlated it with his marital status. Another showed off a cyclist threat detection system cobbled together by mounting a webcam and sonar unit to his handlebars. There was a <em>rich vein of inquiry into awesome here.</em> I was hooked.</p>\n<p><a href=\"http://www.beaugunderson.com/\">Beau Gunderson</a> of <a href=\"https://singly.com/\">Singly</a> presented <a href=\"https://github.com/beaugunderson/zeo-crossfilter\">zeo-crossfilter</a>. That was the turning point. I saw what he had done and said</p>\n<blockquote>\nHey, I can build that!\n</blockquote>\n<p>And so <a href=\"https://github.com/candu/fitbit-crossfilter\">fitbit-crossfilter</a> was born.</p>\n<h2 id=\"the-tools\">The Tools <a class=\"direct-link\" href=\"#the-tools\">#</a></h2>\n<p>As mentioned, <a href=\"https://github.com/candu/fitbit-crossfilter\">fitbit-crossfilter</a> is a mashup between the <a href=\"http://dev.fitbit.com/\">Fitbit API</a>, <a href=\"http://square.github.com/crossfilter/\">crossfilter</a>, and <a href=\"http://d3js.org/\">d3.js</a>. I'll go over each part with examples.</p>\n<h3 id=\"fitbit-api\">Fitbit API <a class=\"direct-link\" href=\"#fitbit-api\">#</a></h3>\n<p>The Fitbit API uses <a href=\"http://oauth.net/\">OAuth</a> for authentication. If you've never confronted OAuth before, it can be confusing. To compound the confusion, <em>every API provider seems to do it slightly differently.</em> The <a href=\"https://wiki.fitbit.com/display/API/OAuth+Authentication+in+the+Fitbit+API\">official Fitbit docs</a> are opaque, the <a href=\"http://tools.ietf.org/html/rfc5849\">OAuth specs</a> are even more opaque, and the <a href=\"http://apis.io/Fitbit\">unofficial apis.io listing</a> is just wrong:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> -X GET -u <span class=\"token string\">'&lt;username>:&lt;password>'</span> http://api.fitbit.com/1/user/-/profile.json <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null <span class=\"token operator\">|</span> jsonpp<br><span class=\"token punctuation\">{</span><br>  <span class=\"token string\">\"errors\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token punctuation\">{</span><br>      <span class=\"token string\">\"errorType\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"oauth\"</span>,<br>      <span class=\"token string\">\"fieldName\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"n/a\"</span>,<br>      <span class=\"token string\">\"message\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"No Authorization header provided in the request. Each call to Fitbit API should be OAuth signed\"</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">]</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>I turned to <a href=\"https://github.com/simplegeo/python-oauth2\">oauth2</a>, a Python library that makes it easier to carry out this handshake. First, we get a <em>temporary access token:</em></p>\n<pre class=\"language-py\"><code class=\"language-py\"><span class=\"token comment\"># Fill in your app parameters here.</span><br>FITBIT_APP_KEY <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;app key>'</span><br>FITBIT_APP_SECRET <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;app secret>'</span><br><br><span class=\"token keyword\">import</span> oauth2<br>consumer <span class=\"token operator\">=</span> oauth2<span class=\"token punctuation\">.</span>Consumer<span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span>FITBIT_APP_KEY<span class=\"token punctuation\">,</span> secret<span class=\"token operator\">=</span>FITBIT_APP_SECRET<span class=\"token punctuation\">)</span><br>client <span class=\"token operator\">=</span> oauth2<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">(</span>consumer<span class=\"token punctuation\">)</span><br>resp<span class=\"token punctuation\">,</span> content <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'http://api.fitbit.com/oauth/request_token, '</span>GET'<span class=\"token punctuation\">)</span><br>token <span class=\"token operator\">=</span> oauth2<span class=\"token punctuation\">.</span>Token<span class=\"token punctuation\">.</span>from_string<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><br><span class=\"token comment\"># NOTE: the auth URL uses www.fitbit.com as the domain, NOT api.fitbit.com</span><br>auth_url <span class=\"token operator\">=</span> <span class=\"token string\">'http://www.fitbit.com/oauth/authorize?oauth_token={0}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><br><span class=\"token keyword\">print</span> auth_url</code></pre>\n<p>Now we need an <a href=\"http://wiki.oauth.net/w/page/12238555/Signed%20Callback%20URLs\">OAuth verifier</a>. This will be used to retrieve the real access credentials. Visit <code>auth_url</code> in your browser, log into Fitbit, and click Allow. You'll be redirected to the OAuth callback specified in your app. Use the value of the <code>oauth_verifier</code> GET param on your <code>token</code> from before to keep going:</p>\n<pre class=\"language-py\"><code class=\"language-py\">token<span class=\"token punctuation\">.</span>set_verifier<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;oauth_verifier>'</span><span class=\"token punctuation\">)</span><br>client <span class=\"token operator\">=</span> oauth2<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">(</span>consumer<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><br>resp<span class=\"token punctuation\">,</span> content <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'http://api.fitbit.com/oauth/access_token'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">)</span><br>access_token <span class=\"token operator\">=</span> oauth2<span class=\"token punctuation\">.</span>Token<span class=\"token punctuation\">.</span>from_string<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></code></pre>\n<p>With this, we can now <em>retrieve useful information:</em></p>\n<pre class=\"language-py\"><code class=\"language-py\">request_url <span class=\"token operator\">=</span> <span class=\"token string\">'http://api.fitbit.com/1/user/-/profile.json'</span><br>oauth_request <span class=\"token operator\">=</span> oauth2<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>from_consumer_and_token<span class=\"token punctuation\">(</span>consumer<span class=\"token punctuation\">,</span> token<span class=\"token operator\">=</span>access_token<span class=\"token punctuation\">,</span> http_url<span class=\"token operator\">=</span>request_url<span class=\"token punctuation\">)</span><br><span class=\"token comment\"># Despite what the docs say, you need to generate a plaintext signature.</span><br>oauth_request<span class=\"token punctuation\">.</span>sign_request<span class=\"token punctuation\">(</span>oauth2<span class=\"token punctuation\">.</span>SignatureMethod_PLAINTEXT<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> consumer<span class=\"token punctuation\">,</span> access_token<span class=\"token punctuation\">)</span><br>headers <span class=\"token operator\">=</span> oauth_request<span class=\"token punctuation\">.</span>to_header<span class=\"token punctuation\">(</span>realm<span class=\"token operator\">=</span><span class=\"token string\">'api.fitbit.com'</span><span class=\"token punctuation\">)</span><br><br><span class=\"token keyword\">import</span> httplib<br>connection <span class=\"token operator\">=</span> httplib<span class=\"token punctuation\">.</span>HTTPSConnection<span class=\"token punctuation\">(</span><span class=\"token string\">'api.fitbit.com'</span><span class=\"token punctuation\">)</span><br>connection<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> request_url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span><br>resp <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span>getresponse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br><br><span class=\"token keyword\">import</span> json<br>data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n<p>I encountered a few difficulties in figuring this out:</p>\n<ul>\n<li>For the authorize step, you need to use <code>www.fitbit.com</code> as the URL domain. <code>api.fitbit.com</code> will NOT work.</li>\n<li>You need to <em>sign all requests with the access token.</em></li>\n<li>No, <code>oauth2.SignatureMethod_HMAC_SHA1</code> will <strong>NOT</strong> work. Yes, they explicitly claim to use HMAC-SHA1 in the documentation. Don't believe everything you read. Use <a href=\"https://oauth.net/core/1.0/#anchor35\">plaintext signatures</a> instead.</li>\n<li>Fitbit expects both the URI and Authorization header to be set, but <code>oauth2</code> will only set <strong>ONE</strong> of them properly. See <a href=\"https://github.com/candu/fitbit-crossfilter/commit/1d094cecaa6c78bc8d5c295a797d96b7e1687493\">this commit message</a> for more details.</li>\n</ul>\n<p>You can see the full implementation <a href=\"https://github.com/candu/fitbit-crossfilter/blob/master/fitbit_crossfilter/foo/lib/fitbit.py\">here</a>, along with <a href=\"https://github.com/candu/fitbit-crossfilter/blob/master/fitbit_crossfilter/foo/views/__init__.py\">an example of its use</a>.</p>\n<h3 id=\"crossfilter\">crossfilter <a class=\"direct-link\" href=\"#crossfilter\">#</a></h3>\n<p>Square's <a href=\"http://square.github.com/crossfilter/\">crossfilter</a> is a JavaScript library for efficiently performing <em>multidimensional range queries.</em> I've included an interactive example <a href=\"#quick-demo\">below</a>.</p>\n<p>crossfilter uses two types of objects to <em>represent a multidimensional dataset:</em></p>\n<ul>\n<li><strong>dimension:</strong> a map function that returns totally-ordered <em>dimension values</em> (e.g. numbers, dates);</li>\n<li><strong>group:</strong> a reduce function on those dimension values.</li>\n</ul>\n<p>The <em>totally-ordered</em> part is essential, since that makes it possible to perform range queries. A quick code snippet might help explain this further:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> <span class=\"token constant\">L</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">N</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">M</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token constant\">N</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">N</span> <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token constant\">N</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token function\">crossfilter</span><span class=\"token punctuation\">(</span><span class=\"token constant\">L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">var</span> d0 <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">dimension</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">var</span> g0 <span class=\"token operator\">=</span> d0<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">var</span> d1 <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">dimension</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">var</span> g1 <span class=\"token operator\">=</span> d1<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>d0<span class=\"token punctuation\">.</span><span class=\"token function\">filterRange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>At this point, we can <em>inspect the dimensions and groups</em> to understand the effect of <code>filterRange()</code>:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">></span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>d1<span class=\"token punctuation\">.</span><span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br><span class=\"token string\">'[[4,1],[3,1],[7,0],[6,0],[5,0]]'</span><br><span class=\"token operator\">></span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>g1<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br><span class=\"token string\">'[{\"key\":0,\"value\":3},{\"key\":1,\"value\":2}]'</span></code></pre>\n<p>Note that the range <code>[3, 8]</code> is actually interpreted as the semi-open interval $ [3, 8) $. Note also that the elements of <code>g1.all()</code> are of the form <code>{key: k, value: v}</code> where <code>v</code> is the number of elements <code>x</code> with <code>3 &lt;= x[0] &amp;&amp; x[0] &lt; 8 &amp;&amp; x[1] == k</code>.</p>\n<h3 id=\"d3.js\">d3.js <a class=\"direct-link\" href=\"#d3.js\">#</a></h3>\n<blockquote cite=\"https://d3js.org/\">\n  <p>\nD3.js is a JavaScript library for manipulating documents based on data.\n</p>\n  <footer>&ndash; Mike Bostock, <cite><a href=\"https://d3js.org/\">D3.js</a></footer>\n</blockquote>\n<p>Using HTML, SVG, CSS, and JavaScript, you can build some pretty stunning visualizations. Again, check out the interactive example <a href=\"#quick-demo\">below</a>. For more examples, the <a href=\"https://github.com/mbostock/d3/wiki/Gallery\">D3 Gallery</a> is many kinds of awesome.</p>\n<h3 id=\"a-quick-demo\">A Quick Demo <a class=\"direct-link\" href=\"#a-quick-demo\">#</a></h3>\n<iframe\n  height=\"480\"\n  id=\"quick-demo\"\n  src=\"http://candu.github.io/quantified-savagery-files/Panic/fitbit-crossfilter/index.html\"\n  width=\"100%\">\n</iframe>\n<p>If you're viewing this through an RSS reader, the above demo of <code>crossfilter</code> won't show correctly. You can view it <a href=\"/posts/2012-10-17-fitbit-apis-crossfilter-and-d3#quick-demo\">on my blog</a>.</p>\n<h2 id=\"insights-from-my-data\">Insights From My Data <a class=\"direct-link\" href=\"#insights-from-my-data\">#</a></h2>\n<ul>\n<li>During this tracking period, I was <em>most active during the 8-10 am and 6-9 pm timeslots.</em> (The former was my morning walk to the employee shuttle; the latter was the evening walk back plus <a href=\"http://soccerfours.com/\">Soccer Fours</a>.</li>\n<li>The more sleep I get, the more bipolar my exercise habits become.</li>\n<li>Unlike Beau Gunderson, I'm not seeing a correlation between number of times awoken and duration of sleep.</li>\n<li>There is, however, a clear positive correlation between steps per minute and calories burned per minute, as expected.</li>\n</ul>\n<h2 id=\"how-to-use-fitbit-crossfilter\">How To Use fitbit-crossfilter <a class=\"direct-link\" href=\"#how-to-use-fitbit-crossfilter\">#</a></h2>\n<p>First, you will need a Fitbit app <em>with Partner API access</em>; see <a href=\"https://wiki.fitbit.com/display/API/Fitbit+Partner+API\">this page</a> for more details on setting that up. Use the following application settings:</p>\n<ul>\n<li><strong>Application Type:</strong> Website</li>\n<li><strong>Callback URL:</strong> <code>http://localhost:9001/oauth</code></li>\n<li><strong>Default Access Type:</strong> Read-Only</li>\n</ul>\n<p>Now copy <code>settings.py.nopasswd</code> to create your settings file:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">cp</span> settings.py.nopasswd settings.py</code></pre>\n<p>Edit the bottom of <code>settings.py</code>:</p>\n<pre class=\"language-py\"><code class=\"language-py\">SYNC_ENABLED <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><br>DEFAULT_USER <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span><br>FITBIT_CONSUMER_KEY <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>your app key<span class=\"token operator\">></span><br>FITBIT_CONSUMER_SECRET <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>your app secret<span class=\"token operator\">></span></code></pre>\n<p>Start the server, login, and sync your data:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ python manage.py runserver <span class=\"token number\">9001</span><br><span class=\"token comment\"># visit localhost:9001/login in the browser to do the OAuth handshake</span><br><span class=\"token comment\"># visit localhost:9001/sync-user-data in the browser to sync data</span></code></pre>\n<p>When the syncing completes, you'll be redirected to your dashboard.</p>\n",
      "date_published": "2012-10-17T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2012-10-16-fitbit-my-brief-experience/",
      "url": "https://blog.savageevan.com/posts/2012-10-16-fitbit-my-brief-experience/",
      "title": "Fitbit: My Brief Experience",
      "content_html": "<p>In this post, I discuss my experiences using the popular <a href=\"http://www.fitbit.com/\">Fitbit</a> fitness tracker.</p>\n<!-- more -->\n<h2 id=\"my-time-with-fitbit\">My Time With Fitbit <a class=\"direct-link\" href=\"#my-time-with-fitbit\">#</a></h2>\n<p>I started using the <a href=\"http://www.fitbit.com/product\">Fitbit Ultra</a> on April 11, 2012:</p>\n<img src=\"https://lh6.googleusercontent.com/-BbdI4RDLEPg/UH4U2PwH7AI/AAAAAAAAAFI/cdY5hnwl3so/s400/steps-april.jpg\" />\n<p>Over the following three months, I walked, ran, and otherwise jostled my Fitbit about a good deal:</p>\n<img src=\"https://lh6.googleusercontent.com/-Rk-sPLHtYVg/UH4U3FhjRJI/AAAAAAAAAFY/J7Ygbqqfi_k/s288/lifetime-steps.jpg\" />\n<img src=\"https://lh4.googleusercontent.com/-663jKpbc6yw/UH4U3vzf8EI/AAAAAAAAAFg/-EnTuoTD9LQ/s288/lifetime-floors.jpg\" />\n<img src=\"https://lh4.googleusercontent.com/-yzUccJOlbCQ/UH4U36eSCJI/AAAAAAAAAFk/Qmx-r-swHwc/s800/lifetime-distance.jpg\" />\n<p>Somewhere around July 12, tragedy struck: <em>I lost my Fitbit.</em></p>\n<img src=\"https://lh3.googleusercontent.com/--zc0squq1yo/UH4U1nCGuQI/AAAAAAAAAE8/aDOP5c1f0pw/s400/steps-july.jpg\" />\n<h3 id=\"the-good\">The Good <a class=\"direct-link\" href=\"#the-good\">#</a></h3>\n<p>My initial impression was ecstatic. Fitbit didn't look like your average pedometer:</p>\n<img src=\"https://lh5.googleusercontent.com/-eLa1uqTeKRg/UH4U5G5GSNI/AAAAAAAAAF0/RiNA89GciGQ/s288/fitbit.jpg\" />\n<img src=\"https://lh5.googleusercontent.com/-eRCIrQhA5Kk/UH4U1SaRsKI/AAAAAAAAAE0/4y8n3UjOl-c/s288/janky-pedometer.jpg\" />\n<p>It was <em>small, sleek, easily concealed.</em> I felt like I'd stumbled upon the access key to some secret cult of digerati hipster fitness fanatics. I could flash my Fitbit, give a knowing nod - &quot;yes, I too take an informed interest in my personal health&quot; - and be accepted into the ranks.</p>\n<p><em>Wireless syncing</em> and <em>long battery life</em> sweetened the deal. This was a vast step up from my pen-and-paper recovery journal. I was doing <em>serious</em> self-tracking with <em>serious</em> devices now.</p>\n<p>As I started to use it, I noticed <em>small changes in my behavior.</em> I'd walk an extra few blocks to the employee shuttle. I'd buy fewer groceries at the market, forcing myself to walk there more frequently. I'd take late-evening walks if I felt my daily step count was too low. Each change was minor, but they often added up to <em>thousands of additional steps per day.</em></p>\n<p>I'd also revel in more extreme bursts of exercise. A hike in the Marin headlands netted me the 30 000 step badge. I pocketed the 200 floors badge after a <a href=\"http://goo.gl/maps/jB7fa\">ride up to Tilden</a>.</p>\n<p>For the first time, I could also see how much I was sleeping:</p>\n<img src=\"https://lh6.googleusercontent.com/-QGWtSgEdMz8/UH4U5qNFyXI/AAAAAAAAAF8/5dGzfE_2YBk/s400/sleep-graph.jpg\" />\n<p><em>Great gouts of data</em> poured into my life, chartporn galore for an unrepentant math addict. Soon it even became a quasi-social activity as my leaderboard filled up with my Fitbit-using friends.</p>\n<p>All in all, the Fitbit seemed like a fantastic way to turbocharge my exercise patterns.</p>\n<h3 id=\"the-bad\">The Bad <a class=\"direct-link\" href=\"#the-bad\">#</a></h3>\n<p>My wife, <a href=\"http://www.eecs.berkeley.edu/~valkyrie/\">Valkyrie Savage</a>, also had a Fitbit. In the instructions, women were suggested to wear the Fitbit on their bra strap for the ultimate in clandestine self-tracking. This soon unearthed a glaring problem:</p>\n<blockquote>\nSweat is corrosive to metal.\n</blockquote>\n<p>In particular, the internal leads started to corrode, and before long she was unable to connect it to the base station. After a quick phone call, Fitbit agreed to replace the device at no cost; we weren't the first users to have this problem, and they were in the process of changing the documentation.</p>\n<p>Still, the experience soured the deal a bit. Had they never field-tested it with women?</p>\n<p>While we waited for the replacement, I noticed something else: my wristband had stretched out and was now loose on my wrist. This was a minor detail, but it added to a growing concern that the Fitbit Ultra <em>might not be durable enough to withstand our protracted Savage-ing.</em></p>\n<p>Her second Fitbit finally arrived, and we were back into the self-tracking groove. We took our Fitbits everywhere: walking, running, playing soccer, cycling, and...wait, no, <em>Valkyrie couldn't take it swimming.</em> Actually, it didn't measure our cycling accurately, it was useless for my static bodyweight exercises, and it couldn't track our occasional indoor climbing stints effectively either. <em>It was discouraging us from doing the activities we loved most!</em></p>\n<h3 id=\"the-ugly\">The Ugly <a class=\"direct-link\" href=\"#the-ugly\">#</a></h3>\n<p>As we kept up our co-tracking, Valkyrie and I noticed a curious effect. There were several days where we spent the whole day together doing the exact same things, and yet <em>I would always be 1000-2000 steps ahead.</em> Our stride lengths and heights are nearly equal. What was going on?</p>\n<p>We tried wearing the Fitbits in the same locations on our bodies. No effect. We tried counting steps while we were out together. The counts matched up. The solution came by accident. With the wristband getting more stretched out by the day, I finally started taking my Fitbit off when going to bed.</p>\n<p>Aha! There was the difference: <em>it was counting every tiny movement I made while asleep.</em> This effect was never mentioned in the manual. It hadn't occurred to us that <em>our data might not be comparable!</em></p>\n<p>Meanwhile, my interest in Quantified Self was gradually intensifying. I decided to check out the <a href=\"http://dev.fitbit.com/\">Fitbit API</a>, hoping to create something like <a href=\"https://github.com/beaugunderson/zeo-crossfilter\">zeo-crossfilter</a> for Fitbit. This immediately hit a snag: <em>to get the minute-by-minute data, you need Partner API access.</em></p>\n<blockquote cite=\"https://wiki.fitbit.com/display/API/Fitbit+Partner+API\">\n  <p>\nPartner API allows to fetch the intraday data points with 1 minute detail level for several user resources\n</p>\n  <footer>&ndash; Fitbit, <cite><a href=\"https://wiki.fitbit.com/display/API/Fitbit+Partner+API\">Fitbit Partner API</a></footer>\n</blockquote>\n<p>Fortunately, <a href=\"http://pavelrisenberg.com/\">Pavel Risenberg</a> happily extended this access upon request, and I soon had <a href=\"https://github.com/candu/fitbit-crossfilter\">fitbit-crossfilter</a> up and working.</p>\n<img src=\"https://lh6.googleusercontent.com/-Ys7TdGOf2kI/UH4U6Tb2pRI/AAAAAAAAAGE/yVHssco65NU/s640/fitbit-crossfilter.jpg\" />\n<p>Again, though, there was that sour taste. <em>Why not provide this access by default?</em> A bit of digging around the site revealed a likely culprit: <a href=\"http://www.fitbit.com/premium/about\">Fitbit Premium</a>. Users can pay to turn Fitbit into a personal trainer, gaining access to more powerful data reports and goal-setting tools.</p>\n<h3 id=\"the-verdict\">The Verdict <a class=\"direct-link\" href=\"#the-verdict\">#</a></h3>\n<p><em>Was the Fitbit useful for me?</em> As a way to encourage walking: definitely. As a lightweight persistent self-tracking device: mostly. As part of an exercise program that meant something to me: not really.</p>\n<p>I was left with a strong suspicion that <em>I wasn't in their target demographic.</em> I was already fairly active. 10 000 steps was more of a baseline than a goal. I didn't really need to walk more, and <em>I couldn't trust it</em> to accurately track the types of exercise I enjoy most.</p>\n<p>This is an important lesson for aspiring Quantified Self entrepreneurs:</p>\n<blockquote>\nYour product is personal by nature.\n</blockquote>\n<p>Your product will encounter <a href=\"http://quantifiedself.com/2012/08/nir-eyal-knowing-your-behaviour-type-from-gary-wolf-on-vimeo/\">different behaviors</a>, needs, and goals. <em>You are not everyone.</em> You will never understand most of these behaviors, needs, and goals firsthand. No amount of user studies, A/B testing, or market research will save you from this fundamental truth.</p>\n<p>The only way out is to <em>give users control.</em> Let them tinker, mashup, share, and explore. <em>Let them decide what your product means to them.</em></p>\n<h2 id=\"questions-from-my-time-as-a-fitbit-user\">Questions From My Time As A Fitbit User <a class=\"direct-link\" href=\"#questions-from-my-time-as-a-fitbit-user\">#</a></h2>\n<h3 id=\"who-owns-self-tracking-data%3F\">Who Owns Self-Tracking Data? <a class=\"direct-link\" href=\"#who-owns-self-tracking-data%3F\">#</a></h3>\n<p>Looking back, one of my largest complaints was about <em>closed-ness.</em> Part of the Grand Promise of Quantified Self is <em>control over your data and how you use it.</em> We're still a long way from that Grand Promise. We're in the Internet Middle Ages, an era of data fiefdoms.</p>\n<p>The analogy is apt. Much as the old fiefdoms laid claim to your land and labor, these fiefdoms <em>use your data and your data entry labor to enrich themselves.</em> Much as the old fiefdoms provided vital services in exchange for this taxation, you receive the <em>benefit of services like search and social networking.</em> Much as the old fiefdoms fought each other relentlessly for economic gain, these fiefdoms wage war over users and intellectual property.</p>\n<p>This is not necessarily bad. As a result of these data fiefdoms, we have many services that might not otherwise exist. By selling your self-tracking data back to you, Fitbit is <em>able to fund the provision of tools for managing and improving your fitness.</em> Those tools are generally of reasonable quality, and are likely to improve over time.</p>\n<p>However, if you want to make your own tools, <em>you're largely out of luck.</em> You can pay for different tools via Fitbit Premium, but there's no guarantee that those tools will be better for <em>you.</em> Your only other recourse is to navigate the API documentation and contact the right people for better data access. Even with that access, you still only have minute-by-minute data. You have no idea how Fitbit maps between raw accelerometer readings and steps, and definitely no opportunity to improve that mapping. To take my example, <em>I can't tweak the step detection algorithms to measure cycling accurately.</em></p>\n<p>Even though the average person won't care to make these improvements, <em>a few people will.</em> This recalls the <a href=\"https://www.facebook.com/photo.php?fbid=3563106890027\">reddit maxim</a>:</p>\n<img src=\"https://lh6.googleusercontent.com/-Y4JWrp5wBmU/UH4U4dNSO-I/AAAAAAAAAFs/qCIibiyvafk/s400/give-a-damn.jpg\" />\n<p><em>There's a tension here.</em> This is how better products are built, but it's not in Fitbit's interest to let just anyone do that in a completely unconstrained fashion. If they do, they go out of business.</p>\n<h3 id=\"what-is-my-ideal-fitness-tracking-device%3F\">What Is My Ideal Fitness Tracking Device? <a class=\"direct-link\" href=\"#what-is-my-ideal-fitness-tracking-device%3F\">#</a></h3>\n<p>It would be:</p>\n<ol>\n<li><strong>activity-agnostic,</strong> with the ability to track diverse forms of physical activity.</li>\n<li><strong>water-resistant.</strong> (I won't ask for waterproof, since I'm not much of a swimmer myself, but it should be able to handle light rain and a little sweat.)</li>\n<li><strong>data-transparent,</strong> allowing me to get at the raw data without going through a vendor API. (I note that <a href=\"https://github.com/qdot/libfitbit\">libfitbit</a> exists as an attempt to reverse-engineer Fitbit, but I haven't played around with it.)</li>\n</ol>\n<p>I haven't looked into <a href=\"http://www.bodymedia.com/\">BodyMedia</a> or <a href=\"https://fluxtream.com\">Fluxtream</a>, but they both look promising.</p>\n<h3 id=\"is-persistent-tracking-useful%3F\">Is Persistent Tracking Useful? <a class=\"direct-link\" href=\"#is-persistent-tracking-useful%3F\">#</a></h3>\n<blockquote>\nYes, but only if you can analyze the data as quickly as you generate it.\n</blockquote>\n",
      "date_published": "2012-10-16T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2012-10-14-self-tracking-for-panic-another-dataset/",
      "url": "https://blog.savageevan.com/posts/2012-10-14-self-tracking-for-panic-another-dataset/",
      "title": "Self-Tracking for Panic: Another Dataset",
      "content_html": "<p>In this post, I perform the same analyses presented in <a href=\"/posts/2012-10-09-self-tracking-for-panic-an-even-deeper-look/\">my last post</a> using data from my second panic tracking period. I then test whether my average alcohol and sugar consumption changed measurably between the two tracking periods.</p>\n<p>During the second tracking period, I gathered data using <a href=\"https://github.com/candu/qs-counters\">qs-counters</a>, a simple utility I built for reducing friction in the recording process.</p>\n<!-- more -->\n<h2 id=\"the-usual-suspects\">The Usual Suspects <a class=\"direct-link\" href=\"#the-usual-suspects\">#</a></h2>\n<h3 id=\"linear-regression\">Linear Regression <a class=\"direct-link\" href=\"#linear-regression\">#</a></h3>\n<p>During the second tracking period, <em>alcohol consumption remained relatively constant</em>:</p>\n<img src=\"https://lh4.googleusercontent.com/-Kha5L6BVqUo/UHxN-lFh_LI/AAAAAAAAADY/eVVLWJbYMaU/s640/qs-counters-alcohol.jpg\" alt=\"Alcohol Consumption\" />\n<p>Sugar consumption is a different story, with a <em>pronounced negative trend</em>:</p>\n<img src=\"https://lh6.googleusercontent.com/-MN60bkN-thg/UHxN_qhP-AI/AAAAAAAAADo/HXsmUbqEWnw/s640/qs-counters-sweets.jpg\" alt=\"Sugar Consumption\" />\n<p>The evidence to suggest that <em>my alcohol and sugar consumption are linked</em> is also much stronger now:</p>\n<img src=\"https://lh5.googleusercontent.com/-9J_fMxZS2Co/UHxOAaijDbI/AAAAAAAAAD4/UDt5xjzZ-Lw/s640/qs-counters-alcohol-vs-sugar.jpg\" alt=\"Alcohol vs. Sugar Consumption\" />\n<p>On the other hand, the previous-day alcohol effect seems to be non-existent:</p>\n<img src=\"https://lh6.googleusercontent.com/-8CPpr0mjczs/UHxOABjFKSI/AAAAAAAAADw/4sVdt2axAEs/s640/qs-counters-alcohol-today-vs-yesterday.jpg\" alt=\"Alcohol: Today vs. Yesterday\" />\n<h3 id=\"fast-fourier-transform\">Fast Fourier Transform <a class=\"direct-link\" href=\"#fast-fourier-transform\">#</a></h3>\n<p>With more data points, the FFT frequency amplitude plot is more muddled:</p>\n<img src=\"https://lh4.googleusercontent.com/-1AeQyUEEW8o/UHxN90Wk75I/AAAAAAAAADM/eJs5x6UaQNI/s640/qs-counters-fft-frequencies.jpg\" alt=\"FFT Frequencies\" />\n<p>The 2-day and 7-day effects previously &quot;discovered&quot; are nowhere to be found.</p>\n<h3 id=\"maximum-entropy-modelling\">Maximum Entropy Modelling <a class=\"direct-link\" href=\"#maximum-entropy-modelling\">#</a></h3>\n<p>I didn't record panic attacks during this tracking period. My previous efforts reduced the severity and frequency of these attacks drastically, enough so that the data here would have been extremely sparse.</p>\n<p>In the absence of that data, I asked a different question:</p>\n<blockquote>\nWhat features best predict my exercise patterns?\n</blockquote>\n<p>Here are the top features from <code>MaxentClassifier</code>:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">   <span class=\"token number\">3.369</span> <span class=\"token assign-left variable\">caffeine</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'no-exercise'</span><br>  -0.739 <span class=\"token assign-left variable\">sweets</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'exercise'</span><br>   <span class=\"token number\">0.399</span> <span class=\"token assign-left variable\">sweets</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'no-exercise'</span><br>  -0.201 <span class=\"token assign-left variable\">alcohol</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'exercise'</span><br>   <span class=\"token number\">0.166</span> <span class=\"token assign-left variable\">alcohol</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'no-exercise'</span><br>   <span class=\"token number\">0.161</span> <span class=\"token assign-left variable\">relaxation</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'exercise'</span><br>  -0.092 <span class=\"token assign-left variable\">relaxation</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'no-exercise'</span></code></pre>\n<p>The caffeine finding is misleading. On one of the two days where I entered non-zero caffeine consumption, that was due to a <em>mistake in data entry.</em> (Side note to self: all tools should include an undo feature!) Aside from that, <em>sugar consumption appears to have the strongest negative effect on exercise.</em></p>\n<h2 id=\"student's-t-test\">Student's t-test <a class=\"direct-link\" href=\"#student's-t-test\">#</a></h2>\n<h3 id=\"what%3F\">What? <a class=\"direct-link\" href=\"#what%3F\">#</a></h3>\n<p>Student's t-test answers this question:</p>\n<blockquote>\nAre these samples significantly different?\n</blockquote>\n<p>More formally, the t-test answers a statistical question about normal distributions: given $ X \\sim \\mathcal{N}(\\mu_X, \\sigma_X^2) $ and $ Y \\sim \\mathcal{N}(\\mu_Y, \\sigma_Y^2) $, does $ \\mu_X = \\mu_Y $?</p>\n<p>If we let $ Y $ be a known normal distribution centered at rather than taking it from an empirical sample, we also obtain a one-sample t-test for the null hypothesis $ \\mu_X = \\mu_Y $.</p>\n<h3 id=\"why%3F\">Why? <a class=\"direct-link\" href=\"#why%3F\">#</a></h3>\n<p>In a self-tracking context, you might ask the following questions:</p>\n<ul>\n<li>Did I improve significantly across tracking periods?</li>\n<li>Is my behavior consistent across tracking periods?</li>\n</ul>\n<p>Student's t-test can help address both questions.</p>\n<h3 id=\"the-data\">The Data <a class=\"direct-link\" href=\"#the-data\">#</a></h3>\n<p>Before using Student's t-test on my alcohol and sugar consumption data from the two tracking periods, I <em>check whether these samples have a roughly normal distribution.</em> The code for normality checking is <a href=\"https://github.com/candu/quantified-savagery-files/blob/master/Panic/qs-counters/counters_normality.py\">here</a>.</p>\n<p>It helps to <em>visualize the histogram data first</em>:</p>\n<img src=\"https://lh5.googleusercontent.com/-1sX3PJfuiAg/UHxdvv_-mkI/AAAAAAAAAEc/Rm7uknNlG7g/s640/recovery-journal-alcohol-histogram.jpg\" alt=\"Alcohol Histogram (recovery-journal)\" />\n<img src=\"https://lh5.googleusercontent.com/-9ScCbHMq4ls/UHxdu40NnPI/AAAAAAAAAEM/3SRyqPF_Bh8/s640/qs-counters-alcohol-histogram.jpg\" alt=\"Alcohol Histogram (qs-counters)\" />\n<img src=\"https://lh3.googleusercontent.com/-10RnNsKZAS0/UHxdvzkHVhI/AAAAAAAAAEg/QCgl_8vd4Go/s640/recovery-journal-sweets-histogram.jpg\" alt=\"Sugar Histogram (recovery-journal)\" />\n<img src=\"https://lh6.googleusercontent.com/-c407cdWckp0/UHxdvMT5GJI/AAAAAAAAAEU/_xR3qO3ZMX0/s640/qs-counters-sweets-histogram.jpg\" alt=\"Sugar Histogram (qs-counters)\" />\n<p>These don't look particularly close to normal distributions, but it's hard to<br>\ntell with discrete-valued data. For more evidence, I use the<br>\n<a href=\"http://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.shapiro.html\">Shapiro-Wilk statistical normality test</a>:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">alcohol, recovery-journal:  <span class=\"token punctuation\">(</span><span class=\"token number\">0.944088339805603</span>, <span class=\"token number\">0.10709714889526367</span><span class=\"token punctuation\">)</span><br>alcohol, qs-counters:  <span class=\"token punctuation\">(</span><span class=\"token number\">0.8849299550056458</span>, <span class=\"token number\">4</span>.6033787270971516e-07<span class=\"token punctuation\">)</span><br>sugar, recovery-journal:  <span class=\"token punctuation\">(</span><span class=\"token number\">0.722859263420105</span>, <span class=\"token number\">2</span>.5730114430189133e-06<span class=\"token punctuation\">)</span><br>sugar, qs-counters:  <span class=\"token punctuation\">(</span><span class=\"token number\">0.8092769384384155</span>, <span class=\"token number\">8</span>.38931979441071e-10<span class=\"token punctuation\">)</span></code></pre>\n<p>The null hypothesis for Shapiro-Wilk is that the sample is normally distributed, so these low p-values indicate the opposite: <em>my data isn't normally distributed!</em> Bad news for my attempt to use Student's t-test here.</p>\n<p>Nevertheless, I'll barge ahead and run the t-test anyways, just to see what that process looks like with <code>scipy.stats</code>. The code for t-testing is <a href=\"https://github.com/candu/quantified-savagery-files/blob/master/Panic/qs-counters/counters_ttest.py\">here</a>.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">alcohol<br><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><br>avg<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">3.26</span><br>avg<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">2.35</span><br><span class=\"token punctuation\">(</span>t, p<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2.0721</span>, <span class=\"token number\">0.0469</span><span class=\"token punctuation\">)</span><br><br>sweets<br><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><br>avg<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.19</span><br>avg<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.23</span><br><span class=\"token punctuation\">(</span>t, p<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>-0.1969, <span class=\"token number\">0.8453</span><span class=\"token punctuation\">)</span></code></pre>\n<p>If the t-test were useful for this data, it would show that <em>my alcohol consumption was significantly lower during the second tracking period.</em> With such a large drop in average consumption, I'm willing to say that this is a reasonable assertion.</p>\n<h2 id=\"a-question-of-motivation\">A Question Of Motivation <a class=\"direct-link\" href=\"#a-question-of-motivation\">#</a></h2>\n<p>By this point, you might be asking:</p>\n<blockquote>\nWhy did I even bother with all this analysis when I have so few data points?\n</blockquote>\n<p>Good question! The short answer? It's a <em>learning opportunity.</em> The longer answer is backed by a chain of reasoning:</p>\n<ul>\n<li>As data collection gets easier, <em>the value of data analysis goes up;</em></li>\n<li>Statistical analysis is <em>hard to impossible</em> for the average user, so <em>they will use whatever tools they can get</em> from app markets and device vendors;</li>\n<li>Most of those tools are built by people who, by trade, are software developers;</li>\n<li>Most developers, even good ones, are typically not that great in the statistics and data analysis department;</li>\n<li>Therefore, as a developer with plans to build self-tracking tools, <em>I owe it to myself and my future users to know this stuff better.</em></li>\n</ul>\n<p>As it turns out, data analysis is hard, period. Picking the right tools is difficult, and picking the wrong ones (like the t-test above!) <em>can easily produce results that appear to be meaningful but are not.</em> In a self-tracking scenario, this problem is often made worse by <em>smaller datasets</em> and <em>uncontrolled conditions.</em></p>\n<h2 id=\"thought-experiments\">Thought Experiments <a class=\"direct-link\" href=\"#thought-experiments\">#</a></h2>\n<h3 id=\"repeat-yourself%3A-a-reflection-on-self-tracking-and-science\">Repeat Yourself: A Reflection On Self-Tracking And Science <a class=\"direct-link\" href=\"#repeat-yourself%3A-a-reflection-on-self-tracking-and-science\">#</a></h3>\n<p>One criticism often launched at the Quantified Self community is that self-tracking is not <em>scientific</em> enough. For an interesting discussion of the merits and drawbacks of presenting self-experimentation as science, I highly recommend the <a href=\"http://www.escholarship.org/uc/item/2xc2h866#page-36\">Open Peer Commentary section</a> of <a href=\"http://www.escholarship.org/uc/item/2xc2h866\">this paper</a>. Some of the broader themes in this debate are also summarized <a href=\"http://quantifiedself.com/2012/05/qs-101-the-science-of-self-experimentation/\">here</a> on the Quantified Self website.</p>\n<p>To be fair, there are a host of valid concerns here. For starters, <em>it's very difficult to impose a controlled environment when self-tracking.</em> In a Heisenbergian twist, being mindful of your behavior could modify the behavior you're trying to measure; this effect is discussed briefly by <a href=\"http://www.escholarship.org/uc/item/2xc2h866#page-45\">Simon Moore and Joselyn Sellen</a>.</p>\n<p>Additionally, a sample population of one is meaningless. Will your approaches work for others? Did you gather the data in a consistent manner? Are your sensors working properly? The usual antidote is to increase the sample population, but then you have another set of problems. Are all participants using the same sensors in the same way? Are they all running the same analyses?</p>\n<p>From watching several presentations about self-tracking, there is a curious pattern:</p>\n<blockquote>\nLike any other habit, the tracking habit is hard to maintain.\n</blockquote>\n<p>As a corollary, many tracking experiments consist of multiple tracking periods, these punctuated by relapses of the tracking habit.</p>\n<p>Many people interpret these relapses as failures, but they're actually <em>amazing scientific opportunities!</em> These are chances to re-run the same experiment, verifying or confounding results from your earlier tracking periods.</p>\n<h3 id=\"the-predictive-modelling-game\">The Predictive Modelling Game <a class=\"direct-link\" href=\"#the-predictive-modelling-game\">#</a></h3>\n<p>Predictive modelling could be an interesting component of a habit modification system. Suppose I want to exercise more regularly. First, I <em>select several features that seem likely to influence my exercise patterns</em>, such as:</p>\n<ul>\n<li>Am I travelling? Where am I?</li>\n<li>What foods did I eat? When? How much?</li>\n<li>How positive or negative is my mood?</li>\n<li>Did I schedule time today to exercise?</li>\n<li>Did I exercise yesterday? How much?</li>\n</ul>\n<p>Next, I <em>gather some baseline data</em> by tracking these features along with my exercise patterns. I then use that data to <em>train a classifier.</em> Finally, I keep tracking the features, ask the classifier to predict my exercise activity, and play a simple game with myself:</p>\n<blockquote>\nCan I beat the classifier?\n</blockquote>\n<p>That is, <em>can I exercise more often than my existing behavior patterns suggest I should?</em></p>\n",
      "date_published": "2012-10-14T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2012-10-09-self-tracking-for-panic-an-even-deeper-look/",
      "url": "https://blog.savageevan.com/posts/2012-10-09-self-tracking-for-panic-an-even-deeper-look/",
      "title": "Self-Tracking For Panic: A Deeper Look",
      "content_html": "<p>In this post, I apply three statistical and machine learning tools to my panic recovery journal data: linear regression/correlation, the Fast Fourier Transform, and maximum entropy modelling.</p>\n<!-- more -->\n<h2 id=\"first%2C-a-word-about-tools\">First, A Word About Tools <a class=\"direct-link\" href=\"#first%2C-a-word-about-tools\">#</a></h2>\n<blockquote cite=\"https://www.worldcat.org/title/psychology-of-science-a-reconnaissance/oclc/248935\">\n  <p>\nI suppose it is tempting, if the only tool you have is a hammer, to treat\neverything as if it were a nail.\n</p>\n  <footer>&ndash; Abraham Maslow, <cite><a href=\"https://www.worldcat.org/title/psychology-of-science-a-reconnaissance/oclc/248935\">The Psychology of Science: A Reconnaissance</a></footer>\n</blockquote>\n<h2 id=\"now%2C-a-necessary-disclaimer\">Now, A Necessary Disclaimer <a class=\"direct-link\" href=\"#now%2C-a-necessary-disclaimer\">#</a></h2>\n<p>My experiment has fewer than 50 samples, which is <em>nowhere near enough to draw statistically significant conclusions</em>. That's not the point. The primary purpose of this post is to <em>demonstrate analysis techniques by example</em>. These same methods can be wielded on larger datasets, where they are much more useful.</p>\n<h2 id=\"getting-ready\">Getting Ready <a class=\"direct-link\" href=\"#getting-ready\">#</a></h2>\n<p>To follow along with the examples here, you'll need the excellent Python toolkits <a href=\"http://scipy.org/\">scipy</a>, <a href=\"http://matplotlib.org/\">matplotlib</a>, and <a href=\"http://nltk.org/\">nltk</a>:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ pip <span class=\"token function\">install</span> scipy nltk matplotlib</code></pre>\n<h2 id=\"linear-regression\">Linear Regression <a class=\"direct-link\" href=\"#linear-regression\">#</a></h2>\n<h3 id=\"what%3F\">What? <a class=\"direct-link\" href=\"#what%3F\">#</a></h3>\n<p>Linear regression answers this question:</p>\n<blockquote>\nWhat is the line that most closely fits this data?\n</blockquote>\n<p>Given points $ P_i = (x_i, y_i) $, the goal is to find the line $ y = mx + b $ such that some error function is minimized. A common one is the least squares function:</p>\n<p>$$<br>\nf(m, b) = \\sum_{i} \\left(y_i - (mx_i + b)\\right)^2<br>\n$$</p>\n<p>The <a href=\"http://en.wikipedia.org/wiki/Pearson_product-moment_correlation_coefficient\">Pearson correlation coefficient</a> $ R $ and <a href=\"http://www.lstr.net/blog/2008/07/08/p-values-explained-well/\">p-value</a> $ p $ are also useful here, as they measure <em>correlation</em> and <em>statistical significance</em>.</p>\n<h3 id=\"why%3F\">Why? <a class=\"direct-link\" href=\"#why%3F\">#</a></h3>\n<p>In a self-tracking context, you might ask the following questions:</p>\n<ul>\n<li>Have I been exercising more over time?</li>\n<li>Does exercise affect mood? By how much and in what direction?</li>\n</ul>\n<p>Linear regression can help address both questions. However, it can only find <em>linear</em> relationships between datasets. Many dynamic processes are <em>locally linear</em> but not <em>globally linear</em>. For instance, there are practical limits to how much you can exercise in a day, so no linear model with non-zero slope will accurately capture your exercise duration for all time.</p>\n<h3 id=\"the-data\">The Data <a class=\"direct-link\" href=\"#the-data\">#</a></h3>\n<p>You can see the code for this analysis <a href=\"https://github.com/candu/quantified-savagery-files/blob/master/Panic/recovery-journal/food_linregress.py\">here</a>. I look at only the first 31 days, that being the largest consecutive run for which I have data.</p>\n<img src=\"https://lh6.googleusercontent.com/-plD2webhfrY/UHXc4xHxAGI/AAAAAAAAACM/2X488DqHKms/s640/alcohol.jpg\" alt=\"Alcohol Consumption\" />\n<p>My alcohol consumption did not decrease over time, but rather stayed fairly constant: with $ R = 0.0098 $, there is no correlation between alcohol and time.</p>\n<img src=\"https://lh5.googleusercontent.com/-UCZKlx5l5RI/UHXc6u8h2vI/AAAAAAAAACs/CWcJjS09dS8/s640/sweets.jpg\" alt=\"Sugar Consumption\" />\n<p>Sugar consumption is a similar story: although the best-fit slope is slightly negative, $ R = -0.0671 $ indicates no correlation over time. It seems that my alcohol and sugar consumption were not modified significantly over the tracking period.</p>\n<img src=\"https://lh5.googleusercontent.com/-Ssz89uoE-EA/UHXc5DvHf0I/AAAAAAAAACU/o0C_PJpmZcM/s640/alcohol-and-sugar.jpg\" alt=\"Alcohol and Sugar Consumption\" />\n<p>I decided to graph alcohol and sugar together. It looks like they might be related, as the peaks in each seem to coincide on several occasions. Let's test this hypothesis:</p>\n<img src=\"https://lh6.googleusercontent.com/-iCO9umA8L8s/UHXc5vImvhI/AAAAAAAAACc/d82SCqFs-qI/s640/alcohol-today-vs-yesterday.jpg\" alt=\"Alcohol vs. Sugar Consumption\" />\n<p>The positive slope is more pronounced this time, but $ R = 0.1624 $ still indicates a small degree of correlation. We can also look at the p-value: with $ p = 0.3827 $, it is fairly easy to write this off as a random effect.</p>\n<p>Finally, let's take another look at a question from <a href=\"/posts/2012-10-08-self-tracking-for-panic-a-deeper-look/\">a previous blog post</a>:</p>\n<blockquote>\nOn days where I drink heavily, do I drink less the day after?\n</blockquote>\n<img src=\"https://lh6.googleusercontent.com/-iCO9umA8L8s/UHXc5vImvhI/AAAAAAAAACc/d82SCqFs-qI/s640/alcohol-today-vs-yesterday.jpg\" alt=\"Alcohol Consumption: Today vs. Yesterday\" />\n<p>There's a negative slope there, but the correlation and p-value statistics are in the same uncertain zone as before. I likely need more data to investigate these last two effects properly.</p>\n<h2 id=\"fast-fourier-transform\">Fast Fourier Transform <a class=\"direct-link\" href=\"#fast-fourier-transform\">#</a></h2>\n<h3 id=\"what%3F-2\">What? <a class=\"direct-link\" href=\"#what%3F-2\">#</a></h3>\n<p>Fourier analysis answers this question:</p>\n<blockquote>\nWhat frequencies comprise this signal?\n</blockquote>\n<p>Given a sequence $ x_n $, a <a href=\"http://en.wikipedia.org/wiki/Discrete_Fourier_transform\">Discrete Fourier Transform</a> (DFT) computes</p>\n<p>$$<br>\nX_k = \\sum_{n=0}^{N-1} x_n \\cdot e^{\\frac{-2 i \\pi k n}{N}}<br>\n$$</p>\n<p>The $ X_k $ encode the amplitude and phase of frequencies $ \\frac{f k}{N} $ Hz, where $ T $ is the time between samples and $ f = 1 / T $ is the sampling frequency.</p>\n<p>As described here, the DFT requires $ \\mathcal{O}(N^2) $ time to compute. The <a href=\"http://mathworld.wolfram.com/FastFourierTransform.html\">Fast Fourier Transform</a> (FFT) uses divide-and-conquer on this sum of complex exponentials to compute the DFT in $ \\mathcal{O}(N \\log N) $ time. <a href=\"http://groups.csail.mit.edu/netmit/sFFT/\">Further speedups are possible</a> for real-world signals that are sparse in the frequency domain.</p>\n<h3 id=\"why%3F-2\">Why? <a class=\"direct-link\" href=\"#why%3F-2\">#</a></h3>\n<p>In a self-tracking context, you might ask the following questions:</p>\n<ul>\n<li>Do I have regular exercising patterns?</li>\n<li>Do these patterns cycle weekly? bi-weekly? monthly?</li>\n<li>How much does my amount of exercise fluctuate during a cycle?</li>\n</ul>\n<p>With the FFT, Fourier analysis can help address these questions. However, it can only find <em>periodic</em> effects. Unlike linear regression, it does not help find <em>trends</em> in your data.</p>\n<h3 id=\"the-data-2\">The Data <a class=\"direct-link\" href=\"#the-data-2\">#</a></h3>\n<p>You can see the code for this analysis <a href=\"https://github.com/candu/quantified-savagery-files/blob/master/Panic/recovery-journal/food_fft.py\">here</a>. Again, I look at the first 31 days to ensure that the frequency analysis is meaningful.</p>\n<img src=\"https://lh5.googleusercontent.com/-8j00ob_Ji-Y/UHXc67MQVpI/AAAAAAAAAC0/n3akVSjtRHs/s640/fft-frequencies.jpg\" alt=\"Frequency Strengths\" />\n<p>There are some apparent maxima there, but it's hard to tell what they mean. Part of the difficulty is that <em>these are frequencies rather than period lengths</em>, so let's deal with that:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ python food_fft.py<br>food_fft.py:32: RuntimeWarning: divide by zero encountered <span class=\"token keyword\">in</span> divide<br>  <span class=\"token keyword\">for</span> strength, phase, period <span class=\"token keyword\">in</span> sorted<span class=\"token punctuation\">(</span>zip<span class=\"token punctuation\">(</span>FS, FP, <span class=\"token number\">1.0</span> / Q<span class=\"token punctuation\">))</span><span class=\"token punctuation\">[</span>-5:<span class=\"token punctuation\">]</span>:<br><span class=\"token punctuation\">[</span><span class=\"token number\">2.21</span> days<span class=\"token punctuation\">]</span> <span class=\"token number\">3.0461</span> <span class=\"token punctuation\">(</span>phase<span class=\"token operator\">=</span>-0.67 days<span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">[</span>-2.21 days<span class=\"token punctuation\">]</span> <span class=\"token number\">3.0461</span> <span class=\"token punctuation\">(</span>phase<span class=\"token operator\">=</span>-0.67 days<span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">[</span><span class=\"token number\">7.75</span> days<span class=\"token punctuation\">]</span> <span class=\"token number\">3.1116</span> <span class=\"token punctuation\">(</span>phase<span class=\"token operator\">=</span>-3.67 days<span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">[</span>-7.75 days<span class=\"token punctuation\">]</span> <span class=\"token number\">3.1116</span> <span class=\"token punctuation\">(</span>phase<span class=\"token operator\">=</span>-3.67 days<span class=\"token punctuation\">)</span><br>food_fft.py:33: RuntimeWarning: invalid value encountered <span class=\"token keyword\">in</span> double_scalars<br>  phase_days <span class=\"token operator\">=</span> period * <span class=\"token punctuation\">(</span>phase / <span class=\"token punctuation\">(</span><span class=\"token number\">2.0</span> * math.pi<span class=\"token punctuation\">))</span><br><span class=\"token punctuation\">[</span>inf days<span class=\"token punctuation\">]</span> <span class=\"token number\">18.1401</span> <span class=\"token punctuation\">(</span>phase<span class=\"token operator\">=</span>nan days<span class=\"token punctuation\">)</span></code></pre>\n<p>If you're not familiar with the Fourier transform, the last line might be a bit mysterious. That corresponds to $ X_0 $, which is just the sum of the original samples:</p>\n<p>$$<br>\nX_0 = \\sum_{n=0}^{N-1} x_n \\cdot e^0 = \\sum_{n=0}^{N-1} x_n<br>\n$$</p>\n<p>Other than that, the most pronounced cycles have period lengths of 2.21 days and 7.75 days. The former might be explained by a <em>see-saw drinking pattern</em>, whereas the latter is likely related to the day-of-week effects we saw <a href=\"/posts/2012-10-08-self-tracking-for-panic-a-deeper-look/\">in the previous post</a>.</p>\n<p>Which day of the week? The phase is -3.67 days, and our sample starts on a Monday, placing the first peak on Thursday. The period is slightly longer than a week, though, and the data runs for 31 days, so these peaks gradually shift to <em>cover the weekend</em>.</p>\n<p>There are two caveats:</p>\n<ol>\n<li>I have no idea whether a Fourier coefficient of about 3 is significant here. If it isn't, I'm grasping at straws.</li>\n<li>Again, the small amount of data means the frequency domain data is sparse. To accurately test for bi-daily or weekly effects, I <em>need more fine-grained period lengths.</em></li>\n</ol>\n<h2 id=\"maximum-entropy-modelling\">Maximum Entropy Modelling <a class=\"direct-link\" href=\"#maximum-entropy-modelling\">#</a></h2>\n<h3 id=\"what%3F-3\">What? <a class=\"direct-link\" href=\"#what%3F-3\">#</a></h3>\n<p>Maximum entropy modelling answers this question:</p>\n<blockquote>\nGiven observations of a random process, what is the most likely model\nfor that random process?\n</blockquote>\n<p>Given a discrete probability distribution $ p(X = x_k) = p_k $, the entropy of this distribution is given by</p>\n<p>$$<br>\nH(p) = \\sum - p_k \\log p_k<br>\n$$</p>\n<p>(Yes, I'm conflating the concepts of <a href=\"http://en.wikipedia.org/wiki/Random_variable\">random variables</a> and <a href=\"http://en.wikipedia.org/wiki/Probability_distribution\">probability distributions</a>. If you knew that, you probably don't need this explanation.)</p>\n<p>This can be thought of as the <em>number of bits needed to encode outcomes in this distribution</em>. For instance, if I have a double-headed coin, I need no bits: I already know the outcome. Given a fair coin, though, I need one bit: heads or tails?</p>\n<p>After repeated sampling, we get observed expected values for $ p_k $; let these be $ p'_k $. Since we would like the model to <em>accurately reflect what we already know</em>, we impose the constraints $ p_k = p'_k $. The maximum entropy model is the model that also maximizes $ H(p') $.</p>\n<p>This model encodes what is known <em>while remaining maximally noncommittal on what is unknown.</em></p>\n<p>Adam Berger (CMU) provides <a href=\"http://www.cs.cmu.edu/afs/cs/user/aberger/www/html/tutorial/node2.html#SECTION00011000000000000000\">a more concrete example</a>. If you're interested in learning more, his tutorial is highly recommended reading.</p>\n<h3 id=\"why%3F-3\">Why? <a class=\"direct-link\" href=\"#why%3F-3\">#</a></h3>\n<p>In a self-tracking context, you might ask the following questions:</p>\n<ul>\n<li>Which treatments have the greatest effect in preventing panic attacks? Which have the least effect?</li>\n<li>Today I exercised for at least 30 minutes and had four drinks. Am I likely to get a panic attack?</li>\n<li>What treatments should I try next?</li>\n</ul>\n<p>Maximum entropy modelling can help address these questions. It is often used to <em>classify unseen examples</em>, and would be fantastic in a <a href=\"http://100plus.com/2012/09/qs-data-commons/\">data commons</a> scenario with enough data to provide recommendations to users.</p>\n<h3 id=\"feature-extraction\">Feature Extraction <a class=\"direct-link\" href=\"#feature-extraction\">#</a></h3>\n<p>Since I'm now effectively building a classifier, there's an additional step. I need features for my classifier, which I extract from my existing datasets:</p>\n<pre class=\"language-py\"><code class=\"language-py\">train_set <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><br>dates <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>W<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intersection<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">)</span><br><span class=\"token keyword\">for</span> ds <span class=\"token keyword\">in</span> dates<span class=\"token punctuation\">:</span><br>  <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span><br>    ds_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token string\">'relaxation'</span> <span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>W<span class=\"token punctuation\">[</span>ds<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'relaxation'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">'exercise'</span> <span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>W<span class=\"token punctuation\">[</span>ds<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'exercise'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">'caffeine'</span> <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">[</span>ds<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'caffeine'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">'sweets'</span> <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">[</span>ds<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'sweets'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">'alcohol'</span> <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">[</span>ds<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'alcohol'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">'supplements'</span> <span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">[</span>ds<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'supplements'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token keyword\">except</span> <span class=\"token punctuation\">(</span>ValueError<span class=\"token punctuation\">,</span> KeyError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><br>    <span class=\"token keyword\">continue</span><br>  had_panic <span class=\"token operator\">=</span> P<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>ds<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token string\">'panic'</span> <span class=\"token keyword\">or</span> <span class=\"token string\">'no-panic'</span><br>  train_set<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ds_data<span class=\"token punctuation\">,</span> had_panic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n<p>Note that the features listed here are binary. I use my daily goals as thresholds on caffeine, sweets, and alcohol.</p>\n<p>(If you know how to get float-valued features working with NLTK, let me know! Otherwise, there's always <a href=\"http://www.cs.utah.edu/~hal/megam/\">megam</a> or <a href=\"http://www-i6.informatik.rwth-aachen.de/web/Software/YASMET.html\">YASMET</a>.</p>\n<h3 id=\"the-data-3\">The Data <a class=\"direct-link\" href=\"#the-data-3\">#</a></h3>\n<p>You can see the code for this analysis <a href=\"https://github.com/candu/quantified-savagery-files/blob/master/Panic/recovery-journal/panic_maxent.py\">here</a>. This time I don't care about having consecutive dates, so I use all of the samples.</p>\n<p>After building a <code>MaxentClassifier</code>, I print out the most informative features with <code>show_most_informative_features()</code>:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">  -2.204 <span class=\"token assign-left variable\">exercise</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'panic'</span><br>   <span class=\"token number\">1.821</span> <span class=\"token assign-left variable\">caffeine</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'panic'</span><br>  -0.867 <span class=\"token assign-left variable\">relaxation</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'panic'</span><br>   <span class=\"token number\">0.741</span> <span class=\"token assign-left variable\">alcohol</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'panic'</span><br>  -0.615 <span class=\"token assign-left variable\">caffeine</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'no-panic'</span><br>  -0.537 <span class=\"token assign-left variable\">supplements</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'panic'</span><br>   <span class=\"token number\">0.439</span> <span class=\"token assign-left variable\">sweets</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'panic'</span><br>   <span class=\"token number\">0.430</span> <span class=\"token assign-left variable\">exercise</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'no-panic'</span><br>   <span class=\"token number\">0.284</span> <span class=\"token assign-left variable\">relaxation</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'no-panic'</span><br>   <span class=\"token number\">0.233</span> <span class=\"token assign-left variable\">supplements</span><span class=\"token operator\">==</span>True and label is <span class=\"token string\">'no-panic'</span></code></pre>\n<p>Exercise, relaxation breathing, and vitamin supplements help with panic. Caffeine, alcohol, and sweets do not. I knew that already, but this suggests <em>which treatments or dietary factors have greatest impact.</em></p>\n<p>Let's consider the supplements finding more closely. Of the 45 days, I took supplements on all but two. It's <em>dangerous</em> to draw any conclusions from a feature for which there are very few negative samples. This points out some important points about data analysis:</p>\n<ul>\n<li><strong>Know your data</strong>: otherwise, you may <em>ascribe undue meaning to outliers or noise.</em></li>\n<li><strong>Know your features:</strong> supplements are probably not a good feature here. A <em>feature inclusion threshold</em> on number of positive and negative samples might be helpful here.</li>\n<li><strong>Beware magic:</strong> even when you understand their inner workings, <em>machine learning algorithms can produce results that are difficult to interpret.</em></li>\n</ul>\n<h2 id=\"up-next\">Up Next <a class=\"direct-link\" href=\"#up-next\">#</a></h2>\n<p>In my next post, I look at a panic recovery dataset gathered using <a href=\"https://github.com/candu/qs-counters\">qs-counters</a>, a simple utility I built to reduce friction in self-tracking. I perform these same three analyses on the <a href=\"https://github.com/candu/quantified-savagery-files/tree/master/Panic/qs-counters\">qs-counters dataset</a>, then compare it to the <a href=\"https://github.com/candu/quantified-savagery-files/tree/master/Panic/recovery-journal\">recovery-journal dataset</a>.</p>\n",
      "date_published": "2012-10-09T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2012-10-08-self-tracking-for-panic-a-deeper-look/",
      "url": "https://blog.savageevan.com/posts/2012-10-08-self-tracking-for-panic-a-deeper-look/",
      "title": "Self-Tracking For Panic: A bash-ful Look At Some Data",
      "content_html": "<p>In this post, I perform initial exploratory analysis on my panic recovery journal data using basic UNIX/bash commands.</p>\n<!-- more -->\n<h2 id=\"unix%3F-bash%3F-you're-not-serious%2C-right%3F\">UNIX? bash? You're not serious, right? <a class=\"direct-link\" href=\"#unix%3F-bash%3F-you're-not-serious%2C-right%3F\">#</a></h2>\n<p>Most of the data-centric Quantified Self talks I've seen focus on more complicated methods, including:</p>\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Linear_regression\">linear regression</a>, which <em>identifies gradual trends</em>;</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Fast_Fourier_transform\">FFT</a>, which <em>identifies periodic effects</em>;</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Pearson_product-moment_correlation_coefficient\">Pearson's r</a>, which <em>measures correlation between datasets</em>;</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Student's_t-test\">t-test</a>, which <em>measures difference between datasets</em>.</li>\n</ul>\n<p>These are extremely powerful tools to have at your disposal. Better yet, many languages have community-contributed libraries that provide these tools out-of-the-box. For instance, Python's <code>scipy</code> offers <a href=\"http://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.linregress.html\">linregress</a> for performing linear regression.</p>\n<p>That said, these tools rely on mathematics that is <em>opaque</em> to many software developers. Even if you don't need to know how they work to use them, you need some knowledge of <em>what they do</em> and <em>where they are most appropriate</em>. Statistical tests in particular often have <em>strong preconditions</em> for use:</p>\n<blockquote cite=\"https://en.wikipedia.org/wiki/Student%27s_t-test\">\n  <p>\nEach of the two populations being compared should follow a normal distribution.\n</p>\n  <footer>&ndash; Wikipedia, <cite><a href=\"https://en.wikipedia.org/wiki/Student%27s_t-test\">Student's t-test</a></footer>\n</blockquote>\n<p>Even if you pick the right tool, there's still <em>fear associated with losing control</em>. These tools are not hammers and screwdrivers but magic wands, and <a href=\"http://www.flickr.com/photos/wishingline/7162517642/\">we are terrible magicians</a>.</p>\n<h3 id=\"a-word-on-exploratory-analysis\">A Word On Exploratory Analysis <a class=\"direct-link\" href=\"#a-word-on-exploratory-analysis\">#</a></h3>\n<p>I mentioned that this post would demonstrate <em>exploratory analysis</em>. This is a mode of analysis where you explore your data, play around with it a bit, grab some low-hanging analytical fruit. You don't necessarily need higher mathematics. Regular counts and averages will do. You're not looking for ironclad proof, but rather for <em>suggestions</em>.</p>\n<blockquote>\nWhat does this data suggest?\n</blockquote>\n<p>This is an important question. Put this way, <em>there is no &quot;right&quot; or &quot;wrong&quot; way to analyze your data</em>. UNIX tools fit in nicely here, because you can piece them together and pretty quickly get some useful insights. Better yet, since you understand what you just did, you can explain it to someone else. Analysis becomes a <em>demystified</em> and <em>shareable</em> process.</p>\n<p>Exploratory analysis is also a <em>great entry point</em> to deeper and more directed analysis. As you work with the data, you ask more complicated questions. Eventually these questions exceed the sophistication of your tools, so you look for better tools. You might not deeply understand the better tools, but at least you've worked with the data a bit. You can <em>perform basic sanity checks</em> when these better tools turn up results you don't expect.</p>\n<h2 id=\"the-data\">The Data <a class=\"direct-link\" href=\"#the-data\">#</a></h2>\n<p>I took my paper recovery journal logs:</p>\n<img src=\"https://lh6.googleusercontent.com/-TDKFRsDfutE/UHNEPJReCOI/AAAAAAAAABU/q0sWUwRbPoE/s640/IMG_20121005_171146_426.jpg\" alt=\"A page from my journal\" />\n<p>and manually converted them to handy CSV files:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">date,relaxation,exercise,diet,supplements<br><span class=\"token punctuation\">..</span>.<br><span class=\"token number\">2012</span>-03-12,0,0,1,1<br><span class=\"token number\">2012</span>-03-13,1,0,1,1<br><span class=\"token number\">2012</span>-03-14,1,0,0,1<br><span class=\"token number\">2012</span>-03-15,1,1,1,1<br><span class=\"token number\">2012</span>-03-16,1,1,1,1<br><span class=\"token number\">2012</span>-03-17,1,1,0,1<br><span class=\"token number\">2012</span>-03-18,0,1,0,1<br><span class=\"token punctuation\">..</span>.</code></pre>\n<p>Where did all those different treatments go? I didn't end up using most of them. Making nine parallel habit changes is difficult, so I rapidly converged on a subset of four:</p>\n<ul>\n<li>relaxation breathing;</li>\n<li>daily exercise;</li>\n<li>dietary modifications; and</li>\n<li>vitamin supplements.</li>\n</ul>\n<p>Why manual input? There wasn't enough data to make <a href=\"http://code.google.com/p/tesseract-ocr/\">OCR</a> worthwhile:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> recovery-journal<br>$ <span class=\"token function\">wc</span> -l * <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> total<br>      <span class=\"token number\">41</span> exercise-record<br>      <span class=\"token number\">46</span> food-diary<br>       <span class=\"token number\">8</span> panic-log<br>      <span class=\"token number\">46</span> weekly-practice-record<br>     <span class=\"token number\">141</span> total</code></pre>\n<p>You can view and download the raw data files <a href=\"https://github.com/candu/quantified-savagery-files/tree/master/Panic/recovery-journal\">here</a>.</p>\n<h2 id=\"common-operations\">Common Operations <a class=\"direct-link\" href=\"#common-operations\">#</a></h2>\n<p>These operations appear several times in the UNIX one-liners below, so let's go over them quickly.</p>\n<p>To lop off the CSV column name header:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">tail</span> -n+2</code></pre>\n<p>To extract field <span markdown=\"0\">$ n $</span> from a CSV file:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f<span class=\"token variable\">$n</span></code></pre>\n<p>To tabulate counts in descending order:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> -c <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -rn</code></pre>\n<p>To sum a series of numbers:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">awk</span> <span class=\"token string\">'{sum+=<span class=\"token variable\">$1</span>} END {print sum}'</span></code></pre>\n<p>To get the day before <code>$ds</code>:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> -j -f <span class=\"token string\">\"%Y-%m-%d\"</span> $ds <span class=\"token string\">\"+%s\"</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">tsprev</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$ts</span> - 86400\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">bc</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">dsprev</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> -j -f <span class=\"token string\">\"%s\"</span> $tsprev <span class=\"token string\">\"+%Y-%m-%d\"</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"and-now%2C-the-main-show\">And Now, The Main Show <a class=\"direct-link\" href=\"#and-now%2C-the-main-show\">#</a></h2>\n<p>Let's start by looking at my weekly practice record:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">a</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">b</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">c</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">d</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">grep</span> -E <span class=\"token string\">\",<span class=\"token variable\">$a</span>,<span class=\"token variable\">$b</span>,<span class=\"token variable\">$c</span>,<span class=\"token variable\">$d</span>$\"</span> weekly-practice-record <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> -l<span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$a</span> <span class=\"token variable\">$b</span> <span class=\"token variable\">$c</span> <span class=\"token variable\">$d</span> <span class=\"token variable\">$count</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span> <span class=\"token operator\">|</span> <span class=\"token function\">tr</span> <span class=\"token string\">' '</span> <span class=\"token string\">'<span class=\"token entity\" title=\"\\t\">\\t</span>'</span><br><span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">45</span><br><span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">1</span>       <span class=\"token number\">43</span><br><span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">1</span>       <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">22</span><br><span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">1</span>       <span class=\"token number\">1</span>       <span class=\"token number\">21</span><br><span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">1</span>       <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">32</span><br><span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">1</span>       <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">1</span>       <span class=\"token number\">31</span><br><span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">1</span>       <span class=\"token number\">1</span>       <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">16</span><br><span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">1</span>       <span class=\"token number\">1</span>       <span class=\"token number\">1</span>       <span class=\"token number\">16</span><br><span class=\"token number\">1</span>       <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">36</span><br><span class=\"token number\">1</span>       <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">1</span>       <span class=\"token number\">34</span><br><span class=\"token number\">1</span>       <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">1</span>       <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">19</span><br><span class=\"token number\">1</span>       <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">1</span>       <span class=\"token number\">1</span>       <span class=\"token number\">18</span><br><span class=\"token number\">1</span>       <span class=\"token number\">1</span>       <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">26</span><br><span class=\"token number\">1</span>       <span class=\"token number\">1</span>       <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">1</span>       <span class=\"token number\">25</span><br><span class=\"token number\">1</span>       <span class=\"token number\">1</span>       <span class=\"token number\">1</span>       <span class=\"token punctuation\">[</span>01<span class=\"token punctuation\">]</span>    <span class=\"token number\">14</span><br><span class=\"token number\">1</span>       <span class=\"token number\">1</span>       <span class=\"token number\">1</span>       <span class=\"token number\">1</span>       <span class=\"token number\">14</span></code></pre>\n<p>I tracked myself for 45 days. During that time, I followed all four treatments on 14 days. In order from most to least regular:</p>\n<ul>\n<li>vitamin supplements (43 days);</li>\n<li>relaxation breathing (36 days);</li>\n<li>daily exercise (32 days);</li>\n<li>dietary modifications (22 days).</li>\n</ul>\n<p>I followed both the exercise and diet treatments for only 16 of 45 days! Right away, I have a question for further inquiry:</p>\n<blockquote>\nWhat was so hard about those two treatments?\n</blockquote>\n<h3 id=\"exercise\">Exercise <a class=\"direct-link\" href=\"#exercise\">#</a></h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">tail</span> -n+2 exercise-record <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f2 <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> -c <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -rn <span class=\"token operator\">|</span> <span class=\"token function\">head</span> -5<br>  <span class=\"token number\">11</span> <span class=\"token number\">16</span>:00<br>   <span class=\"token number\">8</span> <span class=\"token number\">20</span>:00<br>   <span class=\"token number\">3</span> <span class=\"token number\">15</span>:00<br>   <span class=\"token number\">3</span> <span class=\"token number\">14</span>:00<br>   <span class=\"token number\">3</span> <span class=\"token number\">12</span>:00</code></pre>\n<p>My most common exercise times were 4pm and 8pm. What was I doing at those times?</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">grep</span> <span class=\"token number\">16</span>:00 exercise-record <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f3 <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> -c <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -rn <span class=\"token operator\">|</span> <span class=\"token function\">head</span> -1<br>   <span class=\"token number\">9</span> conditioning<br>$ <span class=\"token function\">grep</span> <span class=\"token number\">20</span>:00 exercise-record <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f3 <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> -c <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -rn <span class=\"token operator\">|</span> <span class=\"token function\">head</span> -1<br>   <span class=\"token number\">6</span> soccer</code></pre>\n<p>Aha! 4pm was my scheduled gym time at work, and 8pm was when I went for <a href=\"http://soccerfours.com/\">weekly pickup soccer</a>. Both were regularly scheduled activities.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">grep</span> -E <span class=\"token string\">\"(00|01|02|03|04|05|06|07|08|09|10|11):00\"</span> exercise-record <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> -l<br>       <span class=\"token number\">7</span><br>$ <span class=\"token function\">grep</span> -E <span class=\"token string\">\"(12|13|14|15|16|17|18|19|20|21|22|23):00\"</span> exercise-record <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> -l<br>       <span class=\"token number\">33</span></code></pre>\n<p>I rarely exercise in the morning, which might be okay: physical performance is <a href=\"http://online.wsj.com/article/SB10000872396390444180004578018294057070544.html\">higher in the afternoon</a>.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">tail</span> -n+2 exercise-record <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f3 <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> -c <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -rn<br>  <span class=\"token number\">15</span> conditioning<br>   <span class=\"token number\">7</span> soccer<br>   <span class=\"token number\">6</span> walking<br>   <span class=\"token number\">6</span> cycling<br>   <span class=\"token number\">2</span> running<br>   <span class=\"token number\">2</span> dancing<br>   <span class=\"token number\">1</span> swimming<br>   <span class=\"token number\">1</span> longboarding</code></pre>\n<p>It's not surprising to see gym conditioning sets and soccer as my top activities, but walking and cycling aren't far behind.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">tail</span> -n+2 exercise-record <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f4 <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> -c <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -rn<br>  <span class=\"token number\">20</span> <span class=\"token number\">30</span><br>  <span class=\"token number\">11</span> <span class=\"token number\">60</span><br>   <span class=\"token number\">4</span> <span class=\"token number\">45</span><br>   <span class=\"token number\">2</span> <span class=\"token number\">40</span><br>   <span class=\"token number\">2</span> <span class=\"token number\">240</span><br>   <span class=\"token number\">1</span> <span class=\"token number\">120</span></code></pre>\n<p>I most commonly exercised for 30-60 minutes, with infrequent longer blocks of activity. What was I doing in those longer blocks?</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">grep</span> -E <span class=\"token string\">\",(120|240)$\"</span> exercise-record<br><span class=\"token number\">2012</span>-01-27,20:00,dancing,120<br><span class=\"token number\">2012</span>-01-29,10:00,walking,240<br><span class=\"token number\">2012</span>-02-11,12:00,walking,240</code></pre>\n<p>When else was I dancing?</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">grep</span> dancing exercise-record<br><span class=\"token number\">2012</span>-01-27,20:00,dancing,120<br><span class=\"token number\">2012</span>-02-03,21:00,dancing,30</code></pre>\n<p>Looking at my calendar, these blocks are easily identified:</p>\n<img src=\"https://lh6.googleusercontent.com/-BMXU2Ek3Ng0/UHNJnPz-bqI/AAAAAAAAABw/3vSmmAKQzQo/s800/Screen%2520Shot%25202012-10-08%2520at%25205.45.17%2520PM.jpg\" alt=\"Jan 27, 2012\" />\n<img src=\"https://lh4.googleusercontent.com/-EWShEmAoYPc/UHNJnuc6eGI/AAAAAAAAAB4/nWSI-zqtp_U/s800/Screen%2520Shot%25202012-10-08%2520at%25205.45.37%2520PM.jpg\" alt=\"Feb 03, 2012\" />\n<p>Having fun is great for my health!</p>\n<h3 id=\"diet\">Diet <a class=\"direct-link\" href=\"#diet\">#</a></h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">seq</span> <span class=\"token number\">2</span> <span class=\"token number\">5</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f$i food-diary <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{ sum+=<span class=\"token variable\">$1</span>} END {print sum}'</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">head</span> -1 food-diary <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f$i<span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">printf</span> <span class=\"token string\">\"%12s<span class=\"token entity\" title=\"\\t\">\\t</span>%s<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span> <span class=\"token variable\">$name</span> <span class=\"token variable\">$count</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span><br>    caffeine    <span class=\"token number\">6</span><br>      sweets    <span class=\"token number\">48</span><br>     alcohol    <span class=\"token number\">140</span><br> supplements    <span class=\"token number\">42</span></code></pre>\n<p>I nearly eliminated caffeine during this period! By the time I started keeping the log, I'd already started to reduce my consumption. On average, I had just over one sweet per day. More troubling is alcohol, with an average of 3.1 drinks/day. Let's take a closer look at my drinking patterns.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">tail</span> -n+2 food-diary <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f4 <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> -c <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -rn<br>  <span class=\"token number\">12</span> <span class=\"token number\">4</span><br>   <span class=\"token number\">9</span> <span class=\"token number\">2</span><br>   <span class=\"token number\">7</span> <span class=\"token number\">1</span><br>   <span class=\"token number\">6</span> <span class=\"token number\">5</span><br>   <span class=\"token number\">3</span> <span class=\"token number\">3</span><br>   <span class=\"token number\">2</span> <span class=\"token number\">8</span><br>   <span class=\"token number\">2</span> <span class=\"token number\">6</span><br>   <span class=\"token number\">2</span> <span class=\"token number\">0</span><br>   <span class=\"token number\">2</span></code></pre>\n<p>My most common daily drinking amounts were 1, 2, and 4 drinks per day. It was very rare for me to go a day without drinking any alcohol. More alarmingly, <a href=\"http://en.wikipedia.org/wiki/Binge_drinking#Definition\">binge drinking</a> counts for <em>over 40% of my alcohol consumption!</em></p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">tail</span> -n+2 food-diary <span class=\"token operator\">|</span> <span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> line<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token assign-left variable\">weekday</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> -j -f <span class=\"token string\">\"%Y-%m-%d\"</span> <span class=\"token punctuation\">$(</span>echo $line <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f1<span class=\"token punctuation\">)</span> <span class=\"token string\">\"+%a\"</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">alcohol</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $line <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f4<span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$weekday</span> <span class=\"token variable\">$alcohol</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span> <span class=\"token operator\">></span> drinking.log<br>$ <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">weekday</span> <span class=\"token keyword\">in</span> Mon Tue Wed Thu Fri Sat Sun<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">grep</span> $weekday drinking.log <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">' '</span> -f2 <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{ sum+=<span class=\"token variable\">$1</span>} END {print sum}'</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$count</span> <span class=\"token variable\">$weekday</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -rn<br><span class=\"token number\">28</span> Wed<br><span class=\"token number\">27</span> Sat<br><span class=\"token number\">23</span> Mon<br><span class=\"token number\">20</span> Sun<br><span class=\"token number\">19</span> Fri<br><span class=\"token number\">15</span> Tue<br><span class=\"token number\">8</span> Thu</code></pre>\n<p>I drank most on Wednesdays and Saturdays; Mondays were also major drinking days, which is surprising! By contrast, I drank much less than average on Thursdays. When I narrow in on binge drinking, the pattern shifts slightly:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">grep</span> -E <span class=\"token string\">\"(5|6|7|8)$\"</span> drinking.log <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">' '</span> -f1 <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> -c <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -rn<br>   <span class=\"token number\">4</span> Sat<br>   <span class=\"token number\">3</span> Sun<br>   <span class=\"token number\">2</span> Wed<br>   <span class=\"token number\">1</span> Fri</code></pre>\n<p>Wednesday is still an offender, but the weekends are clear culprits. <em>80% of my binge drinking days fell on weekends.</em></p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">tail</span> -n+2 food-diary <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f1,4 <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -E <span class=\"token string\">\"(5|6|7|8)$\"</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> line<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token assign-left variable\">ds</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $line <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f1<span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> -j -f <span class=\"token string\">\"%Y-%m-%d\"</span> $ds <span class=\"token string\">\"+%s\"</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">ts_next</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$ts</span> + 86400\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">bc</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">ds_next</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> -j -f <span class=\"token string\">\"%s\"</span> $ts_next <span class=\"token string\">\"+%Y-%m-%d\"</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$line</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">grep</span> $ds_next food-diary <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f1,4<span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span><br><span class=\"token number\">2012</span>-01-21,5 <span class=\"token number\">2012</span>-01-22,5<br><span class=\"token number\">2012</span>-01-22,5 <span class=\"token number\">2012</span>-01-23,1<br><span class=\"token number\">2012</span>-01-28,8 <span class=\"token number\">2012</span>-01-29,2<br><span class=\"token number\">2012</span>-02-01,6 <span class=\"token number\">2012</span>-02-02,0<br><span class=\"token number\">2012</span>-02-04,5 <span class=\"token number\">2012</span>-02-05,3<br><span class=\"token number\">2012</span>-02-10,6 <span class=\"token number\">2012</span>-02-11,4<br><span class=\"token number\">2012</span>-02-12,5 <span class=\"token number\">2012</span>-02-13,3<br><span class=\"token number\">2012</span>-03-14,8 <span class=\"token number\">2012</span>-03-15,0<br><span class=\"token number\">2012</span>-03-17,5 <span class=\"token number\">2012</span>-03-18,5<br><span class=\"token number\">2012</span>-03-18,5 <span class=\"token number\">2012</span>-03-19,4</code></pre>\n<p>Among days where I had 5 or more drinks, I had an average of 2.7 drinks the next day.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">tail</span> -n+2 food-diary <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f1,4 <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -E <span class=\"token string\">\"(0|1)$\"</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> line<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token assign-left variable\">ds</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $line <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f1<span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> -j -f <span class=\"token string\">\"%Y-%m-%d\"</span> $ds <span class=\"token string\">\"+%s\"</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">tsprev</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$ts</span> - 86400\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">bc</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">dsprev</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> -j -f <span class=\"token string\">\"%s\"</span> $tsprev <span class=\"token string\">\"+%Y-%m-%d\"</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">grep</span> $dsprev food-diary <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f1,4<span class=\"token variable\">)</span></span> <span class=\"token variable\">$line</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span><br><span class=\"token number\">2012</span>-01-22,5 <span class=\"token number\">2012</span>-01-23,1<br><span class=\"token number\">2012</span>-01-23,1 <span class=\"token number\">2012</span>-01-24,1<br><span class=\"token number\">2012</span>-01-30,4 <span class=\"token number\">2012</span>-01-31,1<br><span class=\"token number\">2012</span>-02-01,6 <span class=\"token number\">2012</span>-02-02,0<br><span class=\"token number\">2012</span>-02-05,3 <span class=\"token number\">2012</span>-02-06,1<br><span class=\"token number\">2012</span>-02-06,1 <span class=\"token number\">2012</span>-02-07,1<br><span class=\"token number\">2012</span>-02-08,4 <span class=\"token number\">2012</span>-02-09,1<br><span class=\"token number\">2012</span>-03-14,8 <span class=\"token number\">2012</span>-03-15,0<br><span class=\"token number\">2012</span>-03-15,0 <span class=\"token number\">2012</span>-03-16,1</code></pre>\n<p>Among days where I had fewer than 2 drinks, I had consumed an average of 3.6 drinks the previous day. This suggests a <em>see-saw pattern</em>: I would drink too much one day, back off the next, and repeat.</p>\n<h3 id=\"panic\">Panic <a class=\"direct-link\" href=\"#panic\">#</a></h3>\n<p>All of this skirts the real question:</p>\n<blockquote>\nWhat caused me to have panic attacks?\n</blockquote>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">seq</span> <span class=\"token number\">2</span> <span class=\"token number\">4</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token function\">head</span> -1 food-diary <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f<span class=\"token variable\">$i</span><span class=\"token punctuation\">;</span> <span class=\"token function\">tail</span> -n+2 panic-log <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f1 <span class=\"token operator\">|</span> <span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> ds<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token assign-left variable\">ts</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> -j -f <span class=\"token string\">\"%Y-%m-%d\"</span> $ds <span class=\"token string\">\"+%s\"</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">tsprev</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$ts</span> - 86400\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">bc</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">dsprev</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> -j -f <span class=\"token string\">\"%s\"</span> $tsprev <span class=\"token string\">\"+%Y-%m-%d\"</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">grep</span> $dsprev food-diary <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f1,2<span class=\"token variable\">)</span></span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">grep</span> $ds food-diary <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">','</span> -f1,$i<span class=\"token variable\">)</span></span> <span class=\"token variable\">$ds</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span><br>caffeine<br><span class=\"token number\">2012</span>-01-28,0 <span class=\"token number\">2012</span>-01-29,0 <span class=\"token number\">2012</span>-01-29<br><span class=\"token number\">2012</span>-01-31,0 <span class=\"token number\">2012</span>-02-01,0 <span class=\"token number\">2012</span>-02-01<br><span class=\"token number\">2012</span>-02-03,0 <span class=\"token number\">2012</span>-02-04,0 <span class=\"token number\">2012</span>-02-04<br><span class=\"token number\">2012</span>-02-07,0 <span class=\"token number\">2012</span>-02-08,1 <span class=\"token number\">2012</span>-02-08<br><span class=\"token number\">2012</span>-02-12,0 <span class=\"token number\">2012</span>-02-13,0 <span class=\"token number\">2012</span>-02-13<br><span class=\"token number\">2012</span>-02-29<br><span class=\"token number\">2012</span>-03-12,0 <span class=\"token number\">2012</span>-03-13,1 <span class=\"token number\">2012</span>-03-13<br>sweets<br><span class=\"token number\">2012</span>-01-28,0 <span class=\"token number\">2012</span>-01-29,3 <span class=\"token number\">2012</span>-01-29<br><span class=\"token number\">2012</span>-01-31,0 <span class=\"token number\">2012</span>-02-01,1 <span class=\"token number\">2012</span>-02-01<br><span class=\"token number\">2012</span>-02-03,0 <span class=\"token number\">2012</span>-02-04,2 <span class=\"token number\">2012</span>-02-04<br><span class=\"token number\">2012</span>-02-07,0 <span class=\"token number\">2012</span>-02-08,1 <span class=\"token number\">2012</span>-02-08<br><span class=\"token number\">2012</span>-02-12,0 <span class=\"token number\">2012</span>-02-13,1 <span class=\"token number\">2012</span>-02-13<br><span class=\"token number\">2012</span>-02-29<br><span class=\"token number\">2012</span>-03-12,0 <span class=\"token number\">2012</span>-03-13,1 <span class=\"token number\">2012</span>-03-13<br>alcohol<br><span class=\"token number\">2012</span>-01-28,0 <span class=\"token number\">2012</span>-01-29,2 <span class=\"token number\">2012</span>-01-29<br><span class=\"token number\">2012</span>-01-31,0 <span class=\"token number\">2012</span>-02-01,6 <span class=\"token number\">2012</span>-02-01<br><span class=\"token number\">2012</span>-02-03,0 <span class=\"token number\">2012</span>-02-04,5 <span class=\"token number\">2012</span>-02-04<br><span class=\"token number\">2012</span>-02-07,0 <span class=\"token number\">2012</span>-02-08,4 <span class=\"token number\">2012</span>-02-08<br><span class=\"token number\">2012</span>-02-12,0 <span class=\"token number\">2012</span>-02-13,3 <span class=\"token number\">2012</span>-02-13<br><span class=\"token number\">2012</span>-02-29<br><span class=\"token number\">2012</span>-03-12,0 <span class=\"token number\">2012</span>-03-13,2 <span class=\"token number\">2012</span>-03-13</code></pre>\n<p>I had no data for <code>2012-02-28</code>. Other than that, on days where I had reported panic attacks, my <em>current- and previous-day consumption patterns</em> were:</p>\n<ul>\n<li><strong>alcohol</strong>: 3.7 drinks that day, 3.8 the previous day (overall average is 3.1);</li>\n<li><strong>sweets</strong>: 1.5 sweets that day, 1.0 the previous day (overall average is 1.0);</li>\n<li><strong>caffeine</strong>: 0.3 caffeinated beverages that day, 0.0 the previous day (overall average is 0.1).</li>\n</ul>\n<p>This suggests that <em>reducing alcohol and sweets consumption does help</em>. The data is less clear on caffeine; as previously mentioned, I had mostly cut out caffeine by the time I started tracking.</p>\n<h2 id=\"up-next\">Up Next <a class=\"direct-link\" href=\"#up-next\">#</a></h2>\n<p>In the next post, I'll run some of the statistical tests and transformations mentioned previously on this same data. I'll also compare this dataset with another dataset gathered through <a href=\"https://github.com/candu/qs-counters\">qs-counters</a>, a simple lightweight tracking utility I built to reduce friction in the recording process.</p>\n",
      "date_published": "2012-10-08T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2012-10-03-panic/",
      "url": "https://blog.savageevan.com/posts/2012-10-03-panic/",
      "title": "Panic!",
      "content_html": "<p>In this post, I'll tell the story of how I got started with self-tracking and talk briefly about my first experiment.</p>\n<!--more-->\n<h2 id=\"my-journey-into-the-self-tracking-jungle\">My Journey Into The Self-Tracking Jungle <a class=\"direct-link\" href=\"#my-journey-into-the-self-tracking-jungle\">#</a></h2>\n<h3 id=\"first%2C-a-video-for-context\">First, A Video For Context <a class=\"direct-link\" href=\"#first%2C-a-video-for-context\">#</a></h3>\n<p>If you've already seen my talk on panic attacks, feel free to skip to the next section.</p>\n<iframe src=\"http://player.vimeo.com/video/45860129\" width=\"500\" height=\"281\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe> <p><a href=\"http://vimeo.com/45860129\">Evan Savage - Panic</a> from <a href=\"http://vimeo.com/quantifiedself\">Gary Wolf</a> on <a href=\"http://vimeo.com\">Vimeo</a>.</p>\n<h3 id=\"seeking-help\">Seeking Help <a class=\"direct-link\" href=\"#seeking-help\">#</a></h3>\n<p>My success in confronting panic began with a <em>simple yet powerful insight</em>:</p>\n<blockquote>\nI don't know how to deal with this, but someone else might.\n</blockquote>\n<p>Once I had this insight, <em>seeing a psychologist</em> was the natural next step.</p>\n<ul>\n<li>As a <em>domain expert</em>, the psychologist knows where to find relevant information for a wide variety of conditions. I can ask them for further resources and receive <em>highly targeted recommendations</em>.</li>\n<li>As a <em>stranger</em>, the psychologist provides an <em>impartial and non-judgmental sounding board</em>. I can discuss my thoughts, fears, and experiences with them and feel safe doing so.</li>\n</ul>\n<p>As a side note, the former point reflects some of the promise of the <em>Quantified Mass</em>. When you have a specific problem, there is a subtle but crucial difference between</p>\n<blockquote>\nWhat did others try?\n</blockquote>\n<p>and</p>\n<blockquote>\nWhat should I try next?\n</blockquote>\n<p>While answering the first question is helpful, I'd argue that answering the second is an order of magnitude more helpful.</p>\n<h3 id=\"basic-research\">Basic Research <a class=\"direct-link\" href=\"#basic-research\">#</a></h3>\n<p>My psychologist recommended the <a href=\"http://www.amazon.com/Anxiety-Phobia-Workbook-Edmund-Bourne/dp/1572248912\">Anxiety and Phobia Workbook</a>. As a survey of known symptoms, studies, treatments, and experiences, it gave me a <em>much broader set of external inputs</em> to draw on. After reading the workbook cover to cover, the natural next step was now to <em>combine these inputs into something actionable</em>.</p>\n<p>I identified specific treatments that seemed easy to implement. In retrospect, my initial list was pretty large:</p>\n<ul>\n<li><strong>Abdominal Breathing</strong>: by learning to <em>breathe from the abdomen</em>, you train your body to avoid the sort of shallow chest breathing that can worsen an attack.</li>\n<li><strong>Deep Relaxation</strong>: through <em>meditation, progressive muscle relaxation, or other prolonged exercises</em>, you remove sources of physical tension in the body.</li>\n<li><strong>Daily Exercise</strong>: with <em>30 minutes of exercise per day</em>, you reduce overall stress and increase fitness.</li>\n<li><strong>Positive Self-Talk</strong>: by <em>replacing internal monologues</em> like &quot;oh no, I'm having a heart attack&quot; with more positive ones like &quot;I've dealt with this before, I'm in control&quot;, you stop this mental feedback loop from making your attack worse.</li>\n<li><strong>Desensitization</strong>: by <em>gradually exposing yourself to panic triggers in a safe environment</em>, you sever the mental links that tie those triggers to panic.</li>\n<li><strong>Assertiveness</strong>: by <em>expressing yourself in a constructive and assertive manner</em>, you gain a sense of control over your environment that is also useful in thwarting an attack.</li>\n<li><strong>Diet Modification</strong>: by <em>eliminating or reducing consumption of caffeine, simple sugars, and alcohol</em>, you reduce baseline stress.</li>\n<li><strong>Supplements</strong>: by <em>taking B-complex and C vitamins</em>, your body gets the raw materials necessary to regulate stress.</li>\n</ul>\n<p>All of these take <em>at most 30 minutes per day</em>, and many are <em>passive habits</em> that rely on <em>small behavior modifications</em>. <a href=\"https://www.facebook.com/events/268817716510713/\">Small changes in habit</a> are often more effective than large changes, as they are <em>easier to maintain</em>.</p>\n<h2 id=\"my-first-experiment\">My First Experiment <a class=\"direct-link\" href=\"#my-first-experiment\">#</a></h2>\n<p>Building this list led me to another question:</p>\n<blockquote>\nHow will I know if my condition is improving?\n</blockquote>\n<p>This is where <em>self-tracking</em> comes in. To answer this question, I needed to know what I was doing and whether it was working. I decided that I would keep a <em>recovery journal</em>, which I divided into four sections.</p>\n<ol>\n<li><strong>Weekly Practice Record</strong>: this was an overview of my activity. Every day, I would check off each treatment I successfully followed. I also had areas for weekly goals and notes.</li>\n<li><strong>Daily Record of Exercise</strong>: every day, I would fill in either the duration and type of exercise or a reason for not exercising.</li>\n<li><strong>Food Diary</strong>: every day, I would fill in my caffeine, sugar, and alcohol consumption. I would also fill whether I took B-complex and C vitamins.</li>\n<li><strong>Panic Triggers and Responses</strong>: if I experienced a panic attack, I would note the date and time, the severity, what triggered it, what specific symptoms I experienced, and how I dealt with it.</li>\n</ol>\n<p>You can view and print the log sheets <a href=\"https://docs.google.com/folder/d/0B4lRh7NaNiTMNDE2ODE3ZTMtNWVjZC00M2VlLTg1NWUtZjdmZTlkMGI2NTZm/edit\">on Google Docs</a>.</p>\n<p>Keeping these logs took no more than five minutes per day. Tracking mechanisms are most effective when they have <em>low overhead</em>, as this lowers the willpower barrier to using them regularly.</p>\n<h3 id=\"a-diversion-on-self-tracking-design\">A Diversion On Self-Tracking Design <a class=\"direct-link\" href=\"#a-diversion-on-self-tracking-design\">#</a></h3>\n<blockquote cite=\"http://worrydream.com/LadderOfAbstraction/\">\n  <p>\nHow can we design systems when we don't know what we're doing?\n</p>\n  <footer>&ndash; Bret Victor, <cite><a href=\"http://worrydream.com/LadderOfAbstraction/\">Up and Down the Ladder of Abstraction</a></footer>\n</blockquote>\n<p>Although I cribbed the individual sections almost verbatim from the workbook, their specific combination has some curious results.</p>\n<p>The <em>broad</em> view of Section 1 is complemented by the <em>deep</em> view of Sections 2-3. In the data visualization world, having <a href=\"http://worrydream.com/LadderOfAbstraction/\">multiple levels of abstraction</a> helps the viewer grasp the whole picture without losing their hold on specifics. By looking at the broad view, I knew my overall progress; by looking at the deep views, I could see the areas I needed to focus on.</p>\n<p>Section 4 provides the <em>feedback loop</em>. Without this section, I can't answer my earlier question:</p>\n<blockquote>\nHow will I know if my condition is improving?\n</blockquote>\n<p>My self-tracking was very <em>goal-directed</em>: I had a specific problem that I wanted to solve. There is another kind of self-tracking, one that I think many people ignore, and that is <em>exploratory</em> self-tracking.</p>\n<p>Imagine this same journal without Section 4. None of the treatments are specific to panic, so they could reasonably be followed by anyone. Without the goal of confronting panic, there is <em>greater room for curiosity</em>. You could add more experiments, play with correlations, ask weirder questions like &quot;what happens if I eat a lot of <a href=\"http://quantifiedself.com/butter/\">butter</a>?&quot; <em>Without imposing goals, there is no failure or success</em>, and that can be both a curse and a blessing. The curse is that you might not measurably improve yourself. The blessing is that you might not care!</p>\n<p>I believe that, much like a <a href=\"http://en.wikipedia.org/wiki/Reinforcement_learning\">reinforcement learning</a> system, the Quantified Self community <em>needs both modes of self-tracking to thrive</em>.</p>\n",
      "date_published": "2012-10-03T00:00:00Z"
    },{
      "id": "https://blog.savageevan.com/posts/2012-10-02-welcome-to-quantified-savagery/",
      "url": "https://blog.savageevan.com/posts/2012-10-02-welcome-to-quantified-savagery/",
      "title": "Welcome to Quantified Savagery",
      "content_html": "<p>I'm <a href=\"http://cv.savageevan.com/\">Evan Savage</a> and I'd like to welcome you to Quantified Savagery. I recently left my job at Facebook to focus on exploring the <a href=\"http://quantifiedself.com/\">Quantified Self</a>, and I'm super-excited to share those explorations here on my new blog. In this first post, I'll explain the Quantified Self, give you a sense of what I'll be posting in the near future, and provide some helpful tips on reading this blog.</p>\n<!--more-->\n<h2 id=\"what-is-the-quantified-self%3F\">What is the Quantified Self? <a class=\"direct-link\" href=\"#what-is-the-quantified-self%3F\">#</a></h2>\n<p>I've had to explain this countless times to friends, family, and co-workers: why did I leave <a href=\"http://www.glassdoor.com/Reviews/Facebook-Reviews-E40772.htm\">one of the world's best employers</a> to explore a field most people haven't even heard of? I usually start by name-dropping <a href=\"http://www.fitbit.com/\">Fitbit</a> or <a href=\"http://nikeplus.nike.com/plus/\">Nike+</a> as prominent examples of personal data collection and analysis. I then do some semi-coherent hand-waving about the vast potential of data collection and analysis. All of this is really just an attempt to cover up the fact that <em>I don't really know</em>.</p>\n<p>That doesn't really cut it as an explanation for a major life decision, though, so let's look a bit deeper.</p>\n<p>The Quantified Self <a href=\"http://quantifiedself.com/\">community website</a> has this tagline:</p>\n<blockquote>\nself knowledge through numbers\n</blockquote>\n<ul>\n<li><strong>self:</strong> you seek to answer <em>your</em> questions.</li>\n<li><strong>knowledge:</strong> in doing this, you gain an <em>awareness</em> of your behaviors and motivations.</li>\n<li><strong>through numbers:</strong> this process is driven by <em>data</em> gathered from sensors, journals, and any other tools at your disposal.</li>\n</ul>\n<p>This is a good first-level approximation: you <em>gather</em> your data, <em>analyze</em> it, and <em>interpret</em> the analysis to become more <em>self-aware</em>.</p>\n<p>But why is this suddenly important? After all, journal-keeping has been around roughly as long as written languages. The answer lies in <em>technology</em>. For the first time in history, over half the world's population owns sensor-packed networked computing devices. We refer to these devices as mobile phones only by historical accident. In fact, they're really powerful tools for speeding up this process of gaining <em>self knowledge through numbers</em>.</p>\n<p>As I said before, though, this is only a first-level approximation. There are two main ways in which Quantified Self can achieve greater awesomeness: <em>Quantified Mass</em> and <em>Qualified Self</em>.</p>\n<h3 id=\"quantified-mass\">Quantified Mass <a class=\"direct-link\" href=\"#quantified-mass\">#</a></h3>\n<p>As Gary Wolf pointed out in his <a href=\"http://www.onthemedia.org/people/gary-wolf/\">interview with On the Media</a>, self-tracking doesn't lead to self-obsession but rather to group-awareness. In asking our own questions, we find that these questions are important to others as well. When many people gather comparable datasets to answer the same questions, there's an opportunity to extract insights that could benefit us all.</p>\n<p>Scalable <em>mass</em> insights have massive power. Taking a 1% chunk out of the American obesity epidemic might not sound impressive, but that's potentially a <a href=\"http://www.forbes.com/sites/bethhoffman/2012/08/16/what-the-obesity-epidemic-costs-us-infographic/\">$6 billion impact</a> on direct and indirect costs. And that's just in the United States, which counts for a tiny slice of the global mobile userbase.</p>\n<p>Many of the requisite data mining tools already exist, but they're being employed to increase advertising click-through rates by 1%. The engineers building these tools aren't indifferent to societal problems; rather, <em>the datasets to solve those problems largely don't exist yet.</em> Once they do, the quantified mass can start driving these massive-scale incremental wins.</p>\n<h3 id=\"qualified-self\">Qualified Self <a class=\"direct-link\" href=\"#qualified-self\">#</a></h3>\n<blockquote>\nNot everything that counts can be counted,\nand not everything that can be counted counts.\n</blockquote>\n<p>Our perception of life is rarely numerical. Much more often, it is visual, auditory, tactile, or experiential. The problem with data is that you can't <a href=\"http://worrydream.com/#!/KillMath\">see</a> or <a href=\"http://blog.makezine.com/2009/02/08/haptic-compass/\">feel</a> them. Even the best data scientists use data only as a means of <a href=\"http://www.ted.com/talks/hans_rosling_shows_the_best_stats_you_ve_ever_seen.html\">telling a story</a>.</p>\n<p>Put another way, this awareness process starts with qualitative questions and ends with qualitative answers. Data is the intermediate representation, one we use for its unique ability to permit detailed analysis. Ultimately, though, we're going to ask questions like</p>\n<blockquote>\nHow can I improve my fitness?\n</blockquote>\n<p>and expect answers like</p>\n<blockquote>\nBy finding training partners. By doing more engaging athletic\nactivities. By setting aside regularly scheduled time.\n</blockquote>\n<p>We're going to need moral support. We're going to give and receive advice. We're going to have conversations and <em>tell stories</em> about our personal struggles with fitness.</p>\n<p>These qualified aspects of self-awareness are arguably the most important to us. <em>Data provide a stepping-stone</em>, something we can build upon to address these aspects. By building systems designed for the qualified self, we can bring the benefits of the quantified self to everyone.</p>\n<h3 id=\"back-to-the-quantified-self\">Back to the Quantified Self <a class=\"direct-link\" href=\"#back-to-the-quantified-self\">#</a></h3>\n<p>That sums up why I'm so excited about Quantified Self: there really is an enormous potential here to revolutionize our lives on both the global/societal and individual levels. It's also a fantastically diverse field, one that connects hackers and doctors and entrepreneurs and teachers and artists through mutual pursuit of insanely lofty goals.</p>\n<h2 id=\"upcoming-content\">Upcoming Content <a class=\"direct-link\" href=\"#upcoming-content\">#</a></h2>\n<p>The next few posts will detail my experiences <em>dealing with panic disorder through self-tracking</em>. I gave a talk about this to the Bay Area Quantified Self community, which you can <a href=\"http://quantifiedself.com/2012/07/evan-savage-on-panic-tracking/\">view here</a> for some initial context.</p>\n<h2 id=\"how-to-read-this-blog\">How To Read This Blog <a class=\"direct-link\" href=\"#how-to-read-this-blog\">#</a></h2>\n<p>Although this is a blog about personal data, one of my primary goals is to make the thoughts and insights shared here accessible to a broad audience. You can filter what you read with these categories:</p>\n<ul>\n<li><a href=\"/tags/Non-Technical/\" class=\"category\">Non-Technical</a>: expect to see insights, thoughts, discussions, descriptions of planned experiments, and post-mortems. I might link to articles, studies, or books that provide context, but I'll try to summarize the relevant parts.</li>\n<li><a href=\"/tags/Technical/\" class=\"category\">Technical</a>: expect to see code, statistical analysis, $ \\LaTeX $ formulae, links to <a href=\"https://github.com/candu\">Github</a> repos, and algorithm descriptions. I'll assume familiarity with programming and mathematics, or at least a willingness to learn.</li>\n</ul>\n<p>In addition, many of my posts will be connected to one or more experiments. For instance, my upcoming posts on self-tracking to address panic disorder will fall under the <a href=\"/tags/Panic/\" class=\"category\">Panic</a> category. For every experiment, I'll attempt to post content in both the <a href=\"/tags/Non-Technical/\" class=\"category\">Non-Technical</a> and <a href=\"/tags/Technical/\" class=\"category\">Technical</a> categories.</p>\n<p>Of course, I'll be glad to answer any questions you have, technical or otherwise!</p>\n",
      "date_published": "2012-10-02T00:00:00Z"
    }
  ]
}
